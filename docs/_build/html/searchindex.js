Search.setIndex({"docnames": ["apps/auto_perspective/index", "apps/auto_perspective/perspective", "chat/base_chat", "chat/chat", "chat/index", "chat/memory_chat", "index", "memory/indexes/index", "memory/indexes/memory_index", "memory/indexes/pandas_index", "memory/kernels/index", "memory/kernels/kernel_clustering", "memory/kernels/kernel_utils", "memory/kernels/memory_kernel", "memory/kernels/multi_kernel", "memory/kernels/multi_kernel_visualization", "memory/threads/base_thread", "memory/threads/fifo_thread", "memory/threads/index", "memory/threads/vector_thread", "models/embedders/ada2", "models/embedders/cohere", "models/embedders/index", "models/embedders/sbert", "models/generators/chatgpt", "models/generators/cohere", "models/generators/index", "processors/github_processors", "processors/os_processor", "processors/parsers/git_metadata", "processors/parsers/index", "processors/parsers/python_parser", "processors/parsers/visitors", "tasks/base_task", "tasks/embedding_task", "tasks/index", "tasks/llm_task", "tasks/multi_kernel_task", "tasks/topic_tree_task", "utils/chatml", "utils/hf_datasets", "utils/index", "utils/pandas"], "filenames": ["apps/auto_perspective/index.rst", "apps/auto_perspective/perspective.rst", "chat/base_chat.rst", "chat/chat.rst", "chat/index.rst", "chat/memory_chat.rst", "index.rst", "memory/indexes/index.rst", "memory/indexes/memory_index.rst", "memory/indexes/pandas_index.rst", "memory/kernels/index.rst", "memory/kernels/kernel_clustering.rst", "memory/kernels/kernel_utils.rst", "memory/kernels/memory_kernel.rst", "memory/kernels/multi_kernel.rst", "memory/kernels/multi_kernel_visualization.rst", "memory/threads/base_thread.rst", "memory/threads/fifo_thread.rst", "memory/threads/index.rst", "memory/threads/vector_thread.rst", "models/embedders/ada2.rst", "models/embedders/cohere.rst", "models/embedders/index.rst", "models/embedders/sbert.rst", "models/generators/chatgpt.rst", "models/generators/cohere.rst", "models/generators/index.rst", "processors/github_processors.rst", "processors/os_processor.rst", "processors/parsers/git_metadata.rst", "processors/parsers/index.rst", "processors/parsers/python_parser.rst", "processors/parsers/visitors.rst", "tasks/base_task.rst", "tasks/embedding_task.rst", "tasks/index.rst", "tasks/llm_task.rst", "tasks/multi_kernel_task.rst", "tasks/topic_tree_task.rst", "utils/chatml.rst", "utils/hf_datasets.rst", "utils/index.rst", "utils/pandas.rst"], "titles": ["&lt;no title&gt;", "SubjectPerspectiveAnalyzer", "Prompter", "Chat", "&lt;no title&gt;", "FifoChat", "Welcome to BabyDragon\u2019s documentation!", "&lt;no title&gt;", "MemoryIndex", "PandasIndex", "&lt;no title&gt;", "ClusterPaths", "kernel_utils", "MemoryKernel", "MultiKernel", "MultiKernelVisualization", "BaseThread", "FifoThread", "&lt;no title&gt;", "VectorThread", "OpenAiEmbedder", "CohereEmbedder", "&lt;no title&gt;", "SBERTEmbedder", "chatgpt", "cohere", "&lt;no title&gt;", "GithubProcessor", "OsProcessor", "IssueParser", "&lt;no title&gt;", "PythonMinifier", "FunctionCallFinder", "BaseTask", "EmbeddingTask", "&lt;no title&gt;", "LLMReader", "MultiKernelTask", "TopicTreeTask", "chatml", "hf_datasets", "&lt;no title&gt;", "pandas"], "terms": {"app": [0, 1], "auto_perspect": [0, 1], "perspect": [0, 1], "rst": [0, 4, 7, 10, 18, 22, 26, 30, 35, 41], "class": [1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 42], "subjectperspectiveanalyz": 6, "def": 42, "__init__": 42, "self": [8, 19, 27, 33, 37, 38, 42], "chatbot": [1, 2, 3, 5, 9, 36, 37, 38], "chat": [1, 2, 4, 5, 9, 36], "analyze_subject_perspect": 1, "user_subject": 1, "str": [1, 2, 3, 5, 8, 9, 13, 14, 15, 16, 19, 20, 27, 28, 31, 33, 34, 36, 37, 38, 42], "user_perspect": 1, "dict": [1, 2, 3, 5, 14, 16, 17, 19, 27, 29, 37, 38, 42], "prompt": [2, 3, 5], "f": 42, "gener": [1, 13, 14, 26, 42], "idea": 1, "concept": [], "explor": [], "connect": 42, "between": [16, 42], "consid": [1, 13, 42], "both": [5, 42], "tradit": [], "unconvent": [], "approach": [], "list": [1, 2, 3, 5, 8, 9, 11, 16, 19, 20, 27, 28, 29, 31, 33, 34, 36, 37, 42], "kei": [23, 42], "topic": [], "would": 42, "help": 42, "analyz": [], "through": [3, 42], "len": 42, "includ": [3, 5, 16, 42], "relev": 42, "principl": 17, "theori": [], "model": [2, 3, 5, 8, 20, 21, 22, 23, 26], "identifi": [33, 42], "potenti": 42, "area": 42, "research": [], "where": 42, "intersect": 42, "highlight": [], "intrigu": [], "innov": [], "output": [2, 5, 42], "ratelimitedthreadpoolexecutor": [], "max_work": [8, 9, 33, 34, 36, 37, 38], "3": [8, 31, 42], "calls_per_minut": [9, 33, 34, 36, 37, 38], "20": [9, 42], "verbos": [2, 5, 8, 19, 20, 21, 42], "fals": [5, 8, 13, 19, 20, 21, 36, 42], "executor": [], "future_to_prompt": [], "submit": [], "_analyze_prompt": [], "futur": [1, 42], "as_complet": [], "try": 42, "result": [1, 19, 33, 37, 38, 42], "except": 42, "exc": [], "counter": [], "0": [5, 13, 19, 42], "print": 42, "an": [3, 5, 8, 9, 14, 19, 42], "occur": 42, "while": 42, "break": 42, "1": [5, 8, 9, 19, 31, 42], "return": [1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 19, 27, 28, 29, 31, 32, 33, 37, 38, 42], "respons": [2, 5, 42], "repli": 2, "_format_respons": [], "formatted_respons": [], "strip": 42, "split": 42, "n": 42, "ideat": 6, "memory_index": [1, 7, 8], "memoryindex": [1, 3, 5, 6, 9, 13, 36], "retrieve_idea": 1, "queri": [1, 2, 3, 5, 8, 9, 19, 42], "k": [1, 3, 5, 8, 13, 19, 42], "int": [1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 19, 33, 34, 36, 37, 38, 42], "30": [1, 42], "max_token": [1, 2, 3, 8, 16, 19], "10000": [1, 42], "base": [1, 2, 14, 33, 42], "given": [1, 2, 3, 5, 28, 31, 42], "arg": 42, "The": [1, 3, 5, 8, 9, 13, 14, 16, 19, 32, 33, 37, 38, 42], "number": [1, 3, 5, 8, 13, 14, 16, 27, 29, 33, 42], "top": [1, 8, 42], "search": [1, 9, 16, 19, 42], "maximum": [1, 3, 5, 33, 42], "token": [1, 3, 5, 8, 16, 17], "A": [1, 2, 3, 5, 8, 9, 11, 13, 14, 16, 33, 42], "item": 42, "i": [2, 3, 5, 8, 13, 14, 16, 17, 19, 27, 31, 33, 37, 38, 42], "none": [2, 3, 5, 8, 9, 14, 16, 27, 28, 31, 32, 33, 36, 37, 38, 42], "10": [1, 3, 5, 8, 19, 42], "continu": 42, "top_k_hint": [], "score": [9, 19, 42], "indic": [2, 5, 33, 42], "token_bound_queri": [8, 19], "last_queri": [], "query_histori": [], "hints_token": [], "returned_token": [], "append": 42, "key_task": [], "hint": [3, 42], "ideaclust": 6, "max_tokens_per_clust": 1, "idea_index": [], "create_idea_index": 1, "cluster_label": [], "gathered_doc": [], "set": [3, 5, 9, 19, 32, 42], "valu": [8, 9, 13, 19, 34, 42], "is_batch": 8, "true": [2, 5, 8, 19, 33, 37, 38, 42], "name": [3, 5, 8, 9, 13, 14, 16, 27, 42], "cluster_embed": 1, "n_neighbor": 1, "min_cluster_s": 1, "5": [1, 5, 19, 42], "reduc": 42, "umap": [], "reduced_embed": [], "fit_transform": [], "get_all_embed": 8, "cluster": 14, "hdbscan": 14, "label": [1, 27, 29, 42], "fit_predict": [], "token_count_per_clust": [], "count_tokens_per_clust": 1, "max": [5, 42], "creat": [2, 3, 8, 9, 13, 19, 28, 42], "successfulli": 42, "els": 42, "exce": 42, "count": 42, "doc": [38, 42], "zip": 42, "encod": [8, 42], "create_minimum_spanning_path": 1, "rais": [3, 42], "valueerror": [3, 42], "you": [2, 42], "must": 42, "run": [31, 42], "befor": [16, 42], "minimum": 42, "span": [], "path": [8, 9, 14, 15, 27, 33, 34, 36, 42], "unique_label": [], "np": [13, 42], "uniqu": [6, 33, 42], "min_span_path": [], "get": [2, 3, 8, 16, 31, 42], "current": [2, 3, 42], "cluster_indic": [], "calcul": [16, 42], "pairwis": 42, "distanc": 42, "embed": [8, 11, 13, 14, 15, 19], "dist_matrix": [], "squareform": [], "pdist": [], "graph": 13, "from": [3, 5, 8, 9, 16, 17, 19, 28, 31, 42], "matrix": [13, 42], "nx": [], "from_numpy_arrai": [], "comput": [13, 19, 42], "tree": [31, 42], "min_span_tre": [], "minimum_spanning_tre": [], "min_span_paths_clust": [], "visit": 31, "u": 42, "v": [13, 42], "edg": 42, "orig_u": [], "orig_v": [], "add": [2, 9, 16, 17, 19, 31, 42], "last": [16, 42], "node": [13, 31, 32, 42], "complet": 42, "plot_embeddings_with_path": [1, 15], "titl": [15, 27, 29], "tsne": [], "n_compon": [], "2": [8, 13, 31, 42], "random_st": [], "42": 42, "plt": [], "figur": 42, "figsiz": 42, "8": 42, "color": 42, "cm": 42, "rainbow": [], "linspac": [], "enumer": 42, "path_embed": [], "scatter": [], "j": [13, 42], "rang": 42, "plot": 42, "legend": 42, "show": [2, 42], "get_clustered_idea": 1, "clustered_idea": [], "convert": 42, "dictionari": [14, 16, 42], "each": [13, 27, 29, 31, 33, 42], "correspond": [8, 9, 33, 42], "summar": 6, "text": [1, 2, 8, 23, 42], "summarize_text": 1, "12": 42, "200": 42, "future_to_text": [], "_summarize_text": [], "summari": 42, "cohere_summar": [], "xlarg": [], "length": [14, 42], "auto": 42, "extract": 42, "low": 42, "format": [8, 42], "perspectivepromptgener": 6, "subject": [], "base_filenam": [], "prompt_": [], "lock": [], "thread": [5, 16, 17, 18, 19, 33, 42], "handle_futur": 1, "complete_filenam": [], "json": 42, "acquir": [], "write": [9, 36, 42], "file": [8, 28, 31, 33, 37, 38, 42], "save_prompts_to_json": 1, "e": 42, "error_report": [], "error": [31, 33, 37, 38, 42], "traceback": 42, "format_exc": [], "generate_prompt": 1, "generate_perspective_prompt": [], "add_done_callback": [], "shutdown": [], "wait": [], "filenam": [1, 42], "open": [27, 29, 42], "w": [13, 42], "dump": [], "prompter": [3, 5, 6], "thi": [2, 3, 8, 16, 31, 32, 42], "handl": [2, 3, 33, 37, 38, 42], "system": [2, 3, 5, 42], "user": [2, 3, 5, 27, 42], "prompt_func": 2, "By": [2, 9, 42], "subclass": [2, 9, 16, 42], "overrid": [2, 42], "can": [2, 16, 19, 42], "chang": [2, 3, 42], "wai": [2, 42], "ar": [2, 3, 5, 8, 17, 19, 33, 37, 38, 42], "compos": [2, 5], "system_prompt": [2, 3, 5, 37, 38], "user_prompt": [2, 3, 5], "initi": [8, 42], "param": [8, 42], "string": [2, 3, 5, 9, 16, 42], "repres": [2, 3, 5, 9, 14, 42], "default_system_prompt": [], "user_defined_system_prompt": [], "default_user_prompt": 2, "user_defined_user_prompt": [], "callabl": [9, 42], "tupl": [2, 5, 8, 9, 13, 15, 19, 31, 33, 42], "one_shot_prompt": 2, "user_defined_id": [], "user_defined_valu": [], "use_user_defined_id": [], "set_default_prompt": 2, "messag": [2, 3, 5, 8, 13, 16, 17, 19, 27, 29, 36, 37, 38], "question": [2, 3, 5, 42], "gpt": [2, 5], "api": [2, 5, 42], "contain": [2, 5, 8, 9, 13, 16, 27, 29, 33, 42], "mark": [2, 5, 42], "marked_quest": [], "mark_quest": [], "mark_system": [], "update_system_prompt": 2, "new_prompt": 2, "updat": [2, 9, 13, 19, 42], "new": [2, 8, 9, 42], "update_user_prompt": 2, "basechat": [3, 5, 6, 37, 38], "defin": [2, 3, 5, 17, 42], "basic": [2, 42], "function": [2, 19, 27, 31, 42], "should": [2, 16, 33, 42], "have": [2, 9, 42], "mainli": 2, "call": [2, 31, 32, 42], "gradio": 2, "interfac": [2, 42], "It": [2, 31, 42], "ha": [2, 16, 31, 42], "act": [2, 42], "placehold": 2, "without": [2, 31, 42], "ani": [2, 16, 33, 34, 42], "addit": [2, 42], "overridden": [2, 42], "max_output_token": [2, 3, 5], "us": [2, 3, 8, 13, 14, 16, 17, 19, 23, 42], "integ": 42, "turbo": [], "tiktoken": [], "encoding_for_model": [], "failed_respons": [], "input": [2, 5, 42], "identity_prompt": 2, "__getstate__": [], "state": [2, 27, 29, 42], "__dict__": [], "copi": [8, 28, 42], "remov": [5, 8, 9, 16, 17, 31, 42], "attribut": 42, "del": [], "__setstate__": [], "reiniti": [], "after": [16, 42], "unpickl": [], "simpl": [2, 42], "ident": [2, 42], "take": [2, 42], "origin": [2, 13, 42], "chat_respons": 2, "bool": [2, 5, 8, 13, 19, 27, 31, 32, 33, 34, 36, 42], "statu": [], "chatgpt_respons": [], "elif": [], "command": 42, "cohere_respons": [], "": [2, 5, 13, 42], "content": [16, 19, 23, 42], "option": [2, 5, 9, 13, 14, 42], "markdown": [2, 5, 8, 42], "boolean": [2, 5, 42], "whether": [2, 5, 8, 13, 33, 42], "displai": [2, 5, 42], "_": 42, "success": 42, "answer": 5, "get_mark_from_respons": [], "anwser": [], "get_str_from_respons": [], "openai": [], "insid": 42, "reset_log": 2, "reset": [2, 16, 42], "memori": [2, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 42], "get_log": 2, "three": [2, 42], "run_text": 2, "process": [2, 13, 27, 31, 42], "two": [2, 16, 42], "memory_thread": 17, "No": 42, "fail": [33, 42], "here": 42, "launch": 2, "gr": [], "block": 42, "css": 42, "overflow": 42, "y": 42, "height": 42, "500px": [], "demo": [], "elem_id": [], "neuraldragonai": [], "alpha": 42, "v0": 42, "row": [9, 42], "column": [8, 9, 42], "scale": 13, "txt": 42, "textbox": [], "show_label": [], "enter": [], "press": [], "upload": 42, "imag": [], "style": 42, "15": 42, "min_width": [], "clear": [3, 42], "button": [], "lambda": 42, "server_nam": [], "localhost": 42, "server_port": [], "7860": [], "combin": [3, 5, 19, 42], "oneshot": 3, "abil": [3, 42], "multipl": [3, 42], "index_dict": [3, 5], "1000": 42, "max_index_memori": [3, 5], "setup_indic": 3, "add_user_defined_id": 3, "id_dict": 3, "setup_index_prompt": 3, "current_index": [], "index": [3, 7, 8, 9, 13, 17, 19, 33, 36, 42], "avail": [3, 17, 42], "so": 42, "index_system_prompt": [], "get_index_hint": 3, "default": [9, 13, 14, 19, 42], "setup": 3, "thei": [3, 19, 42], "most": [3, 5, 8, 19, 42], "similar": [3, 5, 8, 9, 13, 19, 42], "retriev": [3, 8, 42], "id": [8, 36, 37, 38, 42], "index_inst": [], "isinst": [], "valid": 42, "instanc": [9, 14, 42], "hints_str": [], "join": 42, "hint_prompt": [], "index_hint_prompt": [], "question_intro": [], "set_current_index": 3, "index_nam": [3, 42], "If": [3, 9, 14, 16, 19, 27, 42], "provid": [3, 8, 14, 42], "base_chat": [2, 4], "memory_chat": [4, 5], "fifochat": 6, "fifothread": 6, "fifo": [5, 17], "oldest": [5, 17, 19], "first": [5, 16, 17, 19, 42], "when": [5, 17, 42], "reach": [5, 17], "max_memori": [5, 16, 17], "limit": [5, 16, 17, 33, 42], "term": [5, 17, 42], "out": [5, 17, 42], "pass": [5, 13, 17, 42], "longterm_memori": [5, 17], "lucid_memori": [5, 17], "redund": [5, 17, 42], "store": [5, 14, 16, 17, 42], "all": [5, 8, 9, 13, 16, 17, 23, 27, 28, 29, 31, 42], "union": 42, "pandasindex": [5, 6], "fifo_memori": [], "400": 42, "max_fifo_memori": 5, "2048": [], "longterm_thread": 5, "basethread": [5, 6, 17, 19], "fifo_memory_prompt": 5, "ad": [5, 19, 42], "method": [31, 42], "add_messag": [16, 17, 19], "vectorchat": 6, "vectorthread": [5, 6], "vector": [5, 19, 42], "construct": [5, 42], "fill": [5, 42], "until": [5, 17, 42], "vector_memori": [], "max_vector_memori": 5, "max_context": [], "vector_memory_prompt": 5, "sorted_messag": [], "sorted_scor": [], "sorted_indic": [], "sorted_queri": 19, "revers": [19, 42], "weighted_memory_prompt": 5, "decay_factor": [5, 19], "float": [5, 8, 9, 13, 15, 19, 38, 42], "temporal_weight": [5, 19], "weight": [5, 13, 19, 42], "decai": [5, 19], "factor": [5, 6, 19, 42], "tempor": [5, 19, 42], "aspect": 5, "weighted_messag": [], "weighted_scor": [], "weighted_indic": [], "weighted_queri": 19, "order_bi": 19, "chronolog": 19, "fifovectorchat": 6, "fifo_vector_memori": [], "longterm_frac": 5, "total_max_memori": [], "setup_longterm_memori": 5, "fifovector_memory_prompt": 5, "prompt_list": [], "up": [5, 9, 42], "long": [5, 42], "alloc": [5, 42], "compon": [5, 42], "amount": [5, 42], "fraction": [5, 42], "dedic": [5, 42], "short": 5, "total_token": [], "perspective_prompt": [], "default_prompt": [], "llm_task": [35, 36], "multi_kernel_task": [35, 37], "base_task": [33, 35], "topic_tree_task": [35, 38], "embedding_task": [34, 35], "memory_kernel": [10, 13], "kernel_clust": [10, 11], "multi_kernel": [10, 14], "multi_kernel_visu": [10, 15], "kernel_util": [6, 10], "base_thread": [16, 18], "fifo_thread": [17, 18], "vector_thread": [18, 19], "python_thread": [], "python_index": 7, "pandas_index": [7, 9], "youtube_index": [], "parquet_index": [], "wiki_index": [], "gutenberg_index": [], "github_index": [], "multi_index": [], "multithread": [41, 42], "panda": [6, 8, 9, 41], "power": 6, "data": [6, 20, 21, 23], "analysi": 6, "manipul": 6, "librari": 6, "python": [6, 31], "arrowdtyp": [6, 42], "booleandtyp": [6, 42], "categor": [6, 42], "categoricaldtyp": [6, 42], "categoricalindex": [6, 42], "datafram": [6, 8, 9, 42], "dateoffset": [6, 42], "datetimeindex": [6, 42], "datetimetzdtyp": [6, 42], "excelfil": [6, 42], "excelwrit": [6, 42], "flag": [6, 33, 42], "float32dtyp": [6, 42], "float64dtyp": [6, 42], "grouper": [6, 42], "hdfstore": [6, 42], "int16dtyp": [6, 42], "int32dtyp": [6, 42], "int64dtyp": [6, 42], "int8dtyp": [6, 42], "interv": [6, 42], "intervaldtyp": [6, 42], "intervalindex": [6, 42], "multiindex": [6, 42], "namedagg": [6, 42], "period": [6, 42], "perioddtyp": [6, 42], "periodindex": [6, 42], "rangeindex": [6, 42], "seri": [6, 9, 42], "sparsedtyp": [6, 42], "stringdtyp": [6, 42], "timedelta": [6, 42], "timedeltaindex": [6, 42], "timestamp": [6, 42], "uint16dtyp": [6, 42], "uint32dtyp": [6, 42], "uint64dtyp": [6, 42], "uint8dtyp": [6, 42], "arrai": [6, 13, 42], "bdate_rang": [6, 42], "concat": [6, 42], "crosstab": [6, 42], "cut": [6, 42], "date_rang": [6, 42], "eval": [6, 42], "from_dummi": [6, 42], "get_dummi": [6, 42], "infer_freq": [6, 42], "interval_rang": [6, 42], "isna": [6, 42], "isnul": [6, 42], "json_norm": [6, 42], "lreshap": [6, 42], "melt": [6, 42], "merg": [6, 42], "merge_asof": [6, 42], "merge_ord": [6, 42], "notna": [6, 42], "notnul": [6, 42], "option_context": [6, 42], "period_rang": [6, 42], "pivot": [6, 42], "pivot_t": [6, 42], "qcut": [6, 42], "read_clipboard": [6, 42], "read_csv": [6, 42], "read_excel": [6, 42], "read_feath": [6, 42], "read_fwf": [6, 42], "read_gbq": [6, 42], "read_hdf": [6, 42], "read_html": [6, 42], "read_json": [6, 42], "read_orc": [6, 42], "read_parquet": [6, 42], "read_pickl": [6, 42], "read_sa": [6, 42], "read_spss": [6, 42], "read_sql": [6, 42], "read_sql_queri": [6, 42], "read_sql_tabl": [6, 42], "read_stata": [6, 42], "read_tabl": [6, 42], "read_xml": [6, 42], "set_eng_float_format": [6, 42], "show_vers": [6, 42], "test": [6, 42], "timedelta_rang": [6, 42], "to_datetim": [6, 42], "to_numer": [6, 42], "to_pickl": [6, 42], "to_timedelta": [6, 42], "value_count": [6, 42], "wide_to_long": [6, 42], "hf_dataset": [6, 41], "chatml": [6, 41], "ada2": [20, 22], "coher": [6, 8, 21, 22, 26], "sbert": [22, 23], "chatgpt": [6, 26], "github_processor": 27, "os_processor": 28, "git_metadata": [29, 30], "visitor": [30, 31, 32], "python_pars": [30, 31], "subs_pars": [], "latex_pars": [], "md_parser": [], "wiki_pars": [], "git_processor": [], "arxiv_processor": [], "wiki_processor": [], "chatgpt_processor": [], "mit_course_processor": [], "youtube_processor": [], "pubmed_processor": [], "gutenberg_processor": [], "allow": [9, 19, 42], "specifi": [9, 27, 29, 42], "inherit": [9, 42], "df": [9, 42], "pd": 42, "row_func": 9, "load": [8, 42], "object": [8, 33, 42], "them": 42, "singl": [9, 42], "parent": 42, "iterrow": 42, "add_to_index": 8, "dure": 42, "setup_column": 9, "save": [8, 33, 37, 38, 42], "col": 42, "executed_task": [], "from_panda": 8, "query_column": 9, "match": [9, 16, 42], "its": [9, 42], "extend": 42, "faiss_queri": 8, "keyerror": 42, "found": 42, "pandadb": [], "add_row": 9, "to_fram": 42, "t": [13, 42], "ignore_index": 42, "remove_row": 9, "remove_from_index": 8, "drop": 42, "inplac": 42, "reset_index": 42, "indexerror": [], "bound": [8, 42], "rows_from_valu": 9, "particular": [9, 42], "loc": 42, "apply_llmtask": 9, "task_nam": 9, "write_func": 9, "task_id": [9, 33, 34, 36, 37, 38], "appli": [9, 42], "task": [9, 33, 34, 35, 36, 37, 38], "main": [9, 27, 29, 33, 37, 38], "modifi": [9, 42], "write_task": 9, "basetask": [6, 9], "modified_df": [], "write_index": 42, "llmwriter": 6, "context": [36, 37, 38, 42], "new_index": 42, "map": 42, "old": 42, "old_to_new_valu": [], "new_column": 42, "axi": 42, "iter": 42, "over": 42, "x": 42, "avoid": 42, "leak": [], "pythonindex": [], "pythonpars": 6, "directory_path": [27, 28, 31], "save_path": [8, 13, 33], "minify_cod": [27, 31], "remove_docstr": [27, 31], "backup": [8, 33, 34, 36, 37, 38], "filter": [], "class_funct": [], "check": 42, "folder": [], "exist": [28, 42], "storag": 42, "load_directori": [], "o": 42, "loadcheck": [], "even": 42, "scratch": 8, "sourc": [1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 42], "code": [31, 42], "function_source_cod": [], "class_source_cod": [], "process_directori": 31, "concaten": 42, "todo": [], "kernel": [10, 11, 13, 14, 15], "clusterpath": 6, "create_path": 11, "ndarrai": [8, 11, 13, 15, 42], "num_clust": [11, 14], "notimplementederror": 42, "hdbscanpath": [6, 14], "cluster_assign": [], "spectralclusteringpath": [6, 14], "n_sampl": [], "shape": 42, "min": 42, "spectral_clust": [], "spectralclust": [], "n_cluster": [], "affin": [], "precomput": [], "memorykernel": [6, 14], "mem_index": 13, "hop": 13, "super": [], "create_k_hop_index": 13, "empti": 42, "pleas": 42, "cos_sim": 13, "b": [13, 42], "cosin": 13, "re": [13, 42], "newaxi": [], "a_norm": [], "linalg": [], "norm": [], "ord": [], "keepdim": [], "b_norm": [], "dot": 42, "compute_kernel": 13, "embedding_set": 13, "threshold": [13, 42], "65": 13, "use_softmax": 13, "adjac": [13, 42], "paramet": [1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 27, 28, 31, 32, 33, 34, 36, 37, 38, 42], "numpi": [13, 42], "softmax": 13, "cos_sim_batch": 13, "batch": 13, "adj_matrix": 13, "exp": 42, "sum": 42, "zeros_lik": [], "astyp": 42, "float32": 42, "k_hop_message_pass": 13, "node_featur": 13, "aggreg": [13, 42], "featur": 13, "a_k": 13, "agg_featur": 13, "neighborhood": 13, "matrix_pow": [], "tqdm": 42, "matmul": [], "graph_sylvester_embed": 13, "g": [13, 42], "m": [13, 42], "spectral": [13, 14], "descriptor": 13, "wavelet": 13, "vertic": [13, 42], "singular": [13, 42], "node_embed": 13, "d_be": [], "diag": [], "l_be": [], "sqrt": 42, "diagon": 42, "c": 42, "solve_sylvest": [], "svd": [], "full_matric": [], "u_m": [], "s_m": [], "zero": [31, 42], "gen_gse_embed": 13, "7": [13, 42], "sylvest": 13, "equal": [19, 42], "space": [17, 42], "gse_embed": [], "k_hop_index": [], "init_index": 8, "classmethod": [8, 13, 42], "from_task_result": 13, "cl": 42, "task_memory_index": 13, "new_memory_kernel": [], "multikernel": [6, 15], "memory_kernel_dict": [14, 37, 38], "memory_kernel_group": 15, "path_group": [14, 37], "hdbscanmultikernel": 6, "cluster_path": 14, "generate_path_group": 14, "spectralclusteringmultikernel": 6, "multikernelvisu": 6, "visualize_path": 15, "loop": 42, "group": [14, 42], "plot_singular_valu": 15, "multikernelstabilityanalysi": 6, "get_cluster_label": 15, "kernel_label": 15, "dtype": 42, "cluster_index": [], "compute_nmi": 15, "kernel_label1": 15, "kernel_label2": 15, "cluster_labels1": [], "cluster_labels2": [], "nmi": [], "normalized_mutual_info_scor": [], "evaluate_st": 15, "pairwise_combin": [], "itertool": [], "nmi_sum": [], "stability_scor": [], "keep": [16, 33, 42], "track": [16, 33], "convers": [16, 42], "total": [16, 42], "which": [23, 42], "mean": [19, 23, 31, 42], "time_stamp": [16, 42], "message_token": [], "__getitem__": 42, "idx": [16, 17, 42], "__len__": [], "reset_memori": 16, "get_message_token": 16, "message_dict": [16, 17, 19], "role": 16, "check_dict": [], "6": 42, "get_message_rol": 16, "time": [16, 42], "full": [17, 42], "wa": 42, "remove_messag": 16, "need": 42, "either": [19, 42], "search_result": [], "find_messag": 16, "pop": 42, "find": [16, 42], "exact": [16, 42], "dictioanri": [], "target": 42, "find_rol": 16, "specif": [16, 42], "last_messag": 16, "first_messag": 16, "messages_befor": 16, "ci": 42, "siamo": [], "mess": [], "messages_aft": 16, "messages_between": 16, "start_messag": 16, "end_messag": 16, "start_idx": [], "end_idx": [], "messages_more_token": 16, "more": [16, 42], "than": [16, 42], "messages_less_token": 16, "less": [16, 42], "messages_between_token": 16, "start_token": 16, "end_token": 16, "messages_before_tim": 16, "messages_after_tim": 16, "messages_between_tim": 16, "start_tim": [16, 42], "end_tim": [16, 42], "token_bound_histori": 16, "max_histori": 16, "redundant_thread": [], "alia": 42, "make": 42, "readabl": 42, "to_longterm": 17, "move": [17, 28, 42], "longterm": [], "deepcopi": 42, "preso": [], "il": [], "messagio": [], "provo": [], "aggiungerlo": [], "al": [], "enough": [17, 42], "chek": [], "faiss": [8, 19], "order": [19, 42], "choos": [19, 42], "use_mark": 19, "local_index": [], "indexflatip": [], "embedd": [8, 20, 21, 22, 23, 34], "get_embedding_s": [20, 21, 23], "index_messag": 19, "onli": [19, 42], "4000": [8, 19], "sort": [19, 33, 42], "return_from_thread": 19, "recent": [19, 42], "otherwis": [19, 42], "unsorted_messag": [], "unsorted_scor": [], "unsorted_indic": [], "num_result": [], "sublist": [], "type": [1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 19, 28, 31, 32, 33, 37, 38, 42], "fetch": 42, "exponenti": [19, 42], "rate": [19, 33, 42], "multipli": [19, 42], "control": [19, 33, 42], "rel": [19, 42], "import": [19, 42], "invalid": 42, "sim_messag": [], "sim_scor": [], "sim_indic": [], "histori": 42, "hist_messag": [], "hist_indic": [], "combined_messag": [], "combined_indic": [], "popul": 42, "perform": 42, "new_query_result": [], "new_query_scor": [], "new_query_indic": [], "normal": 42, "temp_weight": [], "sorting_kei": [], "sorted_result": [], "exceed": [], "final_result": [], "final_scor": [], "final_indic": [], "current_token": [], "openaiembedd": [6, 8, 34], "ada_embedding_s": [], "emb": [20, 21, 23], "engin": 42, "ada": [], "002": [], "max_context_length": [], "too": 42, "num": 42, "instead": 42, "preprocess": [], "batch_emb": 20, "support": 42, "cohereembedd": [6, 8], "cohere_embedding_s": [], "co": [], "multilingu": [], "22": 42, "sbertembedd": 6, "sbert_embedding_s": [], "model_nam": 23, "minilm": 23, "l6": 23, "v2": 23, "batch_siz": 23, "128": [23, 42], "sentenc": 23, "languag": [23, 42], "pool": 23, "sentencetransform": [], "tolist": 42, "unique_sent": [], "breal": [], "got": [], "subsent": [], "show_progress_bar": [], "githubprocessor": 6, "osprocessor": 6, "base_directori": 27, "usernam": 42, "repo_nam": 27, "code_pars": [], "github": 42, "repo": [27, 29], "get_repo": 27, "repo_path": 27, "clone_repo": 27, "clone_url": [], "get_public_repo": 27, "public": 27, "get_us": [], "repo_url": 27, "clone": 27, "url": [8, 27, 42], "replac": 42, "git": [], "target_directori": [], "shutil": [], "rmtree": [], "subprocess": [], "process_repo": 27, "pars": [27, 29, 31, 42], "privat": [], "process_single_repo": 27, "get_issu": [27, 29], "issu": [27, 29, 42], "parse_issu": [27, 29], "bodi": [27, 29, 42], "parsed_issu": [], "get_commit": [27, 29], "commit": [27, 29], "branch": [27, 29], "repositori": [27, 29], "get_branch": [], "sha": [27, 29], "parse_commit": [27, 29], "author": [27, 29], "inform": [8, 27, 29, 42], "parsed_commit": [], "email": [], "date": 42, "processor": [27, 28, 29, 30, 31, 32], "get_all_fil": 28, "directori": [28, 31, 42], "all_fil": [], "root": [14, 42], "walk": 42, "get_files_with_extens": 28, "extens": [28, 42], "files_with_extens": [], "endswith": [], "get_file_extens": 28, "file_path": [28, 31], "suffix": 42, "get_subdirectori": 28, "subdirectori": 28, "d": 42, "listdir": [], "isdir": [], "create_directori": 28, "doe": [28, 31, 42], "makedir": [], "delete_directori": 28, "delet": [28, 42], "copy_fil": 28, "source_path": 28, "destination_path": 28, "one": [28, 42], "locat": [28, 42], "anoth": [28, 42], "copy2": [], "move_fil": 28, "issuepars": 6, "commitpars": 6, "parser": [29, 30, 31, 32, 42], "pythonminifi": 6, "output_cod": [], "minifi": 31, "get_minified_cod": 31, "staticmethod": [], "pythondocstringextractor": 6, "extract_docstr": 31, "function_def": 31, "cst": [], "functiondef": [31, 32], "docstr": [31, 42], "stmt": [], "simplestatementlin": [], "expr": 42, "simplestr": [], "function_nam": [], "describ": 42, "functionandclassvisitor": 6, "cstvisitor": [], "function_nod": [], "class_nod": [], "visit_functiondef": [31, 32], "everi": [31, 42], "follow": [31, 42], "modul": [31, 42], "code_for_nod": [], "visit_classdef": [31, 32], "classdef": [31, 32], "transform": 42, "docstringremov": [], "csttransform": [], "leave_functiondef": 32, "original_nod": [], "updated_nod": [], "startswith": [], "with_chang": [], "_process_fil": [], "read": [31, 36, 42], "r": 42, "utf": 42, "source_cod": [], "parse_modul": [], "parsersyntaxerror": [], "skip": 42, "syntax": [31, 42], "process_fil": 31, "flake8": 31, "non": [31, 42], "exit": 31, "4": [8, 31, 42], "select": 42, "e999": [], "capture_output": [], "returncod": [], "stderr": 42, "decod": 42, "python_fil": [], "py": 42, "directoryprocessor": [], "githubuserprocessor": [], "directory_processor": [], "githubrepoprocessor": [], "get_valu": [], "custom": 42, "argument": 42, "functioncallfind": 6, "metadata_depend": 32, "positionprovid": 32, "visit_cal": 32, "func": 42, "po": [], "get_metadata": [], "start": 42, "line": 42, "arg_start_po": [], "arg_valu": [], "evaluated_valu": [], "multiplicationcountervisitor": 6, "functions_with_operation_dict": [], "current_funct": [], "visit_binaryoper": 32, "binaryoper": 32, "oper": 42, "bitand": [], "attr": 42, "place": [8, 42], "mod": 42, "typingcollector": 6, "stack": 42, "canon": [], "annot": [], "leave_classdef": 32, "pyi": [], "don": 42, "inner": 42, "stop": 42, "travers": 42, "arxivvanitypars": [], "base_url": [], "http": 42, "www": [], "arxiv": [], "vaniti": [], "com": 42, "_get_vanity_url": [], "arxiv_id": [], "urljoin": [], "paper": [], "_fetch_html": [], "request": 42, "status_cod": [], "_extract_main_cont": [], "html": 42, "soup": 42, "beautifulsoup": [], "paragraph": 42, "find_al": [], "div": 42, "ltx_para": [], "p": 42, "get_text": [], "parse_pap": [], "vanity_url": [], "arxivapi": [], "export": 42, "org": 42, "pdf_download_url": [], "pdf": [], "max_result": 42, "search_queri": [], "download_pdf": [], "paper_kei": [], "save_directori": [], "pdf_url": [], "wb": [], "download": 42, "arxivpars": [], "vanity_pars": [], "_parse_arxiv_id": [], "entri": 42, "paper_list": [], "paper_dict": [], "pubmedapi": [], "pubm": [], "ncbi": [], "nlm": [], "nih": [], "gov": [], "entrez": [], "esearch": [], "db": 42, "retmax": [], "record": 42, "close": 42, "idlist": [], "fetch_abstract": [], "pubmed_id": [], "efetch": [], "retmod": [], "rettyp": [], "abstract": 42, "fetch_pmc_full_text": [], "pmc": [], "elink": [], "dbfrom": [], "cmd": [], "prlink": [], "pmc_id": [], "link": 42, "linksetdb": [], "dbto": [], "articl": [], "xml": 42, "xml_content": [], "full_text": [], "pubmedpars": [], "parallel": [33, 42], "rate_limit": 33, "ratelimit": 33, "failed_sub_task": 33, "savepath": [], "_save_results_to_fil": [], "exist_ok": [], "_result": [], "_load_results_from_fil": [], "_execute_sub_task": [], "sub_path": [], "sub_result": [], "implement": 42, "execute_task": [33, 37, 38], "execut": [33, 37, 38, 42], "worker": 33, "execution_start_tim": [], "sub_task_result": [], "execution_end_tim": [], "sub": [33, 42], "2f": [], "second": 42, "save_start_tim": [], "save_end_tim": [], "default_result": [], "keyboardinterrupt": [], "keyboard": [], "interrupt": [], "detect": 42, "work": [8, 33, 42], "index_id": [], "embeddingtask": 6, "1500": [], "expect": 42, "lig": [], "element": 42, "embedded_valu": [], "llmreader": 6, "read_func": [], "llmreadtask": [], "sequenc": 42, "llm_respons": [36, 37, 38], "string_out": 36, "separ": 42, "stask": [], "clean": [], "case": [8, 42], "multi": [33, 42], "chatbot_inst": [], "llmwritetask": [], "new_index_nam": [], "8000": [], "catch": 42, "could": 42, "report": 42, "current_v": [], "content_to_writ": [], "multikerneltask": 6, "parent_kernel_label": [37, 38], "child_kernel_label": [37, 38], "clustering_method": [37, 38], "_setup_memory_kernel_group": [], "generate_task_path": [37, 38], "unknown": 42, "current_nod": [], "size": 42, "sub_task": [], "task_result": [], "new_valu": [], "ascend": 42, "topictreetask": 6, "supplement_index": 38, "sim_threshold": 38, "supplement_valu": [], "indec": [], "topic_tre": [], "create_topic_tre": 38, "util": 41, "60": 42, "last_call_tim": [], "__call__": [], "functool": [], "wrap": 42, "wrapper": [8, 42], "kwarg": 42, "time_since_last_cal": [], "time_to_wait": [], "next": 42, "sleep": [], "requir": 42, "sinc": 42, "threadpoolexecutor": [], "fn": [], "rate_limited_fn": [], "packag": 42, "fast": 42, "flexibl": 42, "express": 42, "structur": 42, "design": 42, "relat": 42, "easi": 42, "intuit": 42, "aim": 42, "fundament": 42, "high": 42, "level": 42, "build": 42, "do": 42, "practic": 42, "real": 42, "world": 42, "addition": 42, "broader": 42, "goal": 42, "becom": 42, "tool": 42, "alreadi": 42, "well": 42, "toward": 42, "just": 42, "few": 42, "thing": 42, "miss": 42, "point": 42, "mutabl": 42, "insert": 42, "higher": 42, "dimension": 42, "automat": 42, "explicit": 42, "align": 42, "explicitli": 42, "simpli": 42, "ignor": 42, "let": 42, "etc": 42, "rag": 42, "differ": 42, "other": 42, "intellig": 42, "slice": 42, "fanci": 42, "subset": 42, "larg": 42, "reshap": 42, "hierarch": 42, "ax": 42, "possibl": 42, "per": 42, "tick": 42, "robust": 42, "io": 42, "flat": 42, "csv": [8, 42], "delimit": 42, "excel": 42, "databas": 42, "ultrafast": 42, "hdf5": 42, "frequenc": 42, "window": 42, "statist": 42, "shift": 42, "lag": 42, "pyarrow_dtyp": 42, "datatyp": 42, "extensiondtyp": 42, "pyarrow": 42, "experiment": 42, "part": 42, "mai": 42, "warn": 42, "accept": 42, "constructor": 42, "int64": 42, "like": 42, "pa": 42, "tz": 42, "america": 42, "new_york": 42, "list_": 42, "construct_array_typ": 42, "type_t": [], "arrowextensionarrai": [], "associ": 42, "construct_from_str": 42, "pyarrow_typ": 42, "items": 42, "byte": 42, "kind": 42, "properti": 42, "numpy_dtyp": 42, "scalar": 42, "booleanarrai": 42, "charact": 42, "biufcmmosuv": 42, "probabl": 42, "cannot": 42, "built": 42, "our": 42, "extensionarrai": 42, "assum": 42, "na": 42, "categori": 42, "complex": 42, "fastpath": 42, "variabl": 42, "classic": 42, "plu": 42, "fashion": 42, "usual": 42, "fix": 42, "In": 42, "contrast": 42, "might": 42, "numer": 42, "divis": 42, "nan": 42, "assign": 42, "outsid": 42, "lexic": 42, "appear": 42, "treat": 42, "respect": 42, "turn": 42, "posit": 42, "from_cod": 42, "__array__": 42, "typeerror": 42, "sortabl": 42, "underli": 42, "guid": 42, "howev": 42, "presenc": 42, "int8": 42, "accord": 42, "add_categori": 42, "new_categori": 42, "highest": 42, "unus": 42, "directli": 42, "rename_categori": 42, "renam": 42, "reorder_categori": 42, "reorder": 42, "remove_categori": 42, "remove_unused_categori": 42, "set_categori": 42, "ones": 42, "argsort": 42, "liter": 42, "quicksort": 42, "mergesort": 42, "heapsort": 42, "stabl": 42, "end": 42, "descend": 42, "algorithm": 42, "intp": 42, "refer": 42, "organ": 42, "togeth": 42, "thu": 42, "unord": 42, "unlik": 42, "cat": 42, "as_ord": 42, "as_unord": 42, "effect": 42, "individu": 42, "same": 42, "unequ": 42, "check_for_ord": 42, "op": 42, "assert": 42, "we": [8, 42], "actual": 42, "There": 42, "setter": 42, "writabl": 42, "view": 42, "descript": 42, "intens": 42, "step": 42, "done": 42, "your": 42, "convent": 42, "isin": 42, "npt": 42, "bool_": 42, "exactli": 42, "equival": 42, "lama": 42, "cow": 42, "beetl": 42, "hippo": 42, "my": 42, "null": 42, "invers": 42, "mapper": 42, "unaffect": 42, "unmap": 42, "happen": 42, "upper": 42, "third": 42, "preserv": 42, "skipna": 42, "memory_usag": 42, "deep": 42, "usag": 42, "introspect": 42, "deepli": 42, "interrog": 42, "consumpt": 42, "consum": 42, "nbyte": 42, "relationship": 42, "were": 42, "extra": 42, "whose": 42, "compris": 42, "For": 42, "action": 42, "simultan": 42, "therefor": 42, "faster": 42, "via": 42, "specialis": 42, "On": 42, "hand": 42, "surpris": 42, "special": 42, "s1": 42, "char": 42, "set_ord": 42, "sort_valu": 42, "na_posit": 42, "put": 42, "begin": 42, "behaviour": 42, "independ": 42, "to_list": 42, "version": 42, "previous": 42, "baabc": 42, "baab": 42, "abc": 42, "dropna": 42, "those": 42, "ordered": 42, "maintain": 42, "resolv": 42, "As": 42, "m8": 42, "categoricaldtypetyp": 42, "update_dtyp": 42, "taken": 42, "fall": 42, "back": 42, "unspecifi": 42, "new_dtyp": 42, "static": [31, 42], "validate_categori": 42, "good": 42, "validate_ord": 42, "verifi": 42, "hashabl": 42, "infer": 42, "instanti": 42, "determin": [33, 42], "inferred_typ": 42, "reindex": 42, "toler": 42, "necessari": 42, "searchsort": 42, "side": 42, "satisfi": 42, "left": 42, "right": 42, "suitabl": 42, "sorter": 42, "typic": 42, "These": 42, "heterogen": 42, "tabular": 42, "arithmet": 42, "thought": 42, "primari": 42, "homogen": 42, "constant": 42, "dataclass": 42, "itself": [8, 42], "frame": 42, "Will": 42, "forc": 42, "behav": 42, "2d": 42, "possibli": 42, "ensur": 42, "from_record": 42, "from_dict": 42, "comma": 42, "clipboard": 42, "col1": 42, "col2": 42, "notic": 42, "To": 42, "enforc": 42, "df2": 42, "9": 42, "i4": 42, "df3": 42, "make_dataclass": 42, "ser": 42, "df1": 42, "transpos": 42, "fill_valu": 42, "wise": 42, "binari": 42, "substitut": 42, "With": 42, "radd": 42, "among": 42, "mul": 42, "pow": 42, "compar": 42, "broadcast": 42, "across": 42, "subtract": 42, "divid": 42, "truediv": 42, "floordiv": 42, "modulo": 42, "remaind": 42, "mismatch": 42, "angl": 42, "degre": 42, "360": 42, "180": 42, "circl": 42, "triangl": 42, "rectangl": 42, "361": 42, "181": 42, "36": 42, "18": 42, "rdiv": 42, "inf": 42, "027778": 42, "333333": 42, "055556": 42, "500000": 42, "358": 42, "178": 42, "359": 42, "179": 42, "720": 42, "1080": 42, "16": 42, "df_multindex": 42, "540": 42, "squar": [14, 42], "pentagon": 42, "hexagon": 42, "agg": 42, "keyword": 42, "sever": 42, "alwai": 42, "behavior": 42, "median": 42, "prod": 42, "std": 42, "var": 42, "flatten": 42, "arr_2d": 42, "oppos": 42, "core": 42, "groupbi": 42, "resampl": 42, "bin": 42, "roll": 42, "expand": 42, "exponentialmovingwindow": 42, "mutat": 42, "produc": 42, "unexpect": 42, "gotcha": 42, "udf": 42, "detail": 42, "evalu": 42, "z": 42, "float64": 42, "outer": 42, "backfil": 42, "bfill": 42, "ffill": 42, "pad": 42, "fill_axi": 42, "broadcast_axi": 42, "compat": 42, "hole": 42, "propag": 42, "observ": 42, "forward": 42, "gap": 42, "consecut": 42, "backward": 42, "word": 42, "partial": 42, "along": 42, "entir": 42, "greater": 42, "dimens": 42, "40": 42, "70": 42, "80": 42, "90": 42, "600": 42, "700": 42, "800": 42, "900": 42, "final": 42, "bool_onli": 42, "unless": 42, "least": 42, "within": 42, "attempt": 42, "everyth": 42, "Not": 42, "exclud": 42, "becaus": 42, "Or": 42, "raw": 42, "result_typ": 42, "depend": [32, 42], "receiv": 42, "reduct": 42, "achiev": 42, "much": 42, "better": 42, "rather": 42, "opposit": 42, "retain": 42, "applymap": 42, "elementwis": 42, "univers": 42, "27": 42, "13": 42, "foo": 42, "bar": 42, "na_act": 42, "356": 42, "567": 42, "000": 42, "120": 42, "df_copi": 42, "iloc": 42, "often": 42, "000000": 42, "494400": 42, "11": 42, "262736": 42, "857489": 42, "But": 42, "asfreq": 42, "freq": 42, "fillnaopt": [], "how": 42, "conform": 42, "timestep": 42, "present": 42, "below": 42, "appropri": 42, "midnight": 42, "upsampl": 42, "logic": 42, "learn": 42, "about": [8, 42], "minut": 42, "2000": 42, "01": 42, "00": 42, "02": 42, "03": 42, "again": 42, "overwritten": 42, "though": 42, "doesn": 42, "later": 42, "newli": 42, "temp_c": 42, "17": 42, "25": 42, "portland": 42, "berkelei": 42, "temp_f": 42, "32": 42, "62": 42, "77": 42, "altern": 42, "referenc": 42, "temp_k": 42, "459": 42, "67": 42, "290": 42, "298": 42, "member": 42, "downcast": 42, "synonym": 42, "fillna": 42, "boxplot": 42, "fontsiz": 42, "rot": 42, "grid": 42, "layout": 42, "return_typ": 42, "backend": 42, "box": 42, "whisker": 42, "some": 42, "graphic": 42, "depict": 42, "quartil": 42, "q1": 42, "q3": 42, "q2": 42, "iqr": 42, "farthest": 42, "outlier": 42, "further": 42, "wikipedia": 42, "One": 42, "matplotlib": 42, "font": 42, "rotat": 42, "screen": 42, "coordin": 42, "width": 42, "inch": 42, "subplot": 42, "drawn": 42, "namedtupl": 42, "whole": 42, "session": 42, "pyplot": 42, "hist": 42, "histogram": 42, "line2d": 42, "abov": 42, "want": 42, "tweak": 42, "cap": 42, "flier": 42, "distribut": 42, "adjust": 42, "give": 42, "suppress": 42, "45": 42, "_subplot": 42, "axessubplot": 42, "clip": 42, "lower": 42, "trim": 42, "boundari": 42, "latter": 42, "col_0": 42, "col_1": 42, "overwrit": 42, "prior": 42, "combine_first": 42, "smaller": 42, "take_smal": 42, "s2": 42, "demonstr": 42, "prefer": 42, "upon": 42, "still": 42, "persist": 42, "align_axi": 42, "keep_shap": 42, "keep_equ": 42, "result_nam": 42, "comparison": 42, "horizont": 42, "kept": 42, "shown": 42, "col3": 42, "corr": 42, "pearson": 42, "kendal": 42, "spearman": 42, "min_period": 42, "numeric_onli": 42, "correl": 42, "standard": 42, "coeffici": 42, "tau": 42, "rank": 42, "1d": 42, "symmetr": 42, "regardless": 42, "pair": 42, "now": 42, "corrwith": 42, "histogram_intersect": 42, "round": 42, "decim": 42, "dog": 42, "four": 42, "arang": 42, "cell": 42, "nat": 42, "mode": 42, "use_inf_as_na": 42, "person": 42, "john": 42, "myla": 42, "lewi": 42, "ag": 42, "24": 42, "21": 42, "33": 42, "26": 42, "uncount": 42, "cov": 42, "ddof": 42, "covari": 42, "bia": 42, "understand": 42, "measur": 42, "delta": 42, "freedom": 42, "divisor": 42, "ewm": 42, "sampl": 42, "random": 42, "unbias": 42, "estim": 42, "varianc": 42, "mani": 42, "applic": 42, "guarante": 42, "semi": 42, "definit": 42, "lead": 42, "absolut": 42, "invert": 42, "matric": 42, "666667": 42, "seed": 42, "randn": 42, "998438": 42, "020161": 42, "059277": 42, "008943": 42, "014144": 42, "059352": 42, "008543": 42, "024738": 42, "009826": 42, "010670": 42, "001486": 42, "000271": 42, "921297": 42, "013692": 42, "977795": 42, "316741": 42, "150812": 42, "248003": 42, "191417": 42, "895202": 42, "cummax": 42, "cumul": 42, "cummin": 42, "cumsum": 42, "cumprod": 42, "product": 42, "ab": 42, "diff": 42, "discret": 42, "previou": 42, "neg": 42, "pct_chang": 42, "percent": 42, "desir": 42, "xor": 42, "28": 42, "3rd": 42, "uint8": 42, "255": 42, "rtruediv": 42, "arr": 42, "shuffl": 42, "omit": 42, "drop_dupl": 42, "duplic": 42, "certain": [8, 42], "midx": 42, "falcon": 42, "speed": 42, "big": 42, "small": 42, "100": 42, "250": 42, "150": 42, "320": 42, "occurr": 42, "dataset": [8, 42], "ramen": 42, "brand": 42, "yum": 42, "indomi": 42, "cup": 42, "pack": 42, "no_default": 42, "_nodefault": 42, "thresh": 42, "alfr": 42, "batman": 42, "catwoman": 42, "toi": 42, "batmobil": 42, "bullwhip": 42, "born": 42, "1940": 42, "04": 42, "look": 42, "denot": 42, "eq": 42, "ne": 42, "le": 42, "lt": 42, "ge": 42, "gt": 42, "inequ": 42, "strictli": 42, "cost": 42, "revenu": 42, "300": 42, "arbitrari": 42, "220": 42, "175": 42, "225": 42, "vulner": 42, "inject": 42, "document": 42, "variou": 42, "enhanc": 42, "explod": 42, "replic": 42, "indexlabel": 42, "rowwis": 42, "unstack": 42, "necessarili": 42, "unpivot": 42, "wide": 42, "routin": 42, "unchang": 42, "determinist": 42, "ac": 42, "what": 42, "interpol": 42, "timeseri": 42, "abcd": 42, "affect": 42, "rfloordiv": 42, "orient": 42, "Of": 42, "form": 42, "field": 42, "tight": 42, "column_nam": 42, "creation": 42, "to_dict": 42, "col_2": 42, "row_1": 42, "row_2": 42, "manual": 42, "n1": 42, "n2": 42, "z1": 42, "z2": 42, "coerce_float": 42, "nrow": 42, "sql": 42, "u1": 42, "as_index": 42, "group_kei": 42, "dataframegroupbi": 42, "involv": 42, "interpret": 42, "off": 42, "influenc": 42, "longer": 42, "piec": 42, "conveni": 42, "anim": 42, "parrot": 42, "380": 42, "370": 42, "375": 42, "captiv": 42, "wild": 42, "from_arrai": 42, "390": 42, "350": 42, "210": 42, "185": 42, "l": 42, "123": 42, "xlabels": 42, "xrot": 42, "ylabels": 42, "yrot": 42, "sharex": 42, "sharei": 42, "represent": 42, "hold": [33, 42], "clockwis": 42, "share": 42, "invis": 42, "alter": 42, "rcparam": 42, "unmodifi": 42, "draw": 42, "idxmax": 42, "maxima": 42, "argmax": 42, "food": 42, "argentina": 42, "51": 42, "103": 42, "55": 42, "48": 42, "co2_emiss": 42, "37": 42, "19": 42, "66": 42, "1712": 42, "pork": 42, "wheat": 42, "beef": 42, "idxmin": 42, "minima": 42, "argmin": 42, "info": 42, "buf": 42, "writebuff": 42, "max_col": 42, "show_count": 42, "concis": 42, "max_info_column": 42, "buffer": 42, "sy": 42, "stdout": 42, "send": 42, "switch": 42, "truncat": 42, "never": 42, "human": 42, "unit": 42, "made": 42, "resourc": 42, "frequent": 42, "ask": 42, "max_info_row": 42, "int_valu": 42, "text_valu": 42, "beta": 42, "gamma": 42, "epsilon": 42, "float_valu": 42, "75": 42, "int_col": 42, "text_col": 42, "float_col": 42, "50": 42, "248": 42, "pipe": 42, "stringio": 42, "getvalu": 42, "df_info": 42, "260": 42, "fine": 42, "tune": 42, "optim": 42, "random_strings_arrai": 42, "choic": 42, "column_1": 42, "column_2": 42, "column_3": 42, "1000000": 42, "999999": 42, "mb": 42, "165": 42, "anyarraylik": [], "allow_dupl": 42, "lib": 42, "nodefault": [], "newcol": 42, "99": 42, "col0": 42, "linear": 42, "limit_direct": 42, "limit_area": 42, "techniqu": 42, "daili": 42, "resolut": 42, "nearest": 42, "slinear": 42, "quadrat": 42, "cubic": 42, "barycentr": 42, "polynomi": 42, "scipi": 42, "interp1d": 42, "wherea": 42, "spline": 42, "univariatesplin": 42, "krogh": 42, "piecewise_polynomi": 42, "pchip": 42, "akima": 42, "cubicsplin": 42, "around": 42, "from_deriv": 42, "bpoli": 42, "direct": 42, "restrict": 42, "surround": 42, "extrapol": 42, "caller": 42, "akima1dinterpol": 42, "piecewis": 42, "bernstein": 42, "basi": 42, "kroghinterpol": 42, "pchipinterpol": 42, "monoton": 42, "single_on": 42, "fill_two_mor": 42, "71": 42, "go": 42, "down": 42, "remain": 42, "isetitem": 42, "analogu": 42, "__setitem__": 42, "arraylik": 42, "pattern": 42, "regex": 42, "num_leg": 42, "num_w": 42, "leg": 42, "wing": 42, "spider": 42, "mask": 42, "1939": 42, "05": 42, "joker": 42, "being": 42, "belong": 42, "itertupl": 42, "speci": 42, "bear": 42, "marsupi": 42, "1864": 42, "22000": 42, "80000": 42, "polar": 42, "koala": 42, "sep": 42, "someth": 42, "regular": 42, "repeat": 42, "underscor": 42, "hawk": 42, "cross": 42, "lsuffix": 42, "rsuffix": 42, "effici": 42, "onc": 42, "vlookup": 42, "lexicograph": 42, "cartesian": 42, "overlap": 42, "one_to_on": 42, "one_to_mani": 42, "many_to_on": 42, "many_to_mani": 42, "versionad": 42, "23": 42, "k0": 42, "k1": 42, "k2": 42, "k3": 42, "k4": 42, "k5": 42, "a0": 42, "a1": 42, "a2": 42, "a3": 42, "a4": 42, "a5": 42, "b0": 42, "b1": 42, "b2": 42, "_caller": 42, "_other": 42, "key_cal": 42, "key_oth": 42, "set_index": 42, "kurt": 42, "kurtosi": 42, "obtain": 42, "fisher": 42, "cond": 42, "condit": 42, "idiom": 42, "misalign": 42, "signatur": 42, "roughli": 42, "preced": 42, "cast": 42, "losslessli": 42, "warm": 42, "cold": 42, "fish": 42, "blood": 42, "id_var": 42, "value_var": 42, "var_nam": 42, "value_nam": 42, "col_level": 42, "leav": 42, "massag": 42, "spreadsheet": 42, "tabl": 42, "myvarnam": 42, "myvalnam": 42, "variable_0": 42, "variable_1": 42, "contribut": 42, "complex128": 42, "5000": 42, "head": 42, "0j": 42, "40000": 42, "footprint": 42, "180000": 42, "5244": 42, "left_on": 42, "right_on": 42, "left_index": 42, "right_index": 42, "_x": 42, "_y": 42, "against": 42, "caveat": 42, "At": 42, "_merg": 42, "left_onli": 42, "right_onli": 42, "lkei": 42, "baz": 42, "rkei": 42, "value_x": 42, "value_i": 42, "_left": 42, "_right": 42, "value_left": 42, "value_right": 42, "rmod": 42, "bird": 42, "mammal": 42, "arthropod": 42, "hors": 42, "ostrich": 42, "rmul": 42, "nlargest": 42, "largest": 42, "priorit": 42, "nsmallest": 42, "59000000": 42, "65000000": 42, "434000": 42, "337000": 42, "11300": 42, "gdp": 42, "1937894": 42, "2583560": 42, "12011": 42, "4520": 42, "12128": 42, "17036": 42, "182": 42, "38": 42, "311": 42, "IT": 42, "fr": 42, "mt": 42, "mv": 42, "bn": 42, "nr": 42, "tv": 42, "ai": 42, "itali": 42, "franc": 42, "malta": 42, "maldiv": 42, "brunei": 42, "iceland": 42, "nauru": 42, "tuvalu": 42, "anguilla": 42, "ti": 42, "smallest": 42, "nuniqu": 42, "distinct": 42, "panel": 42, "friendli": 42, "finer": 42, "zoo": 42, "q": 42, "lev1": 42, "lev2": 42, "lev3": 42, "lev4": 42, "aggfunc": 42, "margin": 42, "margins_nam": 42, "manner": 42, "themselv": 42, "plotaccessor": 42, "389": 42, "lion": 42, "monkei": 42, "max_spe": 42, "rpow": 42, "min_count": 42, "fewer": 42, "thank": 42, "quantil": 42, "midpoint": 42, "li": 42, "whichev": 42, "percentil": 42, "datetim": 42, "2010": 42, "2011": 42, "dai": 42, "07": 42, "environ": 42, "prefix": 42, "backtick": 42, "punctuat": 42, "besid": 42, "digit": 42, "multidimension": 42, "slightli": 42, "bitwis": 42, "cousin": 42, "syntact": 42, "semant": 42, "likewis": 42, "recommend": 42, "ineffici": 42, "numexpr": 42, "namespac": 42, "quot": 42, "intern": 42, "problem": 42, "disallow": 42, "exclam": 42, "dollar": 42, "sign": 42, "euro": 42, "ascii": 42, "0001": 42, "007f": 42, "pep": 42, "3131": 42, "whitespac": 42, "hashtag": 42, "comment": 42, "escap": 42, "confus": 42, "lexical_analysi": 42, "increas": 42, "decreas": 42, "inexact": 42, "equat": 42, "reindex_lik": 42, "index_label": 42, "column_label": 42, "highli": 42, "clarifi": 42, "intent": 42, "fiction": 42, "firefox": 42, "chrome": 42, "safari": 42, "ie10": 42, "konqueror": 42, "http_statu": 42, "404": 42, "301": 42, "response_tim": 42, "08": 42, "iceweasel": 42, "comodo": 42, "dragon": 42, "user_ag": 42, "illustr": 42, "date_index": 42, "price": 42, "101": 42, "89": 42, "88": 42, "06": 42, "suppos": 42, "decid": 42, "cover": 42, "wider": 42, "date_index2": 42, "29": 42, "2009": 42, "31": 42, "did": 42, "scheme": 42, "throw": 42, "rename_axi": 42, "index_mapp": 42, "columns_mapp": 42, "reorder_level": 42, "rearrang": 42, "reptil": 42, "diet": 42, "omnivor": 42, "carnivor": 42, "snake": 42, "to_replac": 42, "dynam": 42, "matter": 42, "rule": 42, "whatev": 42, "nest": 42, "compil": 42, "section": 42, "assertionerror": 42, "datetime64": 42, "under": 42, "hood": 42, "lot": 42, "encourag": 42, "experi": 42, "plai": 42, "gain": 42, "bat": 42, "bait": 42, "xyz": 42, "ba": 42, "peculiar": 42, "why": 42, "silent": 42, "timestampconvertibletyp": [], "start_dai": 42, "offset": 42, "timedeltaconvertibletyp": [], "bm": 42, "bq": 42, "bucket": 42, "timezon": 42, "epoch": 42, "1970": 42, "end_dai": 42, "ceil": 42, "earlier": 42, "releas": 42, "downsampl": 42, "3t": 42, "09": 42, "custom_resampl": 42, "year": 42, "quarter": 42, "2012": 42, "2013": 42, "dec": 42, "2012q1": 42, "2012q2": 42, "2012q3": 42, "2012q4": 42, "2013q1": 42, "2013q2": 42, "2013q3": 42, "2013q4": 42, "month": 42, "2018": 42, "2018q1": 42, "2018q2": 42, "2018q3": 42, "2018q4": 42, "14": 42, "volum": 42, "week_start": 42, "d2": 42, "from_product": 42, "morn": 42, "afternoon": 42, "110": 42, "140": 42, "rng": 42, "7min": 42, "44": 42, "58": 42, "7t": 42, "17min": 42, "54": 42, "17t": 42, "35": 42, "52": 42, "39": 42, "41": 42, "47": 42, "23h30min": 42, "63": 42, "col_fil": 42, "sequenti": 42, "from_tupl": 42, "fly": 42, "jump": 42, "nonexist": 42, "genu": 42, "rsub": 42, "select_dtyp": 42, "suppli": 42, "hierarchi": 42, "timedelta64": 42, "datetimetz": 42, "sem": 42, "set_axi": 42, "ii": 42, "verify_integr": 42, "correct": 42, "encompass": 42, "defer": 42, "improv": 42, "2014": 42, "sale": 42, "84": 42, "realign": 42, "inferred_freq": 42, "tseri": 42, "eom": 42, "That": 42, "neither": 42, "thrown": 42, "introduc": 42, "na_valu": 42, "2020": 42, "skew": 42, "sort_index": 42, "sort_remain": 42, "multilevel": 42, "builtin": 42, "notabl": 42, "234": 42, "col4": 42, "natur": 42, "natsort": 42, "sethmmorton": 42, "0hr": 42, "128hr": 42, "72hr": 42, "48hr": 42, "96hr": 42, "index_natsort": 42, "spars": 42, "sparseframeaccessor": 42, "prescrib": 42, "onto": 42, "analogi": 42, "collect": [32, 42], "book": 42, "reorgan": 42, "df_single_level_col": 42, "multicol1": 42, "kg": 42, "pound": 42, "df_multi_level_cols1": 42, "multicol2": 42, "df_multi_level_cols2": 42, "common": 42, "df_multi_level_cols3": 42, "deviat": 42, "person_id": 42, "43": 42, "61": 42, "87": 42, "49": 42, "786076": 42, "237417": 42, "269219": 42, "205609": 42, "styler": 42, "swaplevel": 42, "swap": 42, "innermost": 42, "grade": 42, "exam": 42, "coursework": 42, "geographi": 42, "januari": 42, "februari": 42, "march": 42, "april": 42, "defaultdict": 42, "to_json": 42, "row1": 42, "row2": 42, "ordereddict": 42, "dd": 42, "to_feath": 42, "filepath": 42, "feather": 42, "pathlik": 42, "partit": 42, "write_feath": 42, "compress": 42, "compression_level": 42, "chunksiz": 42, "to_parquet": 42, "to_gbq": 42, "destination_t": 42, "project_id": 42, "reauth": 42, "if_exist": 42, "auth_local_webserv": 42, "table_schema": 42, "progress_bar": 42, "credenti": 42, "googl": 42, "bigqueri": 42, "gbq": 42, "authent": 42, "instruct": 42, "written": 42, "tablenam": 42, "account": 42, "project": 42, "chunk": 42, "destin": 42, "pandas_gbq": 42, "tablecreationerror": 42, "recreat": 42, "local": 42, "webserv": 42, "flow": 42, "consol": 42, "deprec": 42, "band": 42, "past": 42, "schema": 42, "job": 42, "progress": 42, "auth": 42, "access": 42, "compute_engin": 42, "servic": 42, "oauth2": 42, "service_account": 42, "to_html": 42, "col_spac": 42, "header": 42, "na_rep": 42, "formatt": 42, "float_format": 42, "floatformattyp": 42, "sparsifi": 42, "justifi": 42, "max_row": 42, "show_dimens": 42, "bold_row": 42, "notebook": 42, "border": 42, "table_id": 42, "render_link": 42, "render": 42, "px": 42, "unicod": 42, "configur": 42, "set_opt": 42, "center": 42, "unset": 42, "recogn": 42, "europ": 42, "bold": 42, "safe": 42, "ipython": 42, "tag": 42, "to_str": 42, "to_markdown": 42, "wt": 42, "storage_opt": 42, "storageopt": 42, "sens": 42, "host": 42, "port": 42, "password": 42, "urllib": 42, "s3": 42, "gc": 42, "fsspec": 42, "tabul": 42, "animal_1": 42, "elk": 42, "pig": 42, "animal_2": 42, "quetzal": 42, "tablefmt": 42, "to_numpi": 42, "dtypelik": [], "float16": 42, "coerc": 42, "expens": 42, "asarrai": 42, "lowest": 42, "mix": 42, "to_orc": 42, "engine_kwarg": 42, "orc": 42, "metadata": [32, 42], "write_t": 42, "unsign": 42, "parquet": 42, "to_csv": 42, "to_sql": 42, "to_hdf": 42, "hdf": 42, "instal": 42, "arrow": 42, "bytesio": 42, "doctest": 42, "seek": 42, "snappi": 42, "partition_col": 42, "fname": 42, "fastparquet": 42, "unavail": 42, "gzip": 42, "brotli": 42, "to_period": 42, "2001": 42, "2002": 42, "2003": 42, "yearli": 42, "to_record": 42, "column_dtyp": 42, "index_dtyp": 42, "recarrai": 42, "analog": 42, "rec": 42, "i8": 42, "f8": 42, "int32": 42, "to_stata": 42, "convert_d": 42, "byteord": 42, "data_label": 42, "variable_label": 42, "114": 42, "convert_strl": 42, "compressionopt": [], "value_label": 42, "stata": 42, "dta": 42, "tc": 42, "td": 42, "tm": 42, "tw": 42, "th": 42, "tq": 42, "ty": 42, "littl": 42, "117": 42, "118": 42, "119": 42, "244": 42, "767": 42, "capac": 42, "unintend": 42, "consequ": 42, "novemb": 42, "se": 42, "strl": 42, "gz": 42, "bz2": 42, "xz": 42, "zst": 42, "tar": 42, "zstd": 42, "zipfil": 42, "gzipfil": 42, "bz2file": 42, "zstandard": 42, "zstdcompressor": 42, "tarfil": 42, "reproduc": 42, "archiv": 42, "compresslevel": 42, "mtime": 42, "statawrit": 42, "writer": 42, "statawriter117": 42, "fmt": 42, "line_width": 42, "min_row": 42, "max_colwidth": 42, "alias": 42, "repr": 42, "to_timestamp": 42, "2023": 42, "2024": 42, "to_xml": 42, "path_or_buff": 42, "root_nam": 42, "row_nam": 42, "attr_col": 42, "elem_col": 42, "xml_declar": 42, "pretty_print": 42, "lxml": 42, "stylesheet": 42, "readbuff": 42, "children": 42, "uri": 42, "declar": [32, 42], "pretti": 42, "indent": 42, "etre": 42, "xslt": 42, "script": 42, "xmln": 42, "invok": 42, "718282": 42, "414214": 42, "389056": 42, "2015": 42, "108": 42, "121": 42, "reflect": 42, "vice": 42, "versa": 42, "accessor": 42, "permut": 42, "d1": 42, "df1_transpos": 42, "alic": 42, "bob": 42, "emploi": 42, "kid": 42, "df2_transpos": 42, "consist": [33, 42], "filter_func": 42, "coercibl": 42, "500": 42, "new_df": 42, "h": 42, "proport": 42, "ant": 42, "first_nam": 42, "ann": 42, "beth": 42, "middle_nam": 42, "smith": 42, "louis": 42, "denomin": 42, "implicit": 42, "upcast": 42, "sai": 42, "accommod": 42, "chosen": 42, "care": 42, "deal": 42, "find_common_typ": 42, "uint64": 42, "94": 42, "170": 42, "115": 42, "broadest": 42, "352": 42, "916667": 42, "056367": 42, "264": 42, "687500": 42, "042275": 42, "increment": 42, "relativedelta": 42, "relativedelata": 42, "discourag": 42, "bdai": 42, "weekdai": 42, "is_on_offset": 42, "rollback": 42, "rollforward": 42, "busi": 42, "pseudo": 42, "__add__": 42, "noth": 42, "arbitrarili": 42, "bit": 42, "weird": 42, "suggest": 42, "kwd": 42, "week": 42, "hour": 42, "millisecond": 42, "microsecond": 42, "nanosecond": 42, "dateutil": 42, "2017": 42, "ambigu": 42, "timeambigu": 42, "dayfirst": 42, "yearfirst": 42, "immut": 42, "carri": 42, "had": 42, "pytz": 42, "tzfile": 42, "tzinfo": 42, "clock": 42, "due": 42, "dst": 42, "aris": 42, "central": 42, "european": 42, "utc": 42, "situat": 42, "dictat": 42, "transit": 42, "signifi": 42, "ambiguoustimeerror": 42, "timetz": 42, "dayofyear": 42, "day_of_year": 42, "weekofyear": 42, "dayofweek": 42, "day_of_week": 42, "freqstr": 42, "is_month_start": 42, "is_month_end": 42, "is_quarter_start": 42, "is_quarter_end": 42, "is_year_start": 42, "is_year_end": 42, "is_leap_year": 42, "strftime": 42, "snap": 42, "tz_convert": 42, "tz_local": 42, "floor": 42, "to_pydatetim": 42, "to_seri": 42, "month_nam": 42, "day_nam": 42, "as_unit": 42, "me": 42, "shift_forward": 42, "shift_backward": 42, "closest": 42, "nonexistenttimeerror": 42, "wall": 42, "daylight": 42, "59": 42, "dt": 42, "rng_tz": 42, "2021": 42, "amsterdam": 42, "datetime_seri": 42, "english": 42, "en_u": 42, "utf8": 42, "termin": 42, "unix": 42, "mondai": 42, "tuesdai": 42, "wednesdai": 42, "pt_br": 42, "brazilian": 42, "portugues": 42, "segunda": 42, "ter\u00e7a": 42, "quarta": 42, "sundai": 42, "2016": 42, "ordin": 42, "days_in_month": 42, "daysinmonth": 42, "datetimearrai": 42, "naiv": 42, "awar": 42, "2h": 42, "get_loc": 42, "indexer_at_tim": 42, "asof": 42, "indexer_between_tim": 42, "at_tim": 42, "include_start": 42, "include_end": 42, "between_tim": 42, "leap": 42, "366": 42, "365": 42, "29th": 42, "intercalari": 42, "dates_seri": 42, "is_norm": 42, "isocalendar": 42, "iso": 42, "8601": 42, "2019": 42, "uint32": 42, "000001": 42, "000002": 42, "decemb": 42, "janeiro": 42, "fevereiro": 42, "mar\u00e7o": 42, "000000000": 42, "000000001": 42, "000000002": 42, "unalt": 42, "asia": 42, "calcutta": 42, "slice_index": 42, "stamp": 42, "date_format": 42, "offici": 42, "am": 42, "to_julian_d": 42, "julian": 42, "noon": 42, "4713": 42, "bc": 42, "en": 42, "wiki": 42, "julian_dai": 42, "periodarrai": 42, "basetzinfo": 42, "zone": 42, "dti": 42, "berlin": 42, "timenonexist": 42, "unawar": 42, "tz_naiv": 42, "eastern": 42, "tz_awar": 42, "Be": 42, "cet": 42, "imposs": 42, "46": 42, "caus": 42, "warsaw": 42, "999999999": 42, "1h": 42, "duck": 42, "precis": 42, "unknowntimezoneerror": 42, "usr": 42, "zoneinfo": 42, "nattyp": 42, "face": [8, 42], "physic": 42, "jsonarrai": 42, "sheet": 42, "pathlib": 42, "_path": 42, "localpath": 42, "xlrd": 42, "workbook": 42, "openpyxl": 42, "xl": 42, "xlsx": 42, "xlsb": 42, "xlsm": 42, "odf": 42, "od": 42, "odt": 42, "pyxlsb": 42, "newer": 42, "opendocu": 42, "sheet_nam": 42, "index_col": 42, "usecol": 42, "true_valu": 42, "false_valu": 42, "skiprow": 42, "parse_d": 42, "date_pars": 42, "thousand": 42, "skipfoot": 42, "dtype_backend": 42, "numpy_nul": 42, "writeexcelbuff": [], "datetime_format": 42, "if_sheet_exist": 42, "overlai": 42, "xlsxwriter": 42, "odswrit": 42, "to_excel": 42, "manag": 42, "binaryio": 42, "yyyi": 42, "mm": 42, "hh": 42, "ss": 42, "load_workbook": 42, "opendocumentspreadsheet": 42, "serial": 42, "path_to_fil": 42, "aaa": 42, "bbb": 42, "spam": 42, "egg": 42, "sheet1": 42, "sheet2": 42, "1999": 42, "1998": 42, "sheet3": 42, "startcol": 42, "ram": 42, "zf": 42, "nan_inf_to_error": 42, "keep_vba": 42, "check_extens": 42, "ext": 42, "isn": 42, "unsupportedfiletypeerror": 42, "supported_extens": 42, "obj": 42, "allows_duplicate_label": 42, "permit": [], "duplicatelabelerror": 42, "subsequ": 42, "global": 42, "set_flag": 42, "sugar": 42, "publish": 42, "1w": 42, "2min": 42, "complevel": 42, "complib": 42, "fletcher32": 42, "pytabl": 42, "pickl": 42, "untrust": 42, "unsaf": 42, "disabl": 42, "zlib": 42, "lzo": 42, "bzip2": 42, "blosc": 42, "compressor": 42, "blosclz": 42, "lz4": 42, "lz4hc": 42, "checksum": 42, "open_fil": 42, "h5": 42, "driver": 42, "h5fd_core": 42, "disk": 42, "min_items": 42, "nan_rep": 42, "expectedrow": 42, "data_column": 42, "strict": 42, "wors": 42, "settabl": 42, "dropna_t": 42, "append_to_multipl": 42, "selector": 42, "table_nam": 42, "table_column": 42, "propindex": 42, "restor": 42, "create_table_index": 42, "optlevel": 42, "listlik": 42, "medium": 42, "flush": 42, "fsync": 42, "modif": 42, "claim": 42, "been": 42, "cach": 42, "layer": 42, "interfer": 42, "get_nod": 42, "get_stor": 42, "genericfix": 42, "storer": 42, "is_open": 42, "nativ": 42, "illeg": 42, "track_tim": 42, "nor": 42, "searchabl": 42, "create_t": 42, "enabl": 42, "hash": 42, "auto_clos": 42, "criteria": 42, "finish": 42, "select_as_coordin": 42, "select_as_multipl": 42, "THE": 42, "select_column": 42, "interest": 42, "subgroup": 42, "preorder": 42, "child": 42, "alphanumer": 42, "procedur": 42, "trail": 42, "tupleize_col": 42, "best": 42, "fit": 42, "truthi": 42, "infin": 42, "nonzero": 42, "cereal": 42, "calori": 42, "corn": 42, "flake": 42, "almond": 42, "delight": 42, "cinnamon": 42, "toast": 42, "crunch": 42, "cocoa": 42, "puff": 42, "thin": 42, "lai": 42, "intervalarrai": 42, "integerna": 42, "integerarrai": 42, "stringarrai": 42, "parti": 42, "numpyextensionarrai": 42, "pandasarrai": 42, "latest": 42, "idx_not_sort": 42, "asof_loc": 42, "_indext": 42, "incompar": 42, "caught": 42, "idx1": 42, "idx2": 42, "discard": 42, "droplevel": 42, "mi": 42, "dropkeep": [], "ascending_idx": 42, "descending_idx": 42, "int64_idx": 42, "uint64_idx": 42, "get_index": 42, "str_t": [], "broken": 42, "larger": 42, "unmatch": 42, "explan": 42, "get_indexer_for": 42, "dispatch": 42, "get_indexer_non_uniqu": 42, "var1": 42, "reason": 42, "get_level_valu": 42, "primarili": 42, "unique_index": 42, "monotonic_index": 42, "abbc": 42, "non_monotonic_index": 42, "abcb": 42, "get_slice_bound": 42, "leftmost": 42, "rightmost": 42, "prettydict": [], "has_dupl": 42, "is_uniqu": 42, "watermelon": 42, "orang": 42, "appl": 42, "hasnan": 42, "speedup": 42, "holds_integ": 42, "infer_dtyp": 42, "infer_object": 42, "is_": 42, "is_boolean": 42, "is_bool_dtyp": 42, "is_integ": 42, "is_float": 42, "is_numer": 42, "is_object": 42, "is_categor": 42, "is_interv": 42, "is_categorical_dtyp": 42, "peter": 42, "victor": 42, "elisabeth": 42, "mar": 42, "is_float_dtyp": 42, "is_integer_dtyp": 42, "mango": 42, "is_interval_dtyp": 42, "is_monotonic_decreas": 42, "is_monotonic_increas": 42, "is_numeric_dtyp": 42, "is_object_dtyp": 42, "sought": 42, "red": 42, "blue": 42, "green": 42, "yellow": 42, "black": 42, "pypi": 42, "dummi": 42, "nlevel": 42, "putmask": 42, "ravel": 42, "car": 42, "bike": 42, "train": 42, "tractor": 42, "abl": 42, "set_nam": 42, "cobra": 42, "repetit": 42, "own": 42, "month_start": 42, "peril": 42, "efgh": 42, "slice_loc": 42, "return_index": 42, "sorted_index": 42, "sortlevel": 42, "stringmethod": 42, "symmetric_differ": 42, "allow_fil": 42, "regard": 42, "to_flat_index": 42, "chain": 42, "reus": 42, "incompat": 42, "runtimewarn": 42, "NOT": 42, "int16": 42, "mathemat": 42, "bracket": 42, "endpoint": 42, "character": 42, "stand": 42, "parenthes": 42, "half": 42, "iv": 42, "shifted_iv": 42, "extended_iv": 42, "year_2017": 42, "inclus": 42, "i1": 42, "i2": 42, "i3": 42, "i5": 42, "i6": 42, "subtyp": 42, "is_dtyp": 42, "_lib": 42, "timedeltaarrai": 42, "mid": 42, "is_empti": 42, "is_non_overlapping_monoton": 42, "is_overlap": 42, "from_break": 42, "set_clos": 42, "to_tupl": 42, "mention": 42, "intervalclosedtyp": 42, "closed_left": 42, "closed_right": 42, "open_left": 42, "open_right": 42, "unsupport": 42, "moment": 42, "overlapping_index": 42, "position": 42, "na_tupl": 42, "sortord": 42, "sorted": 42, "meta": 42, "levshap": 42, "from_fram": 42, "set_level": 42, "set_cod": 42, "remove_unused_level": 42, "get_loc_level": 42, "helper": 42, "equal_level": 42, "adjoin": 42, "hi": 42, "temp": 42, "precip": 42, "nj": 42, "purpl": 42, "thereof": 42, "level_1": 42, "level_2": 42, "level_0": 42, "lexsort": 42, "depth": 42, "abb": 42, "drop_level": 42, "seq": 42, "gefd": 42, "frozenlist": 42, "outward": 42, "mi2": 42, "properli": 42, "abbd": 42, "deff": 42, "bb": 42, "aa": 42, "anyth": 42, "qux": 42, "aggscalar": [], "agg_a": 42, "agg_1": 42, "result_a": 42, "result_1": 42, "4q2005": 42, "prolept": 42, "gregorian": 42, "monthend": 42, "eg": 42, "qyear": 42, "2000q1": 42, "2002q3": 42, "31st": 42, "1st": 42, "pidx": 42, "parsabl": 42, "is_ful": 42, "64": 42, "from_rang": 42, "use_na_sentinel": 42, "sentinel": 42, "far": 42, "ve": 42, "despit": 42, "ndim": 42, "henc": 42, "999": 42, "aggfunctyp": [], "convert_dtyp": 42, "ufunc": 42, "summer": 42, "temperatur": 42, "citi": 42, "london": 42, "york": 42, "helsinki": 42, "441": 42, "144": 42, "anonym": 42, "subtract_custom_valu": 42, "custom_valu": 42, "add_custom_valu": 42, "june": 42, "juli": 42, "august": 42, "95": 42, "96": 42, "log": 42, "995732": 42, "044522": 42, "484907": 42, "autocorr": 42, "autocorrel": 42, "10355": 42, "99999": 42, "wherev": 42, "carol": 42, "ev": 42, "anna": 42, "daniel": 42, "categoricalaccessor": 42, "330": 42, "eagl": 42, "160": 42, "345": 42, "90010907": 42, "13484424": 42, "62036035": 42, "12528585": 42, "26962463": 42, "51111198": 42, "01685762652715874": 42, "divmod": 42, "rdivmod": 42, "2nd": 42, "stai": 42, "combineddatetimelikeproperti": 42, "dtypeobj": 42, "seriesgroupbi": 42, "gca": 42, "lazili": 42, "lazi": 42, "deriv": 42, "__missing__": 42, "rabbit": 42, "kitten": 42, "puppi": 42, "152": 42, "rest": 42, "whenev": 42, "odd": 42, "countries_popul": 42, "montserrat": 42, "5200": 42, "five": 42, "lie": 42, "my_nam": 42, "num_arm": 42, "limb": 42, "meaningless": 42, "come": 42, "numpyvaluearraylik": [], "numpysort": [], "wrong": 42, "bread": 42, "chees": 42, "milk": 42, "criterion": 42, "sin": 42, "complic": 42, "tan": 42, "sparseaccessor": 42, "0th": 42, "val": 42, "2025": 42, "yearbegin": 42, "AS": 42, "jan": 42, "known": 42, "aabc": 42, "20130101": 42, "01t05": 42, "02t05": 42, "03t05": 42, "reinterpret": 42, "0b11111111": 42, "254": 42, "sparsearrai": 42, "dens": 42, "sp_valu": 42, "string_storag": 42, "basestringarrai": [], "natyp": 42, "durat": 42, "interchang": 42, "hr": 42, "sec": 42, "milli": 42, "micro": 42, "nano": 42, "td2": 42, "to_pytimedelta": 42, "total_second": 42, "86400": 42, "172800": 42, "259200": 42, "345600": 42, "ts_input": 42, "fold": 42, "twice": 42, "winter": 42, "hit": 42, "essenti": 42, "mimic": 42, "01t12": 42, "1513393355": 42, "pacif": 42, "0800": 42, "astimezon": 42, "14t15": 42, "192548651": 42, "0000": 42, "tokyo": 42, "0900": 42, "53": 42, "192549": 42, "5t": 42, "1h30t": 42, "ts_tz": 42, "0100": 42, "0200": 42, "fromordin": 42, "737425": 42, "fromtimestamp": 42, "posix": 42, "1584199972": 42, "isoweekdai": 42, "378782": 42, "0700": 42, "193000": 42, "strptime": 42, "2458923": 42, "147824074": 42, "todai": 42, "969883": 42, "1584226800": 42, "stockholm": 42, "dsttzinfo": 42, "utcfromtimestamp": 42, "utcnow": 42, "092888": 42, "uint16": 42, "regist": 42, "register_extension_dtyp": 42, "held": 42, "floatingarrai": 42, "arrowstringarrai": 42, "nullabl": 42, "concret": 42, "event": 42, "str32": 42, "realli": 42, "mostli": 42, "symmetri": 42, "1j": 42, "2j": 42, "weekmask": 42, "holidai": 42, "5h": 42, "beij": 42, "busdaycalendar": 42, "mon": 42, "tue": 42, "wed": 42, "fri": 42, "weekend": 42, "ndframe": [], "hashablet": [], "meaning": 42, "outermost": 42, "veri": 42, "unnecessarili": 42, "walkthrough": 42, "letter": 42, "df4": 42, "polli": 42, "georg": 42, "prevent": 42, "df5": 42, "df6": 42, "df7": 42, "new_row": 42, "rownam": 42, "colnam": 42, "subtot": 42, "aren": 42, "dull": 42, "shini": 42, "row_0": 42, "retbin": 42, "include_lowest": 42, "segment": 42, "pre": 42, "uniform": 42, "sliceabl": 42, "994": 42, "discov": 42, "bad": 42, "impli": 42, "992": 42, "667": 42, "333": 42, "resp": 42, "hong_kong": 42, "linearli": 42, "vari": 42, "3m": 42, "similarli": 42, "100a": 42, "2117": 42, "2217": 42, "2317": 42, "2417": 42, "2517": 42, "2617": 42, "2717": 42, "2817": 42, "2917": 42, "binop": [], "local_dict": 42, "global_dict": 42, "plain": 42, "ol": 42, "statement": 42, "tri": 42, "lookup": 42, "scope": 42, "multilin": 42, "arrang": 42, "recurs": 42, "double_ag": 42, "size_hint": 42, "hashtabl": 42, "sizer": 42, "default_categori": 42, "prefix_a": 42, "prefix_b": 42, "col1_a": 42, "col1_b": 42, "col2_a": 42, "col2_b": 42, "col2_c": 42, "prefix_sep": 42, "dummy_na": 42, "drop_first": 42, "prepend": 42, "abca": 42, "abcaa": 42, "discern": 42, "datetimelik": 42, "bee": 42, "record_path": 42, "meta_prefix": 42, "record_prefix": 42, "max_level": 42, "unseri": 42, "coleen": 42, "volk": 42, "famili": 42, "regner": 42, "fay": 42, "raker": 42, "cole": 42, "130": 42, "reg": 42, "florida": 42, "shortnam": 42, "fl": 42, "governor": 42, "rick": 42, "scott": 42, "counti": 42, "dade": 42, "12345": 42, "broward": 42, "palm": 42, "beach": 42, "60000": 42, "ohio": 42, "oh": 42, "kasich": 42, "summit": 42, "1234": 42, "cuyahoga": 42, "1337": 42, "new_nam": 42, "list_of_column": 42, "hr1": 42, "514": 42, "573": 42, "hr2": 42, "545": 42, "526": 42, "team": 42, "sox": 42, "yanke": 42, "year1": 42, "2007": 42, "year2": 42, "2008": 42, "mergehow": [], "left_bi": 42, "right_bi": 42, "allow_exact_match": 42, "furthermor": 42, "left_val": 42, "right_val": 42, "023": 42, "030": 42, "041": 42, "048": 42, "049": 42, "072": 42, "075": 42, "ticker": 42, "goog": 42, "msft": 42, "aapl": 42, "bid": 42, "97": 42, "93": 42, "98": 42, "trade": 42, "038": 42, "92": 42, "quantiti": 42, "155": 42, "2m": 42, "10m": 42, "fill_method": 42, "joinhow": [], "lvalu": 42, "rvalu": 42, "temporarili": 42, "pat": 42, "max_column": 42, "calendar": 42, "anchor": 42, "2017q1": 42, "2017q2": 42, "membership": 42, "decil": 42, "001": 42, "dtypebackend": [], "experimenti": 42, "filepath_or_buff": 42, "readcsvbuff": [], "dtypearg": [], "csvengin": [], "skipinitialspac": 42, "keep_default_na": 42, "na_filt": 42, "skip_blank_lin": 42, "infer_datetime_format": 42, "keep_date_col": 42, "cache_d": 42, "linetermin": 42, "quotechar": 42, "doublequot": 42, "escapechar": 42, "encoding_error": 42, "dialect": 42, "on_bad_lin": 42, "delim_whitespac": 42, "low_memori": 42, "memory_map": 42, "float_precis": 42, "legaci": 42, "textfileread": 42, "onlin": 42, "ftp": 42, "sniffer": 42, "prone": 42, "interven": 42, "malform": 42, "ddd": 42, "correctli": 42, "insensit": 42, "variant": 42, "bottom": 42, "ind": 42, "qnan": 42, "marker": 42, "blank": 42, "unpars": 42, "mixtur": 42, "iso8601": 42, "10x": 42, "advanc": 42, "conjunct": 42, "signific": 42, "especi": 42, "get_chunk": 42, "decompress": 42, "zstddecompressor": 42, "dict_data": 42, "my_compression_dict": 42, "quote_": 42, "quote_minim": 42, "quote_al": 42, "quote_nonnumer": 42, "quote_non": 42, "altogeth": 42, "fulli": 42, "ex": 42, "parserwarn": 42, "encount": 42, "bad_lin": 42, "emit": 42, "overhead": 42, "ordinari": 42, "round_trip": 42, "trip": 42, "intstrt": [], "filesystem": 42, "chart": 42, "worksheet": 42, "sheet5": 42, "roundtrip": 42, "merged_cel": 42, "tmp": 42, "string1": 42, "string2": 42, "rb": 42, "unnam": 42, "use_thread": 42, "colspec": 42, "infer_nrow": 42, "extent": 42, "contigu": 42, "col_ord": 42, "use_bqstorage_api": 42, "progress_bar_typ": 42, "compliant": 42, "config": 42, "usequerycach": 42, "quickli": 42, "cloud": 42, "readsess": 42, "permiss": 42, "bill": 42, "fastavro": 42, "tqdm_notebook": 42, "jupyt": 42, "widget": 42, "tqdm_gui": 42, "dialog": 42, "And": 42, "path_or_buf": 42, "remot": 42, "reread": 42, "flavor": 42, "displayed_onli": 42, "extract_link": 42, "footer": 42, "protocol": 42, "extrem": 42, "page": 42, "beauti": 42, "bs4": 42, "html5lib": 42, "nth": 42, "asdf": 42, "draft": 42, "spec": 42, "modern": 42, "web": 42, "href": 42, "cleanup": 42, "push": 42, "idiosyncrasi": 42, "tr": 42, "colspan": 42, "rowspan": 42, "thead": 42, "typ": 42, "convert_ax": 42, "keep_default_d": 42, "precise_float": 42, "date_unit": 42, "jsonengin": [], "ujson": 42, "jsonread": 42, "recov": 42, "proper": 42, "datelik": 42, "_at": 42, "_time": 42, "strtod": 42, "doubl": 42, "py3": 42, "jsonfil": 42, "incorrectli": 42, "distinguish": 42, "level_": 42, "primarykei": 42, "pandas_vers": 42, "mirror": 42, "use_nullable_dtyp": 42, "partition_dir": 42, "readpicklebuff": [], "readlin": 42, "original_df": 42, "pkl": 42, "unpickled_df": 42, "readerbas": 42, "sa": 42, "xport": 42, "sas7bdat": 42, "sas7bdatread": 42, "xportread": 42, "convert_categor": 42, "spss": 42, "con": 42, "deleg": 42, "rout": 42, "sqlalchemi": 42, "sqlite3": 42, "dbapi2": 42, "dispos": 42, "closur": 42, "249": 42, "paramstyl": 42, "psycopg2": 42, "sqlite": 42, "conn": 42, "int_column": 42, "date_column": 42, "test_data": 42, "postgr": 42, "db_name": 42, "dbapi": 42, "loss": 42, "convert_miss": 42, "preserve_dtyp": 42, "order_categor": 42, "stataread": 42, "statamissingvalu": 42, "foreign": 42, "reader": 42, "incomplet": 42, "randint": 42, "20_000": 42, "itr": 42, "tab": 42, "xpath": 42, "elems_onli": 42, "attrs_onli": 42, "convertersarg": [], "parsedatesarg": [], "xmlparser": [], "iterpars": 42, "migrat": 42, "temporari": 42, "easier": 42, "500mb": 42, "1gb": 42, "5gb": 42, "row_el": 42, "child_elem": 42, "grandchild_elem": 42, "shallow": 42, "ideal": 42, "column1": 42, "column2": 42, "column3": 42, "w3c": 42, "handler": 42, "flatter": 42, "redesign": 42, "purpos": 42, "accuraci": 42, "use_eng_prefix": 42, "si": 42, "notat": 42, "1e": 42, "1e3": 42, "1e6": 42, "000000e": 42, "0e": 42, "000n": 42, "000m": 42, "000k": 42, "0n": 42, "0m": 42, "0k": 42, "as_json": 42, "bug": 42, "extra_arg": 42, "suit": 42, "pytest": 42, "slow": 42, "network": 42, "6h": 42, "100000d": 42, "100001": 42, "200001": 42, "datetimescalarorarrayconvert": [], "dictconvert": [], "datetimeerrorchoic": [], "datetimescalar": [], "minim": 42, "riski": 42, "anywher": 42, "alongsid": 42, "datetimt64": 42, "succeed": 42, "parenthesi": 42, "fallback": 42, "unsuccess": 42, "parsererror": 42, "stdlib": 42, "assembl": 42, "abbrevi": 42, "plural": 42, "quit": 42, "polici": 42, "wish": 42, "1490195805": 42, "1490195805433502912": 42, "433502912": 42, "1960": 42, "0000000011": 42, "meet": 42, "parseabl": 42, "13000101": 42, "0500": 42, "pari": 42, "solv": 42, "0530": 42, "9223372036854775808": 42, "iinfo": 42, "18446744073709551615": 42, "leverag": 42, "surfac": 42, "ret": 42, "told": 42, "pickler": 42, "highest_protocol": 42, "unitchoic": [], "unambigu": 42, "00003": 42, "000030": 42, "5u": 42, "000015500": 42, "significantli": 42, "20160101": 42, "01t00": 42, "stubnam": 42, "suffix1": 42, "suffix2": 42, "intact": 42, "stub": 42, "hyphen": 42, "captur": 42, "negat": 42, "disambigu": 42, "unrel": 42, "untouch": 42, "hard": 42, "a1970": 42, "a1980": 42, "b1970": 42, "b1980": 42, "085631": 42, "997345": 42, "282978": 42, "1980": 42, "famid": 42, "birth": 42, "ht1": 42, "ht2": 42, "ht": 42, "creativ": 42, "wieldi": 42, "weekli": 42, "rand": 42, "548814": 42, "544883": 42, "437587": 42, "383442": 42, "715189": 42, "423655": 42, "891773": 42, "791725": 42, "602763": 42, "645894": 42, "963663": 42, "528895": 42, "findal": 42, "ht_one": 42, "ht_two": 42, "o08": 42, "odfread": 42, "empty_valu": 42, "get_sheet_by_index": 42, "get_sheet_by_nam": 42, "get_sheet_data": 42, "file_rows_need": 42, "openpyxlread": 42, "pyxlsbread": 42, "xlrdreader": 42, "102": 42, "automodul": [], "babydragon": [1, 2, 3, 5, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 23, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38], "undoc": [], "is_embed_batch": 8, "data_fram": 8, "in_plac": 8, "embeddings_col": 8, "from_hf_dataset": 8, "dataset_url": 8, "value_column": 8, "embeddings_column": 8, "hug": 8, "default_sav": 8, "add_batch_to_index": 8, "get_embedding_by_index": 8, "get_index_by_valu": 8, "get_embedding_by_valu": 8, "prune": 8, "constraint": 8, "regex_pattern": 8, "length_constraint": 8, "exampl": 42, "note": 42, "see": 42, "also": 42, "yield": 42, "baseoffset": 42, "autoclass": [], "classvar": 32, "providert": 32, "libcst": 32, "position_provid": 32, "encapsul": 33, "spawn": 33, "str_type": 42}, "objects": {"babydragon.apps.auto_perspective.perspective": [[1, 0, 1, "", "IdeaCluster"], [1, 0, 1, "", "Ideation"], [1, 0, 1, "", "PerspectivePromptGenerator"], [1, 0, 1, "", "SubjectPerspectiveAnalyzer"], [1, 0, 1, "", "Summarizer"]], "babydragon.apps.auto_perspective.perspective.IdeaCluster": [[1, 1, 1, "", "cluster_embeddings"], [1, 1, 1, "", "count_tokens_per_cluster"], [1, 1, 1, "", "create_idea_index"], [1, 1, 1, "", "create_minimum_spanning_paths"], [1, 1, 1, "", "get_clustered_ideas"], [1, 1, 1, "", "plot_embeddings_with_path"]], "babydragon.apps.auto_perspective.perspective.Ideation": [[1, 1, 1, "", "retrieve_ideas"]], "babydragon.apps.auto_perspective.perspective.PerspectivePromptGenerator": [[1, 1, 1, "", "generate_prompts"], [1, 1, 1, "", "handle_future"], [1, 1, 1, "", "save_prompts_to_json"]], "babydragon.apps.auto_perspective.perspective.SubjectPerspectiveAnalyzer": [[1, 1, 1, "", "analyze_subject_perspective"]], "babydragon.apps.auto_perspective.perspective.Summarizer": [[1, 1, 1, "", "summarize_texts"]], "babydragon.chat.base_chat": [[2, 0, 1, "", "BaseChat"], [2, 0, 1, "", "Prompter"]], "babydragon.chat.base_chat.BaseChat": [[2, 1, 1, "", "chat_response"], [2, 1, 1, "", "get_logs"], [2, 1, 1, "", "gradio"], [2, 1, 1, "", "identity_prompter"], [2, 1, 1, "", "query"], [2, 1, 1, "", "reply"], [2, 1, 1, "", "reset_logs"], [2, 1, 1, "", "run_text"]], "babydragon.chat.base_chat.Prompter": [[2, 1, 1, "", "default_user_prompt"], [2, 1, 1, "", "one_shot_prompt"], [2, 1, 1, "", "set_default_prompts"], [2, 1, 1, "", "update_system_prompt"], [2, 1, 1, "", "update_user_prompt"]], "babydragon.chat.chat": [[3, 0, 1, "", "Chat"]], "babydragon.chat.chat.Chat": [[3, 1, 1, "", "add_user_defined_ids"], [3, 1, 1, "", "get_index_hints"], [3, 1, 1, "", "set_current_index"], [3, 1, 1, "", "setup_index_prompts"], [3, 1, 1, "", "setup_indices"]], "babydragon.chat.memory_chat": [[5, 0, 1, "", "FifoChat"], [5, 0, 1, "", "FifoVectorChat"], [5, 0, 1, "", "VectorChat"]], "babydragon.chat.memory_chat.FifoChat": [[5, 1, 1, "", "fifo_memory_prompt"], [5, 1, 1, "", "query"]], "babydragon.chat.memory_chat.FifoVectorChat": [[5, 1, 1, "", "fifovector_memory_prompt"], [5, 1, 1, "", "query"], [5, 1, 1, "", "setup_longterm_memory"]], "babydragon.chat.memory_chat.VectorChat": [[5, 1, 1, "", "query"], [5, 1, 1, "", "vector_memory_prompt"], [5, 1, 1, "", "weighted_memory_prompt"]], "babydragon.memory.indexes.memory_index": [[8, 0, 1, "", "MemoryIndex"]], "babydragon.memory.indexes.memory_index.MemoryIndex": [[8, 1, 1, "", "add_batch_to_index"], [8, 1, 1, "", "add_to_index"], [8, 1, 1, "", "faiss_query"], [8, 1, 1, "", "from_hf_dataset"], [8, 1, 1, "", "from_pandas"], [8, 1, 1, "", "get_all_embeddings"], [8, 1, 1, "", "get_embedding_by_index"], [8, 1, 1, "", "get_embedding_by_value"], [8, 1, 1, "", "get_index_by_value"], [8, 1, 1, "", "init_index"], [8, 1, 1, "", "load"], [8, 1, 1, "", "prune"], [8, 1, 1, "", "remove_from_index"], [8, 1, 1, "", "save"], [8, 1, 1, "", "token_bound_query"]], "babydragon.memory.indexes.pandas_index": [[9, 0, 1, "", "PandasIndex"]], "babydragon.memory.indexes.pandas_index.PandasIndex": [[9, 1, 1, "", "add_row"], [9, 1, 1, "", "apply_llmtask"], [9, 1, 1, "", "query_columns"], [9, 1, 1, "", "remove_row"], [9, 1, 1, "", "rows_from_value"], [9, 1, 1, "", "setup_columns"]], "babydragon.memory.kernels.kernel_clustering": [[11, 0, 1, "", "ClusterPaths"], [11, 0, 1, "", "HDBSCANPaths"], [11, 0, 1, "", "SpectralClusteringPaths"]], "babydragon.memory.kernels.kernel_clustering.ClusterPaths": [[11, 1, 1, "", "create_paths"]], "babydragon.memory.kernels.kernel_clustering.HDBSCANPaths": [[11, 1, 1, "", "create_paths"]], "babydragon.memory.kernels.kernel_clustering.SpectralClusteringPaths": [[11, 1, 1, "", "create_paths"]], "babydragon.memory.kernels.memory_kernel": [[13, 0, 1, "", "MemoryKernel"]], "babydragon.memory.kernels.memory_kernel.MemoryKernel": [[13, 1, 1, "", "compute_kernel"], [13, 1, 1, "", "cos_sim"], [13, 1, 1, "", "create_k_hop_index"], [13, 1, 1, "", "from_task_results"], [13, 1, 1, "", "gen_gse_embeddings"], [13, 1, 1, "", "graph_sylvester_embedding"], [13, 1, 1, "", "k_hop_message_passing"]], "babydragon.memory.kernels.multi_kernel": [[14, 0, 1, "", "HDBSCANMultiKernel"], [14, 0, 1, "", "MultiKernel"], [14, 0, 1, "", "SpectralClusteringMultiKernel"]], "babydragon.memory.kernels.multi_kernel.HDBSCANMultiKernel": [[14, 2, 1, "", "cluster_paths"], [14, 1, 1, "", "generate_path_groups"]], "babydragon.memory.kernels.multi_kernel.MultiKernel": [[14, 2, 1, "", "memory_kernel_dict"], [14, 2, 1, "", "name"], [14, 2, 1, "", "path_group"]], "babydragon.memory.kernels.multi_kernel.SpectralClusteringMultiKernel": [[14, 2, 1, "", "cluster_paths"], [14, 1, 1, "", "generate_path_groups"]], "babydragon.memory.kernels.multi_kernel_visualization": [[15, 0, 1, "", "MultiKernelStabilityAnalysis"], [15, 0, 1, "", "MultiKernelVisualization"]], "babydragon.memory.kernels.multi_kernel_visualization.MultiKernelStabilityAnalysis": [[15, 1, 1, "", "compute_nmi"], [15, 1, 1, "", "evaluate_stability"], [15, 1, 1, "", "get_cluster_labels"]], "babydragon.memory.kernels.multi_kernel_visualization.MultiKernelVisualization": [[15, 1, 1, "", "plot_embeddings_with_path"], [15, 1, 1, "", "plot_singular_values"], [15, 1, 1, "", "visualize_paths"]], "babydragon.memory.threads.base_thread": [[16, 0, 1, "", "BaseThread"]], "babydragon.memory.threads.base_thread.BaseThread": [[16, 1, 1, "", "add_message"], [16, 1, 1, "", "find_message"], [16, 1, 1, "", "find_role"], [16, 1, 1, "", "first_message"], [16, 1, 1, "", "get_message_role"], [16, 1, 1, "", "get_message_tokens"], [16, 1, 1, "", "last_message"], [16, 1, 1, "", "messages_after"], [16, 1, 1, "", "messages_after_time"], [16, 1, 1, "", "messages_before"], [16, 1, 1, "", "messages_before_time"], [16, 1, 1, "", "messages_between"], [16, 1, 1, "", "messages_between_time"], [16, 1, 1, "", "messages_between_tokens"], [16, 1, 1, "", "messages_less_tokens"], [16, 1, 1, "", "messages_more_tokens"], [16, 1, 1, "", "remove_message"], [16, 1, 1, "", "reset_memory"], [16, 1, 1, "", "token_bound_history"]], "babydragon.memory.threads.fifo_thread": [[17, 0, 1, "", "FifoThread"]], "babydragon.memory.threads.fifo_thread.FifoThread": [[17, 1, 1, "", "add_message"], [17, 1, 1, "", "to_longterm"]], "babydragon.memory.threads.vector_thread": [[19, 0, 1, "", "VectorThread"]], "babydragon.memory.threads.vector_thread.VectorThread": [[19, 1, 1, "", "add_message"], [19, 1, 1, "", "index_message"], [19, 1, 1, "", "sorted_query"], [19, 1, 1, "", "token_bound_query"], [19, 1, 1, "", "weighted_query"]], "babydragon.models.embedders.ada2": [[20, 0, 1, "", "OpenAiEmbedder"]], "babydragon.models.embedders.ada2.OpenAiEmbedder": [[20, 1, 1, "", "batch_embed"], [20, 1, 1, "", "embed"], [20, 1, 1, "", "get_embedding_size"]], "babydragon.models.embedders.cohere": [[21, 0, 1, "", "CohereEmbedder"]], "babydragon.models.embedders.cohere.CohereEmbedder": [[21, 1, 1, "", "embed"], [21, 1, 1, "", "get_embedding_size"]], "babydragon.models.embedders.sbert": [[23, 0, 1, "", "SBERTEmbedder"]], "babydragon.models.embedders.sbert.SBERTEmbedder": [[23, 1, 1, "", "embed"], [23, 1, 1, "", "get_embedding_size"]], "babydragon.processors.github_processors": [[27, 0, 1, "", "GithubProcessor"]], "babydragon.processors.github_processors.GithubProcessor": [[27, 1, 1, "", "clone_repo"], [27, 1, 1, "", "get_commits"], [27, 1, 1, "", "get_issues"], [27, 1, 1, "", "get_public_repos"], [27, 1, 1, "", "get_repo"], [27, 1, 1, "", "parse_commits"], [27, 1, 1, "", "parse_issues"], [27, 1, 1, "", "process_repo"], [27, 1, 1, "", "process_repos"], [27, 1, 1, "", "process_single_repo"]], "babydragon.processors.os_processor": [[28, 0, 1, "", "OsProcessor"]], "babydragon.processors.os_processor.OsProcessor": [[28, 1, 1, "", "copy_file"], [28, 1, 1, "", "create_directory"], [28, 1, 1, "", "delete_directory"], [28, 1, 1, "", "get_all_files"], [28, 1, 1, "", "get_file_extension"], [28, 1, 1, "", "get_files_with_extension"], [28, 1, 1, "", "get_subdirectories"], [28, 1, 1, "", "move_file"]], "babydragon.processors.parsers.git_metadata": [[29, 0, 1, "", "CommitParser"], [29, 0, 1, "", "IssueParser"]], "babydragon.processors.parsers.git_metadata.CommitParser": [[29, 1, 1, "", "get_commits"], [29, 1, 1, "", "parse_commits"]], "babydragon.processors.parsers.git_metadata.IssueParser": [[29, 1, 1, "", "get_issues"], [29, 1, 1, "", "parse_issues"]], "babydragon.processors.parsers.python_parser": [[31, 0, 1, "", "FunctionAndClassVisitor"], [31, 0, 1, "", "PythonDocstringExtractor"], [31, 0, 1, "", "PythonMinifier"], [31, 0, 1, "", "PythonParser"]], "babydragon.processors.parsers.python_parser.FunctionAndClassVisitor": [[31, 1, 1, "", "visit_ClassDef"], [31, 1, 1, "", "visit_FunctionDef"]], "babydragon.processors.parsers.python_parser.PythonDocstringExtractor": [[31, 1, 1, "", "extract_docstring"]], "babydragon.processors.parsers.python_parser.PythonMinifier": [[31, 1, 1, "", "get_minified_code"], [31, 1, 1, "", "minify"], [31, 1, 1, "", "minify_code"]], "babydragon.processors.parsers.python_parser.PythonParser": [[31, 1, 1, "", "process_directory"], [31, 1, 1, "", "process_file"], [31, 1, 1, "", "remove_docstring"]], "babydragon.processors.parsers.visitors": [[32, 0, 1, "", "FunctionAndClassVisitor"], [32, 0, 1, "", "FunctionCallFinder"], [32, 0, 1, "", "MultiplicationCounterVisitor"], [32, 0, 1, "", "TypingCollector"]], "babydragon.processors.parsers.visitors.FunctionAndClassVisitor": [[32, 1, 1, "", "visit_ClassDef"], [32, 1, 1, "", "visit_FunctionDef"]], "babydragon.processors.parsers.visitors.FunctionCallFinder": [[32, 2, 1, "", "METADATA_DEPENDENCIES"], [32, 1, 1, "", "visit_Call"]], "babydragon.processors.parsers.visitors.MultiplicationCounterVisitor": [[32, 1, 1, "", "leave_FunctionDef"], [32, 1, 1, "", "visit_BinaryOperation"], [32, 1, 1, "", "visit_Call"], [32, 1, 1, "", "visit_FunctionDef"]], "babydragon.processors.parsers.visitors.TypingCollector": [[32, 1, 1, "", "leave_ClassDef"], [32, 1, 1, "", "leave_FunctionDef"], [32, 1, 1, "", "visit_ClassDef"], [32, 1, 1, "", "visit_FunctionDef"]], "babydragon.tasks.base_task": [[33, 0, 1, "", "BaseTask"]], "babydragon.tasks.base_task.BaseTask": [[33, 2, 1, "", "backup"], [33, 1, 1, "", "execute_task"], [33, 2, 1, "", "failed_sub_tasks"], [33, 2, 1, "", "max_workers"], [33, 2, 1, "", "parallel"], [33, 2, 1, "", "path"], [33, 2, 1, "", "rate_limiter"], [33, 2, 1, "", "results"], [33, 2, 1, "", "save_path"], [33, 2, 1, "", "task_id"], [33, 1, 1, "", "work"]], "babydragon.tasks.embedding_task": [[34, 0, 1, "", "EmbeddingTask"]], "babydragon.tasks.llm_task": [[36, 0, 1, "", "LLMReader"], [36, 0, 1, "", "LLMWriter"]], "babydragon.tasks.llm_task.LLMReader": [[36, 1, 1, "", "llm_response"], [36, 1, 1, "", "read"]], "babydragon.tasks.llm_task.LLMWriter": [[36, 1, 1, "", "llm_response"], [36, 1, 1, "", "write"]], "babydragon.tasks.multi_kernel_task": [[37, 0, 1, "", "MultiKernelTask"]], "babydragon.tasks.multi_kernel_task.MultiKernelTask": [[37, 1, 1, "", "execute_task"], [37, 1, 1, "", "generate_task_paths"], [37, 1, 1, "", "llm_response"]], "babydragon.tasks.topic_tree_task": [[38, 0, 1, "", "TopicTreeTask"]], "babydragon.tasks.topic_tree_task.TopicTreeTask": [[38, 1, 1, "", "create_topic_tree"], [38, 1, 1, "", "execute_task"], [38, 1, 1, "", "generate_task_paths"], [38, 1, 1, "", "llm_response"]], "": [[25, 3, 0, "-", "cohere"], [42, 3, 0, "-", "pandas"]], "pandas": [[42, 0, 1, "", "ArrowDtype"], [42, 0, 1, "", "BooleanDtype"], [42, 0, 1, "", "Categorical"], [42, 0, 1, "", "CategoricalDtype"], [42, 0, 1, "", "CategoricalIndex"], [42, 0, 1, "", "DataFrame"], [42, 0, 1, "", "DateOffset"], [42, 0, 1, "", "DatetimeIndex"], [42, 0, 1, "", "DatetimeTZDtype"], [42, 0, 1, "", "ExcelFile"], [42, 0, 1, "", "ExcelWriter"], [42, 0, 1, "", "Flags"], [42, 0, 1, "", "Float32Dtype"], [42, 0, 1, "", "Float64Dtype"], [42, 0, 1, "", "Grouper"], [42, 0, 1, "", "HDFStore"], [42, 0, 1, "", "Index"], [42, 0, 1, "", "Int16Dtype"], [42, 0, 1, "", "Int32Dtype"], [42, 0, 1, "", "Int64Dtype"], [42, 0, 1, "", "Int8Dtype"], [42, 0, 1, "", "Interval"], [42, 0, 1, "", "IntervalDtype"], [42, 0, 1, "", "IntervalIndex"], [42, 0, 1, "", "MultiIndex"], [42, 0, 1, "", "NamedAgg"], [42, 0, 1, "", "Period"], [42, 0, 1, "", "PeriodDtype"], [42, 0, 1, "", "PeriodIndex"], [42, 0, 1, "", "RangeIndex"], [42, 0, 1, "", "Series"], [42, 0, 1, "", "SparseDtype"], [42, 0, 1, "", "StringDtype"], [42, 0, 1, "", "Timedelta"], [42, 0, 1, "", "TimedeltaIndex"], [42, 0, 1, "", "Timestamp"], [42, 0, 1, "", "UInt16Dtype"], [42, 0, 1, "", "UInt32Dtype"], [42, 0, 1, "", "UInt64Dtype"], [42, 0, 1, "", "UInt8Dtype"], [42, 5, 1, "", "array"], [42, 5, 1, "", "bdate_range"], [42, 5, 1, "", "concat"], [42, 5, 1, "", "crosstab"], [42, 5, 1, "", "cut"], [42, 5, 1, "", "date_range"], [42, 5, 1, "", "eval"], [42, 5, 1, "", "factorize"], [42, 5, 1, "", "from_dummies"], [42, 5, 1, "", "get_dummies"], [42, 5, 1, "", "infer_freq"], [42, 5, 1, "", "interval_range"], [42, 5, 1, "", "isna"], [42, 5, 1, "", "isnull"], [42, 5, 1, "", "json_normalize"], [42, 5, 1, "", "lreshape"], [42, 5, 1, "", "melt"], [42, 5, 1, "", "merge"], [42, 5, 1, "", "merge_asof"], [42, 5, 1, "", "merge_ordered"], [42, 5, 1, "", "notna"], [42, 5, 1, "", "notnull"], [42, 0, 1, "", "option_context"], [42, 5, 1, "", "period_range"], [42, 5, 1, "", "pivot"], [42, 5, 1, "", "pivot_table"], [42, 5, 1, "", "qcut"], [42, 5, 1, "", "read_clipboard"], [42, 5, 1, "", "read_csv"], [42, 5, 1, "", "read_excel"], [42, 5, 1, "", "read_feather"], [42, 5, 1, "", "read_fwf"], [42, 5, 1, "", "read_gbq"], [42, 5, 1, "", "read_hdf"], [42, 5, 1, "", "read_html"], [42, 5, 1, "", "read_json"], [42, 5, 1, "", "read_orc"], [42, 5, 1, "", "read_parquet"], [42, 5, 1, "", "read_pickle"], [42, 5, 1, "", "read_sas"], [42, 5, 1, "", "read_spss"], [42, 5, 1, "", "read_sql"], [42, 5, 1, "", "read_sql_query"], [42, 5, 1, "", "read_sql_table"], [42, 5, 1, "", "read_stata"], [42, 5, 1, "", "read_table"], [42, 5, 1, "", "read_xml"], [42, 5, 1, "", "set_eng_float_format"], [42, 5, 1, "", "show_versions"], [42, 5, 1, "", "test"], [42, 5, 1, "", "timedelta_range"], [42, 5, 1, "", "to_datetime"], [42, 5, 1, "", "to_numeric"], [42, 5, 1, "", "to_pickle"], [42, 5, 1, "", "to_timedelta"], [42, 5, 1, "", "unique"], [42, 5, 1, "", "value_counts"], [42, 5, 1, "", "wide_to_long"]], "pandas.ArrowDtype": [[42, 1, 1, "", "None"], [42, 1, 1, "", "construct_array_type"], [42, 1, 1, "", "construct_from_string"], [42, 2, 1, "", "itemsize"], [42, 2, 1, "", "kind"], [42, 4, 1, "", "name"], [42, 2, 1, "", "numpy_dtype"], [42, 2, 1, "", "pyarrow_dtype"], [42, 4, 1, "", "type"]], "pandas.BooleanDtype": [[42, 1, 1, "id0", "None"], [42, 1, 1, "", "construct_array_type"], [42, 4, 1, "", "kind"], [42, 2, 1, "", "name"], [42, 4, 1, "", "numpy_dtype"], [42, 4, 1, "", "type"]], "pandas.Categorical": [[42, 1, 1, "", "__array__"], [42, 1, 1, "", "add_categories"], [42, 1, 1, "", "argsort"], [42, 1, 1, "", "as_ordered"], [42, 1, 1, "", "as_unordered"], [42, 4, 1, "id3", "categories"], [42, 1, 1, "", "check_for_ordered"], [42, 4, 1, "id5", "codes"], [42, 1, 1, "", "describe"], [42, 4, 1, "id1", "dtype"], [42, 1, 1, "", "equals"], [42, 1, 1, "id2", "from_codes"], [42, 1, 1, "", "isin"], [42, 1, 1, "", "isna"], [42, 1, 1, "", "isnull"], [42, 1, 1, "", "map"], [42, 1, 1, "", "max"], [42, 1, 1, "", "memory_usage"], [42, 1, 1, "", "min"], [42, 4, 1, "", "nbytes"], [42, 1, 1, "", "notna"], [42, 1, 1, "", "notnull"], [42, 4, 1, "id4", "ordered"], [42, 1, 1, "", "remove_categories"], [42, 1, 1, "", "remove_unused_categories"], [42, 1, 1, "", "rename_categories"], [42, 1, 1, "", "reorder_categories"], [42, 1, 1, "", "set_categories"], [42, 1, 1, "", "set_ordered"], [42, 1, 1, "", "sort_values"], [42, 1, 1, "", "to_list"], [42, 1, 1, "", "unique"], [42, 1, 1, "", "value_counts"]], "pandas.CategoricalDtype": [[42, 1, 1, "", "None"], [42, 2, 1, "", "base"], [42, 4, 1, "id6", "categories"], [42, 1, 1, "", "construct_array_type"], [42, 1, 1, "", "construct_from_string"], [42, 2, 1, "", "kind"], [42, 2, 1, "", "name"], [42, 4, 1, "id7", "ordered"], [42, 2, 1, "", "str"], [42, 2, 1, "", "type"], [42, 1, 1, "", "update_dtype"], [42, 1, 1, "", "validate_categories"], [42, 1, 1, "", "validate_ordered"]], "pandas.CategoricalIndex": [[42, 1, 1, "id12", "add_categories"], [42, 1, 1, "", "argsort"], [42, 1, 1, "id13", "as_ordered"], [42, 1, 1, "id14", "as_unordered"], [42, 4, 1, "id9", "categories"], [42, 4, 1, "id8", "codes"], [42, 1, 1, "", "equals"], [42, 4, 1, "", "inferred_type"], [42, 1, 1, "id11", "map"], [42, 1, 1, "", "max"], [42, 1, 1, "", "min"], [42, 4, 1, "id10", "ordered"], [42, 1, 1, "", "reindex"], [42, 1, 1, "id15", "remove_categories"], [42, 1, 1, "id16", "remove_unused_categories"], [42, 1, 1, "id17", "rename_categories"], [42, 1, 1, "id18", "reorder_categories"], [42, 1, 1, "", "searchsorted"], [42, 1, 1, "id19", "set_categories"], [42, 1, 1, "", "tolist"]], "pandas.DataFrame": [[42, 4, 1, "", "T"], [42, 1, 1, "", "add"], [42, 1, 1, "", "agg"], [42, 1, 1, "", "aggregate"], [42, 1, 1, "", "align"], [42, 1, 1, "", "all"], [42, 1, 1, "", "any"], [42, 1, 1, "", "apply"], [42, 1, 1, "", "applymap"], [42, 1, 1, "", "asfreq"], [42, 1, 1, "", "assign"], [42, 4, 1, "", "axes"], [42, 1, 1, "", "bfill"], [42, 1, 1, "", "boxplot"], [42, 1, 1, "", "clip"], [42, 2, 1, "", "columns"], [42, 1, 1, "", "combine"], [42, 1, 1, "", "combine_first"], [42, 1, 1, "", "compare"], [42, 1, 1, "", "corr"], [42, 1, 1, "", "corrwith"], [42, 1, 1, "", "count"], [42, 1, 1, "", "cov"], [42, 1, 1, "", "cummax"], [42, 1, 1, "", "cummin"], [42, 1, 1, "", "cumprod"], [42, 1, 1, "", "cumsum"], [42, 1, 1, "", "diff"], [42, 1, 1, "", "div"], [42, 1, 1, "", "divide"], [42, 1, 1, "", "dot"], [42, 1, 1, "", "drop"], [42, 1, 1, "", "drop_duplicates"], [42, 1, 1, "", "dropna"], [42, 1, 1, "", "duplicated"], [42, 1, 1, "", "eq"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "explode"], [42, 1, 1, "", "ffill"], [42, 1, 1, "", "fillna"], [42, 1, 1, "", "floordiv"], [42, 1, 1, "", "from_dict"], [42, 1, 1, "", "from_records"], [42, 1, 1, "", "ge"], [42, 1, 1, "", "groupby"], [42, 1, 1, "", "gt"], [42, 1, 1, "", "hist"], [42, 1, 1, "", "idxmax"], [42, 1, 1, "", "idxmin"], [42, 2, 1, "", "index"], [42, 1, 1, "", "info"], [42, 1, 1, "", "insert"], [42, 1, 1, "", "interpolate"], [42, 1, 1, "", "isetitem"], [42, 1, 1, "", "isin"], [42, 1, 1, "", "isna"], [42, 1, 1, "", "isnull"], [42, 1, 1, "", "items"], [42, 1, 1, "", "iterrows"], [42, 1, 1, "", "itertuples"], [42, 1, 1, "", "join"], [42, 1, 1, "", "kurt"], [42, 1, 1, "", "kurtosis"], [42, 1, 1, "", "le"], [42, 1, 1, "", "lt"], [42, 1, 1, "", "mask"], [42, 1, 1, "", "max"], [42, 1, 1, "", "mean"], [42, 1, 1, "", "median"], [42, 1, 1, "", "melt"], [42, 1, 1, "", "memory_usage"], [42, 1, 1, "", "merge"], [42, 1, 1, "", "min"], [42, 1, 1, "", "mod"], [42, 1, 1, "", "mode"], [42, 1, 1, "", "mul"], [42, 1, 1, "", "multiply"], [42, 1, 1, "", "ne"], [42, 1, 1, "", "nlargest"], [42, 1, 1, "", "notna"], [42, 1, 1, "", "notnull"], [42, 1, 1, "", "nsmallest"], [42, 1, 1, "", "nunique"], [42, 1, 1, "", "pivot"], [42, 1, 1, "", "pivot_table"], [42, 2, 1, "", "plot"], [42, 1, 1, "", "pop"], [42, 1, 1, "", "pow"], [42, 1, 1, "", "prod"], [42, 1, 1, "", "product"], [42, 1, 1, "", "quantile"], [42, 1, 1, "", "query"], [42, 1, 1, "", "radd"], [42, 1, 1, "", "rdiv"], [42, 1, 1, "", "reindex"], [42, 1, 1, "", "rename"], [42, 1, 1, "", "reorder_levels"], [42, 1, 1, "", "replace"], [42, 1, 1, "", "resample"], [42, 1, 1, "", "reset_index"], [42, 1, 1, "", "rfloordiv"], [42, 1, 1, "", "rmod"], [42, 1, 1, "", "rmul"], [42, 1, 1, "", "round"], [42, 1, 1, "", "rpow"], [42, 1, 1, "", "rsub"], [42, 1, 1, "", "rtruediv"], [42, 1, 1, "", "select_dtypes"], [42, 1, 1, "", "sem"], [42, 1, 1, "", "set_axis"], [42, 1, 1, "", "set_index"], [42, 4, 1, "", "shape"], [42, 1, 1, "", "shift"], [42, 1, 1, "", "skew"], [42, 1, 1, "", "sort_index"], [42, 1, 1, "", "sort_values"], [42, 2, 1, "", "sparse"], [42, 1, 1, "", "stack"], [42, 1, 1, "", "std"], [42, 4, 1, "", "style"], [42, 1, 1, "", "sub"], [42, 1, 1, "", "subtract"], [42, 1, 1, "", "sum"], [42, 1, 1, "", "swaplevel"], [42, 1, 1, "", "to_dict"], [42, 1, 1, "", "to_feather"], [42, 1, 1, "", "to_gbq"], [42, 1, 1, "", "to_html"], [42, 1, 1, "", "to_markdown"], [42, 1, 1, "", "to_numpy"], [42, 1, 1, "", "to_orc"], [42, 1, 1, "", "to_parquet"], [42, 1, 1, "", "to_period"], [42, 1, 1, "", "to_records"], [42, 1, 1, "", "to_stata"], [42, 1, 1, "", "to_string"], [42, 1, 1, "", "to_timestamp"], [42, 1, 1, "", "to_xml"], [42, 1, 1, "", "transform"], [42, 1, 1, "", "transpose"], [42, 1, 1, "", "truediv"], [42, 1, 1, "", "unstack"], [42, 1, 1, "", "update"], [42, 1, 1, "", "value_counts"], [42, 4, 1, "", "values"], [42, 1, 1, "", "var"], [42, 1, 1, "", "where"]], "pandas.DatetimeIndex": [[42, 1, 1, "", "as_unit"], [42, 1, 1, "id31", "ceil"], [42, 4, 1, "id32", "date"], [42, 4, 1, "id33", "day"], [42, 1, 1, "id34", "day_name"], [42, 4, 1, "id35", "day_of_week"], [42, 4, 1, "id36", "day_of_year"], [42, 4, 1, "id37", "dayofweek"], [42, 4, 1, "id38", "dayofyear"], [42, 4, 1, "", "days_in_month"], [42, 4, 1, "", "daysinmonth"], [42, 4, 1, "", "dtype"], [42, 1, 1, "id39", "floor"], [42, 2, 1, "", "freq"], [42, 2, 1, "", "freqstr"], [42, 1, 1, "", "get_loc"], [42, 4, 1, "id40", "hour"], [42, 1, 1, "", "indexer_at_time"], [42, 1, 1, "", "indexer_between_time"], [42, 2, 1, "", "inferred_freq"], [42, 4, 1, "", "inferred_type"], [42, 4, 1, "id41", "is_leap_year"], [42, 4, 1, "id42", "is_month_end"], [42, 4, 1, "id43", "is_month_start"], [42, 2, 1, "", "is_normalized"], [42, 4, 1, "id44", "is_quarter_end"], [42, 4, 1, "id45", "is_quarter_start"], [42, 4, 1, "id46", "is_year_end"], [42, 4, 1, "id47", "is_year_start"], [42, 1, 1, "", "isocalendar"], [42, 1, 1, "", "mean"], [42, 4, 1, "id48", "microsecond"], [42, 4, 1, "id49", "minute"], [42, 4, 1, "id50", "month"], [42, 1, 1, "id51", "month_name"], [42, 4, 1, "id52", "nanosecond"], [42, 1, 1, "id53", "normalize"], [42, 4, 1, "id54", "quarter"], [42, 1, 1, "id55", "round"], [42, 4, 1, "id56", "second"], [42, 1, 1, "", "slice_indexer"], [42, 1, 1, "id30", "snap"], [42, 1, 1, "id57", "std"], [42, 1, 1, "id26", "strftime"], [42, 4, 1, "id58", "time"], [42, 4, 1, "id59", "timetz"], [42, 1, 1, "", "to_frame"], [42, 1, 1, "", "to_julian_date"], [42, 1, 1, "id29", "to_period"], [42, 1, 1, "id60", "to_pydatetime"], [42, 1, 1, "", "to_series"], [42, 4, 1, "id25", "tz"], [42, 1, 1, "id27", "tz_convert"], [42, 1, 1, "id28", "tz_localize"], [42, 4, 1, "", "tzinfo"], [42, 2, 1, "", "week"], [42, 4, 1, "id61", "weekday"], [42, 2, 1, "", "weekofyear"], [42, 4, 1, "id62", "year"]], "pandas.DatetimeTZDtype": [[42, 1, 1, "", "None"], [42, 2, 1, "", "base"], [42, 1, 1, "", "construct_array_type"], [42, 1, 1, "", "construct_from_string"], [42, 2, 1, "", "kind"], [42, 4, 1, "", "na_value"], [42, 4, 1, "", "name"], [42, 2, 1, "", "num"], [42, 2, 1, "", "str"], [42, 2, 1, "", "type"], [42, 4, 1, "id64", "tz"], [42, 4, 1, "id63", "unit"]], "pandas.ExcelFile": [[42, 0, 1, "", "ODFReader"], [42, 0, 1, "", "OpenpyxlReader"], [42, 0, 1, "", "PyxlsbReader"], [42, 0, 1, "", "XlrdReader"], [42, 4, 1, "", "book"], [42, 1, 1, "", "close"], [42, 1, 1, "", "parse"], [42, 4, 1, "", "sheet_names"]], "pandas.ExcelFile.ODFReader": [[42, 4, 1, "", "empty_value"], [42, 1, 1, "", "get_sheet_by_index"], [42, 1, 1, "", "get_sheet_by_name"], [42, 1, 1, "", "get_sheet_data"], [42, 1, 1, "", "load_workbook"], [42, 4, 1, "", "sheet_names"]], "pandas.ExcelFile.OpenpyxlReader": [[42, 1, 1, "", "get_sheet_by_index"], [42, 1, 1, "", "get_sheet_by_name"], [42, 1, 1, "", "get_sheet_data"], [42, 1, 1, "", "load_workbook"], [42, 4, 1, "", "sheet_names"]], "pandas.ExcelFile.PyxlsbReader": [[42, 1, 1, "", "get_sheet_by_index"], [42, 1, 1, "", "get_sheet_by_name"], [42, 1, 1, "", "get_sheet_data"], [42, 1, 1, "", "load_workbook"], [42, 4, 1, "", "sheet_names"]], "pandas.ExcelFile.XlrdReader": [[42, 1, 1, "", "get_sheet_by_index"], [42, 1, 1, "", "get_sheet_by_name"], [42, 1, 1, "", "get_sheet_data"], [42, 1, 1, "", "load_workbook"], [42, 4, 1, "", "sheet_names"]], "pandas.ExcelWriter": [[42, 4, 1, "", "book"], [42, 1, 1, "", "check_extension"], [42, 1, 1, "", "close"], [42, 4, 1, "", "date_format"], [42, 4, 1, "", "datetime_format"], [42, 4, 1, "", "engine"], [42, 4, 1, "", "if_sheet_exists"], [42, 4, 1, "", "sheets"], [42, 4, 1, "", "supported_extensions"]], "pandas.Flags": [[42, 4, 1, "", "allows_duplicate_labels"]], "pandas.Float32Dtype": [[42, 1, 1, "id66", "None"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]], "pandas.Float64Dtype": [[42, 1, 1, "id67", "None"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]], "pandas.Grouper": [[42, 4, 1, "", "ax"], [42, 2, 1, "", "dropna"], [42, 4, 1, "", "grouper"], [42, 4, 1, "", "groups"], [42, 4, 1, "", "indexer"], [42, 4, 1, "", "obj"], [42, 2, 1, "", "sort"]], "pandas.HDFStore": [[42, 1, 1, "", "append"], [42, 1, 1, "", "append_to_multiple"], [42, 1, 1, "", "close"], [42, 1, 1, "", "copy"], [42, 1, 1, "", "create_table_index"], [42, 4, 1, "", "filename"], [42, 1, 1, "", "flush"], [42, 1, 1, "", "get"], [42, 1, 1, "", "get_node"], [42, 1, 1, "", "get_storer"], [42, 1, 1, "", "groups"], [42, 1, 1, "", "info"], [42, 4, 1, "", "is_open"], [42, 1, 1, "", "items"], [42, 1, 1, "", "keys"], [42, 1, 1, "", "open"], [42, 1, 1, "", "put"], [42, 1, 1, "", "remove"], [42, 4, 1, "", "root"], [42, 1, 1, "", "select"], [42, 1, 1, "", "select_as_coordinates"], [42, 1, 1, "", "select_as_multiple"], [42, 1, 1, "", "select_column"], [42, 1, 1, "", "walk"]], "pandas.Index": [[42, 1, 1, "", "all"], [42, 1, 1, "", "any"], [42, 1, 1, "", "append"], [42, 1, 1, "", "argmax"], [42, 1, 1, "", "argmin"], [42, 1, 1, "", "argsort"], [42, 2, 1, "", "array"], [42, 1, 1, "", "asof"], [42, 1, 1, "", "asof_locs"], [42, 1, 1, "", "astype"], [42, 1, 1, "", "copy"], [42, 1, 1, "", "delete"], [42, 1, 1, "", "difference"], [42, 1, 1, "", "drop"], [42, 1, 1, "", "drop_duplicates"], [42, 1, 1, "", "droplevel"], [42, 1, 1, "", "dropna"], [42, 2, 1, "", "dtype"], [42, 1, 1, "", "duplicated"], [42, 1, 1, "", "equals"], [42, 1, 1, "", "fillna"], [42, 1, 1, "", "format"], [42, 1, 1, "", "get_indexer"], [42, 1, 1, "", "get_indexer_for"], [42, 1, 1, "", "get_indexer_non_unique"], [42, 1, 1, "", "get_level_values"], [42, 1, 1, "", "get_loc"], [42, 1, 1, "", "get_slice_bound"], [42, 1, 1, "", "groupby"], [42, 4, 1, "", "has_duplicates"], [42, 2, 1, "", "hasnans"], [42, 1, 1, "", "holds_integer"], [42, 1, 1, "", "identical"], [42, 1, 1, "", "infer_objects"], [42, 2, 1, "", "inferred_type"], [42, 1, 1, "", "insert"], [42, 1, 1, "", "intersection"], [42, 1, 1, "", "is_"], [42, 1, 1, "", "is_boolean"], [42, 1, 1, "", "is_categorical"], [42, 1, 1, "", "is_floating"], [42, 1, 1, "", "is_integer"], [42, 1, 1, "", "is_interval"], [42, 4, 1, "", "is_monotonic_decreasing"], [42, 4, 1, "", "is_monotonic_increasing"], [42, 1, 1, "", "is_numeric"], [42, 1, 1, "", "is_object"], [42, 2, 1, "", "is_unique"], [42, 1, 1, "", "isin"], [42, 1, 1, "", "isna"], [42, 1, 1, "", "isnull"], [42, 1, 1, "", "map"], [42, 1, 1, "", "max"], [42, 1, 1, "", "memory_usage"], [42, 1, 1, "", "min"], [42, 4, 1, "", "name"], [42, 4, 1, "", "names"], [42, 4, 1, "", "nlevels"], [42, 1, 1, "", "notna"], [42, 1, 1, "", "notnull"], [42, 1, 1, "", "putmask"], [42, 1, 1, "", "ravel"], [42, 1, 1, "", "reindex"], [42, 1, 1, "", "rename"], [42, 1, 1, "", "repeat"], [42, 1, 1, "", "set_names"], [42, 4, 1, "", "shape"], [42, 1, 1, "", "shift"], [42, 1, 1, "", "slice_indexer"], [42, 1, 1, "", "slice_locs"], [42, 1, 1, "", "sort"], [42, 1, 1, "", "sort_values"], [42, 1, 1, "", "sortlevel"], [42, 2, 1, "", "str"], [42, 1, 1, "", "symmetric_difference"], [42, 1, 1, "", "take"], [42, 1, 1, "", "to_flat_index"], [42, 1, 1, "", "to_frame"], [42, 1, 1, "", "to_series"], [42, 1, 1, "", "union"], [42, 1, 1, "", "unique"], [42, 4, 1, "", "values"], [42, 1, 1, "", "view"], [42, 1, 1, "", "where"]], "pandas.Int16Dtype": [[42, 1, 1, "id71", "None"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]], "pandas.Int32Dtype": [[42, 1, 1, "id72", "None"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]], "pandas.Int64Dtype": [[42, 1, 1, "id73", "None"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]], "pandas.Int8Dtype": [[42, 1, 1, "id74", "None"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]], "pandas.Interval": [[42, 2, 1, "", "closed"], [42, 2, 1, "", "left"], [42, 1, 1, "", "overlaps"], [42, 2, 1, "", "right"]], "pandas.IntervalDtype": [[42, 1, 1, "", "None"], [42, 2, 1, "", "base"], [42, 4, 1, "", "closed"], [42, 1, 1, "", "construct_array_type"], [42, 1, 1, "", "construct_from_string"], [42, 1, 1, "", "is_dtype"], [42, 2, 1, "", "kind"], [42, 2, 1, "", "name"], [42, 2, 1, "", "num"], [42, 2, 1, "", "str"], [42, 4, 1, "id75", "subtype"], [42, 4, 1, "", "type"]], "pandas.IntervalIndex": [[42, 2, 1, "id76", "closed"], [42, 4, 1, "", "closed_left"], [42, 4, 1, "", "closed_right"], [42, 1, 1, "id86", "contains"], [42, 1, 1, "id79", "from_arrays"], [42, 1, 1, "id78", "from_breaks"], [42, 1, 1, "id80", "from_tuples"], [42, 1, 1, "", "get_indexer_non_unique"], [42, 1, 1, "", "get_loc"], [42, 4, 1, "", "inferred_type"], [42, 4, 1, "id87", "is_empty"], [42, 2, 1, "", "is_monotonic_decreasing"], [42, 2, 1, "id77", "is_non_overlapping_monotonic"], [42, 4, 1, "id81", "is_overlapping"], [42, 2, 1, "", "is_unique"], [42, 2, 1, "id82", "left"], [42, 4, 1, "id85", "length"], [42, 1, 1, "", "memory_usage"], [42, 2, 1, "id84", "mid"], [42, 4, 1, "", "open_left"], [42, 4, 1, "", "open_right"], [42, 1, 1, "id88", "overlaps"], [42, 2, 1, "id83", "right"], [42, 1, 1, "id89", "set_closed"], [42, 1, 1, "id90", "to_tuples"], [42, 2, 1, "", "values"]], "pandas.MultiIndex": [[42, 1, 1, "", "append"], [42, 1, 1, "", "argsort"], [42, 4, 1, "", "array"], [42, 1, 1, "", "astype"], [42, 4, 1, "id100", "codes"], [42, 1, 1, "", "copy"], [42, 1, 1, "", "delete"], [42, 1, 1, "id107", "drop"], [42, 1, 1, "", "droplevel"], [42, 1, 1, "", "dropna"], [42, 2, 1, "", "dtype"], [42, 2, 1, "id95", "dtypes"], [42, 1, 1, "", "duplicated"], [42, 1, 1, "", "equal_levels"], [42, 1, 1, "", "equals"], [42, 1, 1, "", "fillna"], [42, 1, 1, "", "format"], [42, 1, 1, "id91", "from_arrays"], [42, 1, 1, "id94", "from_frame"], [42, 1, 1, "id93", "from_product"], [42, 1, 1, "id92", "from_tuples"], [42, 1, 1, "", "get_indexer"], [42, 1, 1, "id103", "get_level_values"], [42, 1, 1, "id113", "get_loc"], [42, 1, 1, "id114", "get_loc_level"], [42, 1, 1, "id115", "get_locs"], [42, 1, 1, "", "get_slice_bound"], [42, 2, 1, "", "inferred_type"], [42, 1, 1, "", "insert"], [42, 2, 1, "", "is_monotonic_decreasing"], [42, 2, 1, "", "is_monotonic_increasing"], [42, 1, 1, "", "isin"], [42, 2, 1, "id96", "levels"], [42, 4, 1, "id99", "levshape"], [42, 1, 1, "", "memory_usage"], [42, 4, 1, "id102", "names"], [42, 2, 1, "", "nbytes"], [42, 4, 1, "id98", "nlevels"], [42, 1, 1, "", "putmask"], [42, 1, 1, "id106", "remove_unused_levels"], [42, 1, 1, "", "rename"], [42, 1, 1, "id109", "reorder_levels"], [42, 1, 1, "", "repeat"], [42, 1, 1, "id101", "set_codes"], [42, 1, 1, "id97", "set_levels"], [42, 4, 1, "", "size"], [42, 1, 1, "", "slice_locs"], [42, 1, 1, "id110", "sortlevel"], [42, 2, 1, "", "sortorder"], [42, 1, 1, "id108", "swaplevel"], [42, 1, 1, "", "take"], [42, 1, 1, "id105", "to_flat_index"], [42, 1, 1, "id104", "to_frame"], [42, 1, 1, "", "truncate"], [42, 1, 1, "", "unique"], [42, 4, 1, "", "values"], [42, 1, 1, "", "view"]], "pandas.NamedAgg": [[42, 2, 1, "", "aggfunc"], [42, 2, 1, "", "column"]], "pandas.PeriodDtype": [[42, 1, 1, "", "None"], [42, 2, 1, "", "base"], [42, 1, 1, "", "construct_array_type"], [42, 1, 1, "", "construct_from_string"], [42, 4, 1, "id116", "freq"], [42, 1, 1, "", "is_dtype"], [42, 2, 1, "", "kind"], [42, 4, 1, "", "na_value"], [42, 4, 1, "", "name"], [42, 2, 1, "", "num"], [42, 2, 1, "", "str"], [42, 2, 1, "", "type"]], "pandas.PeriodIndex": [[42, 1, 1, "id117", "asfreq"], [42, 1, 1, "", "asof_locs"], [42, 4, 1, "id122", "day"], [42, 4, 1, "id123", "day_of_week"], [42, 4, 1, "id124", "day_of_year"], [42, 4, 1, "id125", "dayofweek"], [42, 4, 1, "id126", "dayofyear"], [42, 4, 1, "id127", "days_in_month"], [42, 4, 1, "id128", "daysinmonth"], [42, 4, 1, "id129", "end_time"], [42, 2, 1, "", "freq"], [42, 2, 1, "", "freqstr"], [42, 1, 1, "", "get_loc"], [42, 4, 1, "id119", "hour"], [42, 4, 1, "", "inferred_type"], [42, 4, 1, "", "is_full"], [42, 4, 1, "id130", "is_leap_year"], [42, 4, 1, "id120", "minute"], [42, 4, 1, "id131", "month"], [42, 4, 1, "id132", "quarter"], [42, 4, 1, "id133", "qyear"], [42, 4, 1, "id121", "second"], [42, 1, 1, "", "shift"], [42, 4, 1, "id134", "start_time"], [42, 1, 1, "id135", "strftime"], [42, 1, 1, "id118", "to_timestamp"], [42, 4, 1, "", "values"], [42, 4, 1, "id136", "week"], [42, 4, 1, "id137", "weekday"], [42, 4, 1, "id138", "weekofyear"], [42, 4, 1, "id139", "year"]], "pandas.RangeIndex": [[42, 1, 1, "", "all"], [42, 1, 1, "", "any"], [42, 1, 1, "", "argsort"], [42, 1, 1, "", "copy"], [42, 1, 1, "", "delete"], [42, 4, 1, "", "dtype"], [42, 1, 1, "", "equals"], [42, 1, 1, "", "factorize"], [42, 1, 1, "id140", "from_range"], [42, 1, 1, "", "get_loc"], [42, 4, 1, "", "inferred_type"], [42, 1, 1, "", "insert"], [42, 2, 1, "", "is_monotonic_decreasing"], [42, 2, 1, "", "is_monotonic_increasing"], [42, 4, 1, "", "is_unique"], [42, 1, 1, "", "max"], [42, 1, 1, "", "memory_usage"], [42, 1, 1, "", "min"], [42, 2, 1, "", "nbytes"], [42, 4, 1, "", "size"], [42, 1, 1, "", "sort_values"], [42, 4, 1, "id141", "start"], [42, 4, 1, "id143", "step"], [42, 4, 1, "id142", "stop"], [42, 1, 1, "", "symmetric_difference"], [42, 1, 1, "", "tolist"]], "pandas.Series": [[42, 1, 1, "", "add"], [42, 1, 1, "", "agg"], [42, 1, 1, "", "aggregate"], [42, 1, 1, "", "align"], [42, 1, 1, "", "all"], [42, 1, 1, "", "any"], [42, 1, 1, "", "apply"], [42, 1, 1, "", "argsort"], [42, 4, 1, "", "array"], [42, 1, 1, "", "asfreq"], [42, 1, 1, "", "autocorr"], [42, 4, 1, "", "axes"], [42, 1, 1, "", "between"], [42, 1, 1, "", "bfill"], [42, 2, 1, "", "cat"], [42, 1, 1, "", "clip"], [42, 1, 1, "", "combine"], [42, 1, 1, "", "combine_first"], [42, 1, 1, "", "compare"], [42, 1, 1, "", "corr"], [42, 1, 1, "", "count"], [42, 1, 1, "", "cov"], [42, 1, 1, "", "cummax"], [42, 1, 1, "", "cummin"], [42, 1, 1, "", "cumprod"], [42, 1, 1, "", "cumsum"], [42, 1, 1, "", "diff"], [42, 1, 1, "", "div"], [42, 1, 1, "", "divide"], [42, 1, 1, "", "divmod"], [42, 1, 1, "", "dot"], [42, 1, 1, "", "drop"], [42, 1, 1, "", "drop_duplicates"], [42, 1, 1, "", "dropna"], [42, 2, 1, "", "dt"], [42, 4, 1, "", "dtype"], [42, 4, 1, "", "dtypes"], [42, 1, 1, "", "duplicated"], [42, 1, 1, "", "eq"], [42, 1, 1, "", "explode"], [42, 1, 1, "", "ffill"], [42, 1, 1, "", "fillna"], [42, 1, 1, "", "floordiv"], [42, 1, 1, "", "ge"], [42, 1, 1, "", "groupby"], [42, 1, 1, "", "gt"], [42, 4, 1, "", "hasnans"], [42, 1, 1, "", "hist"], [42, 1, 1, "", "idxmax"], [42, 1, 1, "", "idxmin"], [42, 2, 1, "", "index"], [42, 1, 1, "", "info"], [42, 1, 1, "", "interpolate"], [42, 1, 1, "", "isin"], [42, 1, 1, "", "isna"], [42, 1, 1, "", "isnull"], [42, 1, 1, "", "items"], [42, 1, 1, "", "keys"], [42, 1, 1, "", "kurt"], [42, 1, 1, "", "kurtosis"], [42, 1, 1, "", "le"], [42, 1, 1, "", "lt"], [42, 1, 1, "", "map"], [42, 1, 1, "", "mask"], [42, 1, 1, "", "max"], [42, 1, 1, "", "mean"], [42, 1, 1, "", "median"], [42, 1, 1, "", "memory_usage"], [42, 1, 1, "", "min"], [42, 1, 1, "", "mod"], [42, 1, 1, "", "mode"], [42, 1, 1, "", "mul"], [42, 1, 1, "", "multiply"], [42, 4, 1, "", "name"], [42, 1, 1, "", "ne"], [42, 1, 1, "", "nlargest"], [42, 1, 1, "", "notna"], [42, 1, 1, "", "notnull"], [42, 1, 1, "", "nsmallest"], [42, 2, 1, "", "plot"], [42, 1, 1, "", "pop"], [42, 1, 1, "", "pow"], [42, 1, 1, "", "prod"], [42, 1, 1, "", "product"], [42, 1, 1, "", "quantile"], [42, 1, 1, "", "radd"], [42, 1, 1, "", "ravel"], [42, 1, 1, "", "rdiv"], [42, 1, 1, "", "rdivmod"], [42, 1, 1, "", "reindex"], [42, 1, 1, "", "rename"], [42, 1, 1, "", "rename_axis"], [42, 1, 1, "", "reorder_levels"], [42, 1, 1, "", "repeat"], [42, 1, 1, "", "replace"], [42, 1, 1, "", "resample"], [42, 1, 1, "", "reset_index"], [42, 1, 1, "", "rfloordiv"], [42, 1, 1, "", "rmod"], [42, 1, 1, "", "rmul"], [42, 1, 1, "", "round"], [42, 1, 1, "", "rpow"], [42, 1, 1, "", "rsub"], [42, 1, 1, "", "rtruediv"], [42, 1, 1, "", "searchsorted"], [42, 1, 1, "", "sem"], [42, 1, 1, "", "set_axis"], [42, 1, 1, "", "shift"], [42, 1, 1, "", "skew"], [42, 1, 1, "", "sort_index"], [42, 1, 1, "", "sort_values"], [42, 2, 1, "", "sparse"], [42, 1, 1, "", "std"], [42, 2, 1, "", "str"], [42, 1, 1, "", "sub"], [42, 1, 1, "", "subtract"], [42, 1, 1, "", "sum"], [42, 1, 1, "", "swaplevel"], [42, 1, 1, "", "take"], [42, 1, 1, "", "to_dict"], [42, 1, 1, "", "to_frame"], [42, 1, 1, "", "to_markdown"], [42, 1, 1, "", "to_period"], [42, 1, 1, "", "to_string"], [42, 1, 1, "", "to_timestamp"], [42, 1, 1, "", "transform"], [42, 1, 1, "", "truediv"], [42, 1, 1, "", "unique"], [42, 1, 1, "", "unstack"], [42, 1, 1, "", "update"], [42, 4, 1, "", "values"], [42, 1, 1, "", "var"], [42, 1, 1, "", "view"], [42, 1, 1, "", "where"]], "pandas.SparseDtype": [[42, 1, 1, "id171", "None"], [42, 1, 1, "", "construct_array_type"], [42, 1, 1, "", "construct_from_string"], [42, 4, 1, "", "fill_value"], [42, 1, 1, "", "is_dtype"], [42, 4, 1, "", "kind"], [42, 4, 1, "", "name"], [42, 4, 1, "", "subtype"], [42, 4, 1, "", "type"], [42, 1, 1, "", "update_dtype"]], "pandas.StringDtype": [[42, 1, 1, "id172", "None"], [42, 1, 1, "", "construct_array_type"], [42, 1, 1, "", "construct_from_string"], [42, 4, 1, "", "na_value"], [42, 2, 1, "", "name"], [42, 4, 1, "", "type"]], "pandas.Timedelta": [[42, 1, 1, "", "ceil"], [42, 1, 1, "", "floor"], [42, 1, 1, "", "round"]], "pandas.TimedeltaIndex": [[42, 1, 1, "id173", "ceil"], [42, 4, 1, "id174", "components"], [42, 4, 1, "id175", "days"], [42, 1, 1, "id176", "floor"], [42, 1, 1, "", "get_loc"], [42, 2, 1, "", "inferred_freq"], [42, 4, 1, "", "inferred_type"], [42, 1, 1, "", "mean"], [42, 1, 1, "", "median"], [42, 4, 1, "id177", "microseconds"], [42, 4, 1, "id178", "nanoseconds"], [42, 1, 1, "id179", "round"], [42, 4, 1, "id180", "seconds"], [42, 1, 1, "", "std"], [42, 1, 1, "", "sum"], [42, 1, 1, "", "to_frame"], [42, 1, 1, "id181", "to_pytimedelta"], [42, 1, 1, "", "to_series"], [42, 1, 1, "", "total_seconds"]], "pandas.Timestamp": [[42, 1, 1, "", "astimezone"], [42, 1, 1, "", "ceil"], [42, 1, 1, "", "combine"], [42, 2, 1, "", "daysinmonth"], [42, 1, 1, "", "floor"], [42, 1, 1, "", "fromordinal"], [42, 1, 1, "", "fromtimestamp"], [42, 1, 1, "", "isoweekday"], [42, 1, 1, "", "now"], [42, 1, 1, "", "replace"], [42, 1, 1, "", "round"], [42, 1, 1, "", "strftime"], [42, 1, 1, "", "strptime"], [42, 1, 1, "", "to_julian_date"], [42, 1, 1, "", "today"], [42, 4, 1, "", "tz"], [42, 1, 1, "", "tz_convert"], [42, 1, 1, "", "tz_localize"], [42, 1, 1, "", "utcfromtimestamp"], [42, 1, 1, "", "utcnow"], [42, 1, 1, "", "weekday"], [42, 2, 1, "", "weekofyear"]], "pandas.UInt16Dtype": [[42, 1, 1, "id182", "None"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]], "pandas.UInt32Dtype": [[42, 1, 1, "id183", "None"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]], "pandas.UInt64Dtype": [[42, 1, 1, "id184", "None"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]], "pandas.UInt8Dtype": [[42, 1, 1, "id185", "None"], [42, 2, 1, "", "name"], [42, 2, 1, "", "type"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:module", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "module", "Python module"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"__pycache__": [], "auto_perspect": [], "perspect": [], "base_chat": [], "chat": [3, 6], "memory_chat": [], "prompt": [], "default_prompt": [], "perspective_prompt": [], "welcom": 6, "babydragon": 6, "": 6, "document": 6, "task": 6, "memori": 6, "kernel": 6, "thread": 6, "index": 6, "util": 6, "model": 6, "embedd": 6, "gener": 6, "processor": 6, "app": 6, "memory_index": [], "pandas_index": [], "python_index": [], "todo": [], "github_index": [], "gutenberg_index": [], "multi_index": [], "parquet_index": [], "wiki_index": [], "youtube_index": [], "kernel_clust": [], "kernel_util": 12, "memory_kernel": [], "multi_kernel": [], "multi_kernel_visu": [], "base_thread": [], "fifo_thread": [], "python_thread": [], "vector_thread": [], "ada2": [], "coher": 25, "sbert": [], "chatgpt": 24, "github_processor": [], "os_processor": [], "parser": [], "git_metadata": [], "python_pars": [], "git_processor": [], "latex_pars": [], "md_parser": [], "subs_pars": [], "wiki_pars": [], "visitor": [], "arxiv_processor": [], "chatgpt_processor": [], "gutenberg_processor": [], "mit_course_processor": [], "pubmed_processor": [], "wiki_processor": [], "youtube_processor": [], "base_task": [], "embedding_task": [], "llm_task": [], "multi_kernel_task": [], "topic_tree_task": [], "chatml": 39, "hf_dataset": 40, "multithread": [], "panda": 42, "power": 42, "data": 42, "analysi": 42, "manipul": 42, "librari": 42, "python": 42, "main": 42, "featur": 42, "paramet": [], "attribut": [], "method": [], "return": [], "exampl": [], "see": [], "also": [], "rais": [], "note": [], "yield": [], "associative_memori": [], "short_term_memori": [], "subjectperspectiveanalyz": 1, "ideat": 1, "ideaclust": 1, "summar": 1, "perspectivepromptgener": 1, "prompter": 2, "basechat": 2, "fifochat": 5, "vectorchat": 5, "fifovectorchat": 5, "memoryindex": 8, "pandasindex": 9, "clusterpath": 11, "hdbscanpath": 11, "spectralclusteringpath": 11, "memorykernel": 13, "multikernel": 14, "hdbscanmultikernel": 14, "spectralclusteringmultikernel": 14, "multikernelvisu": 15, "multikernelstabilityanalysi": 15, "basethread": 16, "fifothread": 17, "vectorthread": 19, "openaiembedd": 20, "cohereembedd": 21, "sbertembedd": 23, "githubprocessor": 27, "osprocessor": 28, "issuepars": 29, "commitpars": 29, "pythonminifi": 31, "pythondocstringextractor": 31, "functionandclassvisitor": [31, 32], "pythonpars": 31, "functioncallfind": 32, "multiplicationcountervisitor": 32, "typingcollector": 32, "basetask": 33, "embeddingtask": 34, "llmreader": 36, "llmwriter": 36, "multikerneltask": 37, "topictreetask": 38}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"SubjectPerspectiveAnalyzer": [[1, "subjectperspectiveanalyzer"]], "Ideation": [[1, "ideation"]], "IdeaCluster": [[1, "ideacluster"]], "Summarizer": [[1, "summarizer"]], "PerspectivePromptGenerator": [[1, "perspectivepromptgenerator"]], "Prompter": [[2, "prompter"]], "BaseChat": [[2, "basechat"]], "Chat": [[3, "chat"]], "FifoChat": [[5, "fifochat"]], "VectorChat": [[5, "vectorchat"]], "FifoVectorChat": [[5, "fifovectorchat"]], "Welcome to BabyDragon\u2019s documentation!": [[6, "welcome-to-babydragon-s-documentation"]], "Tasks:": [[6, null]], "Memory/Kernels:": [[6, null]], "Memory/Threads:": [[6, null]], "Memory/Indexes:": [[6, null]], "Chat:": [[6, null]], "Utils:": [[6, null]], "Models/embedders:": [[6, null]], "Models/generators:": [[6, null]], "Processors:": [[6, null]], "Apps:": [[6, null]], "MemoryIndex": [[8, "memoryindex"]], "PandasIndex": [[9, "pandasindex"]], "ClusterPaths": [[11, "clusterpaths"]], "HDBSCANPaths": [[11, "hdbscanpaths"]], "SpectralClusteringPaths": [[11, "spectralclusteringpaths"]], "kernel_utils": [[12, "kernel-utils"]], "MemoryKernel": [[13, "memorykernel"]], "MultiKernel": [[14, "multikernel"]], "HDBSCANMultiKernel": [[14, "hdbscanmultikernel"]], "SpectralClusteringMultiKernel": [[14, "spectralclusteringmultikernel"]], "MultiKernelVisualization": [[15, "multikernelvisualization"]], "MultiKernelStabilityAnalysis": [[15, "multikernelstabilityanalysis"]], "BaseThread": [[16, "basethread"]], "FifoThread": [[17, "fifothread"]], "VectorThread": [[19, "vectorthread"]], "OpenAiEmbedder": [[20, "openaiembedder"]], "CohereEmbedder": [[21, "cohereembedder"]], "SBERTEmbedder": [[23, "sbertembedder"]], "chatgpt": [[24, "chatgpt"]], "cohere": [[25, "module-cohere"]], "GithubProcessor": [[27, "githubprocessor"]], "OsProcessor": [[28, "osprocessor"]], "IssueParser": [[29, "issueparser"]], "CommitParser": [[29, "commitparser"]], "PythonMinifier": [[31, "pythonminifier"]], "PythonDocstringExtractor": [[31, "pythondocstringextractor"]], "FunctionAndClassVisitor": [[31, "functionandclassvisitor"], [32, "functionandclassvisitor"]], "PythonParser": [[31, "pythonparser"]], "FunctionCallFinder": [[32, "functioncallfinder"]], "MultiplicationCounterVisitor": [[32, "multiplicationcountervisitor"]], "TypingCollector": [[32, "typingcollector"]], "BaseTask": [[33, "basetask"]], "EmbeddingTask": [[34, "embeddingtask"]], "LLMReader": [[36, "llmreader"]], "LLMWriter": [[36, "llmwriter"]], "MultiKernelTask": [[37, "multikerneltask"]], "TopicTreeTask": [[38, "topictreetask"]], "chatml": [[39, "chatml"]], "hf_datasets": [[40, "hf-datasets"]], "pandas": [[42, "module-pandas"]], "pandas - a powerful data analysis and manipulation library for Python": [[42, "pandas-a-powerful-data-analysis-and-manipulation-library-for-python"]], "Main Features": [[42, "main-features"]]}, "indexentries": {"ideacluster (class in babydragon.apps.auto_perspective.perspective)": [[1, "babydragon.apps.auto_perspective.perspective.IdeaCluster"]], "ideation (class in babydragon.apps.auto_perspective.perspective)": [[1, "babydragon.apps.auto_perspective.perspective.Ideation"]], "perspectivepromptgenerator (class in babydragon.apps.auto_perspective.perspective)": [[1, "babydragon.apps.auto_perspective.perspective.PerspectivePromptGenerator"]], "subjectperspectiveanalyzer (class in babydragon.apps.auto_perspective.perspective)": [[1, "babydragon.apps.auto_perspective.perspective.SubjectPerspectiveAnalyzer"]], "summarizer (class in babydragon.apps.auto_perspective.perspective)": [[1, "babydragon.apps.auto_perspective.perspective.Summarizer"]], "analyze_subject_perspective() (babydragon.apps.auto_perspective.perspective.subjectperspectiveanalyzer method)": [[1, "babydragon.apps.auto_perspective.perspective.SubjectPerspectiveAnalyzer.analyze_subject_perspective"]], "cluster_embeddings() (babydragon.apps.auto_perspective.perspective.ideacluster method)": [[1, "babydragon.apps.auto_perspective.perspective.IdeaCluster.cluster_embeddings"]], "count_tokens_per_cluster() (babydragon.apps.auto_perspective.perspective.ideacluster method)": [[1, "babydragon.apps.auto_perspective.perspective.IdeaCluster.count_tokens_per_cluster"]], "create_idea_index() (babydragon.apps.auto_perspective.perspective.ideacluster method)": [[1, "babydragon.apps.auto_perspective.perspective.IdeaCluster.create_idea_index"]], "create_minimum_spanning_paths() (babydragon.apps.auto_perspective.perspective.ideacluster method)": [[1, "babydragon.apps.auto_perspective.perspective.IdeaCluster.create_minimum_spanning_paths"]], "generate_prompts() (babydragon.apps.auto_perspective.perspective.perspectivepromptgenerator method)": [[1, "babydragon.apps.auto_perspective.perspective.PerspectivePromptGenerator.generate_prompts"]], "get_clustered_ideas() (babydragon.apps.auto_perspective.perspective.ideacluster method)": [[1, "babydragon.apps.auto_perspective.perspective.IdeaCluster.get_clustered_ideas"]], "handle_future() (babydragon.apps.auto_perspective.perspective.perspectivepromptgenerator method)": [[1, "babydragon.apps.auto_perspective.perspective.PerspectivePromptGenerator.handle_future"]], "plot_embeddings_with_path() (babydragon.apps.auto_perspective.perspective.ideacluster method)": [[1, "babydragon.apps.auto_perspective.perspective.IdeaCluster.plot_embeddings_with_path"]], "retrieve_ideas() (babydragon.apps.auto_perspective.perspective.ideation method)": [[1, "babydragon.apps.auto_perspective.perspective.Ideation.retrieve_ideas"]], "save_prompts_to_json() (babydragon.apps.auto_perspective.perspective.perspectivepromptgenerator method)": [[1, "babydragon.apps.auto_perspective.perspective.PerspectivePromptGenerator.save_prompts_to_json"]], "summarize_texts() (babydragon.apps.auto_perspective.perspective.summarizer method)": [[1, "babydragon.apps.auto_perspective.perspective.Summarizer.summarize_texts"]], "basechat (class in babydragon.chat.base_chat)": [[2, "babydragon.chat.base_chat.BaseChat"]], "prompter (class in babydragon.chat.base_chat)": [[2, "babydragon.chat.base_chat.Prompter"]], "chat_response() (babydragon.chat.base_chat.basechat method)": [[2, "babydragon.chat.base_chat.BaseChat.chat_response"]], "default_user_prompt() (babydragon.chat.base_chat.prompter method)": [[2, "babydragon.chat.base_chat.Prompter.default_user_prompt"]], "get_logs() (babydragon.chat.base_chat.basechat method)": [[2, "babydragon.chat.base_chat.BaseChat.get_logs"]], "gradio() (babydragon.chat.base_chat.basechat method)": [[2, "babydragon.chat.base_chat.BaseChat.gradio"]], "identity_prompter() (babydragon.chat.base_chat.basechat method)": [[2, "babydragon.chat.base_chat.BaseChat.identity_prompter"]], "one_shot_prompt() (babydragon.chat.base_chat.prompter method)": [[2, "babydragon.chat.base_chat.Prompter.one_shot_prompt"]], "query() (babydragon.chat.base_chat.basechat method)": [[2, "babydragon.chat.base_chat.BaseChat.query"]], "reply() (babydragon.chat.base_chat.basechat method)": [[2, "babydragon.chat.base_chat.BaseChat.reply"]], "reset_logs() (babydragon.chat.base_chat.basechat method)": [[2, "babydragon.chat.base_chat.BaseChat.reset_logs"]], "run_text() (babydragon.chat.base_chat.basechat method)": [[2, "babydragon.chat.base_chat.BaseChat.run_text"]], "set_default_prompts() (babydragon.chat.base_chat.prompter method)": [[2, "babydragon.chat.base_chat.Prompter.set_default_prompts"]], "update_system_prompt() (babydragon.chat.base_chat.prompter method)": [[2, "babydragon.chat.base_chat.Prompter.update_system_prompt"]], "update_user_prompt() (babydragon.chat.base_chat.prompter method)": [[2, "babydragon.chat.base_chat.Prompter.update_user_prompt"]], "chat (class in babydragon.chat.chat)": [[3, "babydragon.chat.chat.Chat"]], "add_user_defined_ids() (babydragon.chat.chat.chat method)": [[3, "babydragon.chat.chat.Chat.add_user_defined_ids"]], "get_index_hints() (babydragon.chat.chat.chat method)": [[3, "babydragon.chat.chat.Chat.get_index_hints"]], "set_current_index() (babydragon.chat.chat.chat method)": [[3, "babydragon.chat.chat.Chat.set_current_index"]], "setup_index_prompts() (babydragon.chat.chat.chat method)": [[3, "babydragon.chat.chat.Chat.setup_index_prompts"]], "setup_indices() (babydragon.chat.chat.chat method)": [[3, "babydragon.chat.chat.Chat.setup_indices"]], "fifochat (class in babydragon.chat.memory_chat)": [[5, "babydragon.chat.memory_chat.FifoChat"]], "fifovectorchat (class in babydragon.chat.memory_chat)": [[5, "babydragon.chat.memory_chat.FifoVectorChat"]], "vectorchat (class in babydragon.chat.memory_chat)": [[5, "babydragon.chat.memory_chat.VectorChat"]], "fifo_memory_prompt() (babydragon.chat.memory_chat.fifochat method)": [[5, "babydragon.chat.memory_chat.FifoChat.fifo_memory_prompt"]], "fifovector_memory_prompt() (babydragon.chat.memory_chat.fifovectorchat method)": [[5, "babydragon.chat.memory_chat.FifoVectorChat.fifovector_memory_prompt"]], "query() (babydragon.chat.memory_chat.fifochat method)": [[5, "babydragon.chat.memory_chat.FifoChat.query"]], "query() (babydragon.chat.memory_chat.fifovectorchat method)": [[5, "babydragon.chat.memory_chat.FifoVectorChat.query"]], "query() (babydragon.chat.memory_chat.vectorchat method)": [[5, "babydragon.chat.memory_chat.VectorChat.query"]], "setup_longterm_memory() (babydragon.chat.memory_chat.fifovectorchat method)": [[5, "babydragon.chat.memory_chat.FifoVectorChat.setup_longterm_memory"]], "vector_memory_prompt() (babydragon.chat.memory_chat.vectorchat method)": [[5, "babydragon.chat.memory_chat.VectorChat.vector_memory_prompt"]], "weighted_memory_prompt() (babydragon.chat.memory_chat.vectorchat method)": [[5, "babydragon.chat.memory_chat.VectorChat.weighted_memory_prompt"]], "memoryindex (class in babydragon.memory.indexes.memory_index)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex"]], "add_batch_to_index() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.add_batch_to_index"]], "add_to_index() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.add_to_index"]], "faiss_query() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.faiss_query"]], "from_hf_dataset() (babydragon.memory.indexes.memory_index.memoryindex class method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.from_hf_dataset"]], "from_pandas() (babydragon.memory.indexes.memory_index.memoryindex class method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.from_pandas"]], "get_all_embeddings() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.get_all_embeddings"]], "get_embedding_by_index() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.get_embedding_by_index"]], "get_embedding_by_value() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.get_embedding_by_value"]], "get_index_by_value() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.get_index_by_value"]], "init_index() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.init_index"]], "load() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.load"]], "prune() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.prune"]], "remove_from_index() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.remove_from_index"]], "save() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.save"]], "token_bound_query() (babydragon.memory.indexes.memory_index.memoryindex method)": [[8, "babydragon.memory.indexes.memory_index.MemoryIndex.token_bound_query"]], "pandasindex (class in babydragon.memory.indexes.pandas_index)": [[9, "babydragon.memory.indexes.pandas_index.PandasIndex"]], "add_row() (babydragon.memory.indexes.pandas_index.pandasindex method)": [[9, "babydragon.memory.indexes.pandas_index.PandasIndex.add_row"]], "apply_llmtask() (babydragon.memory.indexes.pandas_index.pandasindex method)": [[9, "babydragon.memory.indexes.pandas_index.PandasIndex.apply_llmtask"]], "query_columns() (babydragon.memory.indexes.pandas_index.pandasindex method)": [[9, "babydragon.memory.indexes.pandas_index.PandasIndex.query_columns"]], "remove_row() (babydragon.memory.indexes.pandas_index.pandasindex method)": [[9, "babydragon.memory.indexes.pandas_index.PandasIndex.remove_row"]], "rows_from_value() (babydragon.memory.indexes.pandas_index.pandasindex method)": [[9, "babydragon.memory.indexes.pandas_index.PandasIndex.rows_from_value"]], "setup_columns() (babydragon.memory.indexes.pandas_index.pandasindex method)": [[9, "babydragon.memory.indexes.pandas_index.PandasIndex.setup_columns"]], "clusterpaths (class in babydragon.memory.kernels.kernel_clustering)": [[11, "babydragon.memory.kernels.kernel_clustering.ClusterPaths"]], "hdbscanpaths (class in babydragon.memory.kernels.kernel_clustering)": [[11, "babydragon.memory.kernels.kernel_clustering.HDBSCANPaths"]], "spectralclusteringpaths (class in babydragon.memory.kernels.kernel_clustering)": [[11, "babydragon.memory.kernels.kernel_clustering.SpectralClusteringPaths"]], "create_paths() (babydragon.memory.kernels.kernel_clustering.clusterpaths method)": [[11, "babydragon.memory.kernels.kernel_clustering.ClusterPaths.create_paths"]], "create_paths() (babydragon.memory.kernels.kernel_clustering.hdbscanpaths method)": [[11, "babydragon.memory.kernels.kernel_clustering.HDBSCANPaths.create_paths"]], "create_paths() (babydragon.memory.kernels.kernel_clustering.spectralclusteringpaths method)": [[11, "babydragon.memory.kernels.kernel_clustering.SpectralClusteringPaths.create_paths"]], "memorykernel (class in babydragon.memory.kernels.memory_kernel)": [[13, "babydragon.memory.kernels.memory_kernel.MemoryKernel"]], "compute_kernel() (babydragon.memory.kernels.memory_kernel.memorykernel method)": [[13, "babydragon.memory.kernels.memory_kernel.MemoryKernel.compute_kernel"]], "cos_sim() (babydragon.memory.kernels.memory_kernel.memorykernel method)": [[13, "babydragon.memory.kernels.memory_kernel.MemoryKernel.cos_sim"]], "create_k_hop_index() (babydragon.memory.kernels.memory_kernel.memorykernel method)": [[13, "babydragon.memory.kernels.memory_kernel.MemoryKernel.create_k_hop_index"]], "from_task_results() (babydragon.memory.kernels.memory_kernel.memorykernel class method)": [[13, "babydragon.memory.kernels.memory_kernel.MemoryKernel.from_task_results"]], "gen_gse_embeddings() (babydragon.memory.kernels.memory_kernel.memorykernel method)": [[13, "babydragon.memory.kernels.memory_kernel.MemoryKernel.gen_gse_embeddings"]], "graph_sylvester_embedding() (babydragon.memory.kernels.memory_kernel.memorykernel method)": [[13, "babydragon.memory.kernels.memory_kernel.MemoryKernel.graph_sylvester_embedding"]], "k_hop_message_passing() (babydragon.memory.kernels.memory_kernel.memorykernel method)": [[13, "babydragon.memory.kernels.memory_kernel.MemoryKernel.k_hop_message_passing"]], "hdbscanmultikernel (class in babydragon.memory.kernels.multi_kernel)": [[14, "babydragon.memory.kernels.multi_kernel.HDBSCANMultiKernel"]], "multikernel (class in babydragon.memory.kernels.multi_kernel)": [[14, "babydragon.memory.kernels.multi_kernel.MultiKernel"]], "spectralclusteringmultikernel (class in babydragon.memory.kernels.multi_kernel)": [[14, "babydragon.memory.kernels.multi_kernel.SpectralClusteringMultiKernel"]], "cluster_paths (babydragon.memory.kernels.multi_kernel.hdbscanmultikernel attribute)": [[14, "babydragon.memory.kernels.multi_kernel.HDBSCANMultiKernel.cluster_paths"]], "cluster_paths (babydragon.memory.kernels.multi_kernel.spectralclusteringmultikernel attribute)": [[14, "babydragon.memory.kernels.multi_kernel.SpectralClusteringMultiKernel.cluster_paths"]], "generate_path_groups() (babydragon.memory.kernels.multi_kernel.hdbscanmultikernel method)": [[14, "babydragon.memory.kernels.multi_kernel.HDBSCANMultiKernel.generate_path_groups"]], "generate_path_groups() (babydragon.memory.kernels.multi_kernel.spectralclusteringmultikernel method)": [[14, "babydragon.memory.kernels.multi_kernel.SpectralClusteringMultiKernel.generate_path_groups"]], "memory_kernel_dict (babydragon.memory.kernels.multi_kernel.multikernel attribute)": [[14, "babydragon.memory.kernels.multi_kernel.MultiKernel.memory_kernel_dict"]], "name (babydragon.memory.kernels.multi_kernel.multikernel attribute)": [[14, "babydragon.memory.kernels.multi_kernel.MultiKernel.name"]], "path_group (babydragon.memory.kernels.multi_kernel.multikernel attribute)": [[14, "babydragon.memory.kernels.multi_kernel.MultiKernel.path_group"]], "multikernelstabilityanalysis (class in babydragon.memory.kernels.multi_kernel_visualization)": [[15, "babydragon.memory.kernels.multi_kernel_visualization.MultiKernelStabilityAnalysis"]], "multikernelvisualization (class in babydragon.memory.kernels.multi_kernel_visualization)": [[15, "babydragon.memory.kernels.multi_kernel_visualization.MultiKernelVisualization"]], "compute_nmi() (babydragon.memory.kernels.multi_kernel_visualization.multikernelstabilityanalysis method)": [[15, "babydragon.memory.kernels.multi_kernel_visualization.MultiKernelStabilityAnalysis.compute_nmi"]], "evaluate_stability() (babydragon.memory.kernels.multi_kernel_visualization.multikernelstabilityanalysis method)": [[15, "babydragon.memory.kernels.multi_kernel_visualization.MultiKernelStabilityAnalysis.evaluate_stability"]], "get_cluster_labels() (babydragon.memory.kernels.multi_kernel_visualization.multikernelstabilityanalysis method)": [[15, "babydragon.memory.kernels.multi_kernel_visualization.MultiKernelStabilityAnalysis.get_cluster_labels"]], "plot_embeddings_with_path() (babydragon.memory.kernels.multi_kernel_visualization.multikernelvisualization method)": [[15, "babydragon.memory.kernels.multi_kernel_visualization.MultiKernelVisualization.plot_embeddings_with_path"]], "plot_singular_values() (babydragon.memory.kernels.multi_kernel_visualization.multikernelvisualization method)": [[15, "babydragon.memory.kernels.multi_kernel_visualization.MultiKernelVisualization.plot_singular_values"]], "visualize_paths() (babydragon.memory.kernels.multi_kernel_visualization.multikernelvisualization method)": [[15, "babydragon.memory.kernels.multi_kernel_visualization.MultiKernelVisualization.visualize_paths"]], "basethread (class in babydragon.memory.threads.base_thread)": [[16, "babydragon.memory.threads.base_thread.BaseThread"]], "add_message() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.add_message"]], "find_message() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.find_message"]], "find_role() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.find_role"]], "first_message() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.first_message"]], "get_message_role() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.get_message_role"]], "get_message_tokens() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.get_message_tokens"]], "last_message() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.last_message"]], "messages_after() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.messages_after"]], "messages_after_time() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.messages_after_time"]], "messages_before() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.messages_before"]], "messages_before_time() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.messages_before_time"]], "messages_between() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.messages_between"]], "messages_between_time() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.messages_between_time"]], "messages_between_tokens() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.messages_between_tokens"]], "messages_less_tokens() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.messages_less_tokens"]], "messages_more_tokens() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.messages_more_tokens"]], "remove_message() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.remove_message"]], "reset_memory() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.reset_memory"]], "token_bound_history() (babydragon.memory.threads.base_thread.basethread method)": [[16, "babydragon.memory.threads.base_thread.BaseThread.token_bound_history"]], "fifothread (class in babydragon.memory.threads.fifo_thread)": [[17, "babydragon.memory.threads.fifo_thread.FifoThread"]], "add_message() (babydragon.memory.threads.fifo_thread.fifothread method)": [[17, "babydragon.memory.threads.fifo_thread.FifoThread.add_message"]], "to_longterm() (babydragon.memory.threads.fifo_thread.fifothread method)": [[17, "babydragon.memory.threads.fifo_thread.FifoThread.to_longterm"]], "vectorthread (class in babydragon.memory.threads.vector_thread)": [[19, "babydragon.memory.threads.vector_thread.VectorThread"]], "add_message() (babydragon.memory.threads.vector_thread.vectorthread method)": [[19, "babydragon.memory.threads.vector_thread.VectorThread.add_message"]], "index_message() (babydragon.memory.threads.vector_thread.vectorthread method)": [[19, "babydragon.memory.threads.vector_thread.VectorThread.index_message"]], "sorted_query() (babydragon.memory.threads.vector_thread.vectorthread method)": [[19, "babydragon.memory.threads.vector_thread.VectorThread.sorted_query"]], "token_bound_query() (babydragon.memory.threads.vector_thread.vectorthread method)": [[19, "babydragon.memory.threads.vector_thread.VectorThread.token_bound_query"]], "weighted_query() (babydragon.memory.threads.vector_thread.vectorthread method)": [[19, "babydragon.memory.threads.vector_thread.VectorThread.weighted_query"]], "openaiembedder (class in babydragon.models.embedders.ada2)": [[20, "babydragon.models.embedders.ada2.OpenAiEmbedder"]], "batch_embed() (babydragon.models.embedders.ada2.openaiembedder method)": [[20, "babydragon.models.embedders.ada2.OpenAiEmbedder.batch_embed"]], "embed() (babydragon.models.embedders.ada2.openaiembedder method)": [[20, "babydragon.models.embedders.ada2.OpenAiEmbedder.embed"]], "get_embedding_size() (babydragon.models.embedders.ada2.openaiembedder method)": [[20, "babydragon.models.embedders.ada2.OpenAiEmbedder.get_embedding_size"]], "cohereembedder (class in babydragon.models.embedders.cohere)": [[21, "babydragon.models.embedders.cohere.CohereEmbedder"]], "embed() (babydragon.models.embedders.cohere.cohereembedder method)": [[21, "babydragon.models.embedders.cohere.CohereEmbedder.embed"]], "get_embedding_size() (babydragon.models.embedders.cohere.cohereembedder method)": [[21, "babydragon.models.embedders.cohere.CohereEmbedder.get_embedding_size"]], "sbertembedder (class in babydragon.models.embedders.sbert)": [[23, "babydragon.models.embedders.sbert.SBERTEmbedder"]], "embed() (babydragon.models.embedders.sbert.sbertembedder method)": [[23, "babydragon.models.embedders.sbert.SBERTEmbedder.embed"]], "get_embedding_size() (babydragon.models.embedders.sbert.sbertembedder method)": [[23, "babydragon.models.embedders.sbert.SBERTEmbedder.get_embedding_size"]], "cohere": [[25, "module-cohere"]], "module": [[25, "module-cohere"], [42, "module-pandas"]], "githubprocessor (class in babydragon.processors.github_processors)": [[27, "babydragon.processors.github_processors.GithubProcessor"]], "clone_repo() (babydragon.processors.github_processors.githubprocessor method)": [[27, "babydragon.processors.github_processors.GithubProcessor.clone_repo"]], "get_commits() (babydragon.processors.github_processors.githubprocessor method)": [[27, "babydragon.processors.github_processors.GithubProcessor.get_commits"]], "get_issues() (babydragon.processors.github_processors.githubprocessor method)": [[27, "babydragon.processors.github_processors.GithubProcessor.get_issues"]], "get_public_repos() (babydragon.processors.github_processors.githubprocessor method)": [[27, "babydragon.processors.github_processors.GithubProcessor.get_public_repos"]], "get_repo() (babydragon.processors.github_processors.githubprocessor method)": [[27, "babydragon.processors.github_processors.GithubProcessor.get_repo"]], "parse_commits() (babydragon.processors.github_processors.githubprocessor method)": [[27, "babydragon.processors.github_processors.GithubProcessor.parse_commits"]], "parse_issues() (babydragon.processors.github_processors.githubprocessor method)": [[27, "babydragon.processors.github_processors.GithubProcessor.parse_issues"]], "process_repo() (babydragon.processors.github_processors.githubprocessor method)": [[27, "babydragon.processors.github_processors.GithubProcessor.process_repo"]], "process_repos() (babydragon.processors.github_processors.githubprocessor method)": [[27, "babydragon.processors.github_processors.GithubProcessor.process_repos"]], "process_single_repo() (babydragon.processors.github_processors.githubprocessor method)": [[27, "babydragon.processors.github_processors.GithubProcessor.process_single_repo"]], "osprocessor (class in babydragon.processors.os_processor)": [[28, "babydragon.processors.os_processor.OsProcessor"]], "copy_file() (babydragon.processors.os_processor.osprocessor method)": [[28, "babydragon.processors.os_processor.OsProcessor.copy_file"]], "create_directory() (babydragon.processors.os_processor.osprocessor method)": [[28, "babydragon.processors.os_processor.OsProcessor.create_directory"]], "delete_directory() (babydragon.processors.os_processor.osprocessor method)": [[28, "babydragon.processors.os_processor.OsProcessor.delete_directory"]], "get_all_files() (babydragon.processors.os_processor.osprocessor method)": [[28, "babydragon.processors.os_processor.OsProcessor.get_all_files"]], "get_file_extension() (babydragon.processors.os_processor.osprocessor method)": [[28, "babydragon.processors.os_processor.OsProcessor.get_file_extension"]], "get_files_with_extension() (babydragon.processors.os_processor.osprocessor method)": [[28, "babydragon.processors.os_processor.OsProcessor.get_files_with_extension"]], "get_subdirectories() (babydragon.processors.os_processor.osprocessor method)": [[28, "babydragon.processors.os_processor.OsProcessor.get_subdirectories"]], "move_file() (babydragon.processors.os_processor.osprocessor method)": [[28, "babydragon.processors.os_processor.OsProcessor.move_file"]], "commitparser (class in babydragon.processors.parsers.git_metadata)": [[29, "babydragon.processors.parsers.git_metadata.CommitParser"]], "issueparser (class in babydragon.processors.parsers.git_metadata)": [[29, "babydragon.processors.parsers.git_metadata.IssueParser"]], "get_commits() (babydragon.processors.parsers.git_metadata.commitparser method)": [[29, "babydragon.processors.parsers.git_metadata.CommitParser.get_commits"]], "get_issues() (babydragon.processors.parsers.git_metadata.issueparser method)": [[29, "babydragon.processors.parsers.git_metadata.IssueParser.get_issues"]], "parse_commits() (babydragon.processors.parsers.git_metadata.commitparser method)": [[29, "babydragon.processors.parsers.git_metadata.CommitParser.parse_commits"]], "parse_issues() (babydragon.processors.parsers.git_metadata.issueparser method)": [[29, "babydragon.processors.parsers.git_metadata.IssueParser.parse_issues"]], "functionandclassvisitor (class in babydragon.processors.parsers.python_parser)": [[31, "babydragon.processors.parsers.python_parser.FunctionAndClassVisitor"]], "pythondocstringextractor (class in babydragon.processors.parsers.python_parser)": [[31, "babydragon.processors.parsers.python_parser.PythonDocstringExtractor"]], "pythonminifier (class in babydragon.processors.parsers.python_parser)": [[31, "babydragon.processors.parsers.python_parser.PythonMinifier"]], "pythonparser (class in babydragon.processors.parsers.python_parser)": [[31, "babydragon.processors.parsers.python_parser.PythonParser"]], "extract_docstring() (babydragon.processors.parsers.python_parser.pythondocstringextractor static method)": [[31, "babydragon.processors.parsers.python_parser.PythonDocstringExtractor.extract_docstring"]], "get_minified_code() (babydragon.processors.parsers.python_parser.pythonminifier method)": [[31, "babydragon.processors.parsers.python_parser.PythonMinifier.get_minified_code"]], "minify() (babydragon.processors.parsers.python_parser.pythonminifier method)": [[31, "babydragon.processors.parsers.python_parser.PythonMinifier.minify"]], "minify_code() (babydragon.processors.parsers.python_parser.pythonminifier static method)": [[31, "babydragon.processors.parsers.python_parser.PythonMinifier.minify_code"]], "process_directory() (babydragon.processors.parsers.python_parser.pythonparser method)": [[31, "babydragon.processors.parsers.python_parser.PythonParser.process_directory"]], "process_file() (babydragon.processors.parsers.python_parser.pythonparser method)": [[31, "babydragon.processors.parsers.python_parser.PythonParser.process_file"]], "remove_docstring() (babydragon.processors.parsers.python_parser.pythonparser method)": [[31, "babydragon.processors.parsers.python_parser.PythonParser.remove_docstring"]], "visit_classdef() (babydragon.processors.parsers.python_parser.functionandclassvisitor method)": [[31, "babydragon.processors.parsers.python_parser.FunctionAndClassVisitor.visit_ClassDef"]], "visit_functiondef() (babydragon.processors.parsers.python_parser.functionandclassvisitor method)": [[31, "babydragon.processors.parsers.python_parser.FunctionAndClassVisitor.visit_FunctionDef"]], "functionandclassvisitor (class in babydragon.processors.parsers.visitors)": [[32, "babydragon.processors.parsers.visitors.FunctionAndClassVisitor"]], "functioncallfinder (class in babydragon.processors.parsers.visitors)": [[32, "babydragon.processors.parsers.visitors.FunctionCallFinder"]], "metadata_dependencies (babydragon.processors.parsers.visitors.functioncallfinder attribute)": [[32, "babydragon.processors.parsers.visitors.FunctionCallFinder.METADATA_DEPENDENCIES"]], "multiplicationcountervisitor (class in babydragon.processors.parsers.visitors)": [[32, "babydragon.processors.parsers.visitors.MultiplicationCounterVisitor"]], "typingcollector (class in babydragon.processors.parsers.visitors)": [[32, "babydragon.processors.parsers.visitors.TypingCollector"]], "leave_classdef() (babydragon.processors.parsers.visitors.typingcollector method)": [[32, "babydragon.processors.parsers.visitors.TypingCollector.leave_ClassDef"]], "leave_functiondef() (babydragon.processors.parsers.visitors.multiplicationcountervisitor method)": [[32, "babydragon.processors.parsers.visitors.MultiplicationCounterVisitor.leave_FunctionDef"]], "leave_functiondef() (babydragon.processors.parsers.visitors.typingcollector method)": [[32, "babydragon.processors.parsers.visitors.TypingCollector.leave_FunctionDef"]], "visit_binaryoperation() (babydragon.processors.parsers.visitors.multiplicationcountervisitor method)": [[32, "babydragon.processors.parsers.visitors.MultiplicationCounterVisitor.visit_BinaryOperation"]], "visit_call() (babydragon.processors.parsers.visitors.functioncallfinder method)": [[32, "babydragon.processors.parsers.visitors.FunctionCallFinder.visit_Call"]], "visit_call() (babydragon.processors.parsers.visitors.multiplicationcountervisitor method)": [[32, "babydragon.processors.parsers.visitors.MultiplicationCounterVisitor.visit_Call"]], "visit_classdef() (babydragon.processors.parsers.visitors.functionandclassvisitor method)": [[32, "babydragon.processors.parsers.visitors.FunctionAndClassVisitor.visit_ClassDef"]], "visit_classdef() (babydragon.processors.parsers.visitors.typingcollector method)": [[32, "babydragon.processors.parsers.visitors.TypingCollector.visit_ClassDef"]], "visit_functiondef() (babydragon.processors.parsers.visitors.functionandclassvisitor method)": [[32, "babydragon.processors.parsers.visitors.FunctionAndClassVisitor.visit_FunctionDef"]], "visit_functiondef() (babydragon.processors.parsers.visitors.multiplicationcountervisitor method)": [[32, "babydragon.processors.parsers.visitors.MultiplicationCounterVisitor.visit_FunctionDef"]], "visit_functiondef() (babydragon.processors.parsers.visitors.typingcollector method)": [[32, "babydragon.processors.parsers.visitors.TypingCollector.visit_FunctionDef"]], "basetask (class in babydragon.tasks.base_task)": [[33, "babydragon.tasks.base_task.BaseTask"]], "backup (babydragon.tasks.base_task.basetask attribute)": [[33, "babydragon.tasks.base_task.BaseTask.backup"]], "execute_task() (babydragon.tasks.base_task.basetask method)": [[33, "babydragon.tasks.base_task.BaseTask.execute_task"]], "failed_sub_tasks (babydragon.tasks.base_task.basetask attribute)": [[33, "babydragon.tasks.base_task.BaseTask.failed_sub_tasks"]], "max_workers (babydragon.tasks.base_task.basetask attribute)": [[33, "babydragon.tasks.base_task.BaseTask.max_workers"]], "parallel (babydragon.tasks.base_task.basetask attribute)": [[33, "babydragon.tasks.base_task.BaseTask.parallel"]], "path (babydragon.tasks.base_task.basetask attribute)": [[33, "babydragon.tasks.base_task.BaseTask.path"]], "rate_limiter (babydragon.tasks.base_task.basetask attribute)": [[33, "babydragon.tasks.base_task.BaseTask.rate_limiter"]], "results (babydragon.tasks.base_task.basetask attribute)": [[33, "babydragon.tasks.base_task.BaseTask.results"]], "save_path (babydragon.tasks.base_task.basetask attribute)": [[33, "babydragon.tasks.base_task.BaseTask.save_path"]], "task_id (babydragon.tasks.base_task.basetask attribute)": [[33, "babydragon.tasks.base_task.BaseTask.task_id"]], "work() (babydragon.tasks.base_task.basetask method)": [[33, "babydragon.tasks.base_task.BaseTask.work"]], "embeddingtask (class in babydragon.tasks.embedding_task)": [[34, "babydragon.tasks.embedding_task.EmbeddingTask"]], "llmreader (class in babydragon.tasks.llm_task)": [[36, "babydragon.tasks.llm_task.LLMReader"]], "llmwriter (class in babydragon.tasks.llm_task)": [[36, "babydragon.tasks.llm_task.LLMWriter"]], "llm_response() (babydragon.tasks.llm_task.llmreader method)": [[36, "babydragon.tasks.llm_task.LLMReader.llm_response"]], "llm_response() (babydragon.tasks.llm_task.llmwriter method)": [[36, "babydragon.tasks.llm_task.LLMWriter.llm_response"]], "read() (babydragon.tasks.llm_task.llmreader method)": [[36, "babydragon.tasks.llm_task.LLMReader.read"]], "write() (babydragon.tasks.llm_task.llmwriter method)": [[36, "babydragon.tasks.llm_task.LLMWriter.write"]], "multikerneltask (class in babydragon.tasks.multi_kernel_task)": [[37, "babydragon.tasks.multi_kernel_task.MultiKernelTask"]], "execute_task() (babydragon.tasks.multi_kernel_task.multikerneltask method)": [[37, "babydragon.tasks.multi_kernel_task.MultiKernelTask.execute_task"]], "generate_task_paths() (babydragon.tasks.multi_kernel_task.multikerneltask method)": [[37, "babydragon.tasks.multi_kernel_task.MultiKernelTask.generate_task_paths"]], "llm_response() (babydragon.tasks.multi_kernel_task.multikerneltask method)": [[37, "babydragon.tasks.multi_kernel_task.MultiKernelTask.llm_response"]], "topictreetask (class in babydragon.tasks.topic_tree_task)": [[38, "babydragon.tasks.topic_tree_task.TopicTreeTask"]], "create_topic_tree() (babydragon.tasks.topic_tree_task.topictreetask method)": [[38, "babydragon.tasks.topic_tree_task.TopicTreeTask.create_topic_tree"]], "execute_task() (babydragon.tasks.topic_tree_task.topictreetask method)": [[38, "babydragon.tasks.topic_tree_task.TopicTreeTask.execute_task"]], "generate_task_paths() (babydragon.tasks.topic_tree_task.topictreetask method)": [[38, "babydragon.tasks.topic_tree_task.TopicTreeTask.generate_task_paths"]], "llm_response() (babydragon.tasks.topic_tree_task.topictreetask method)": [[38, "babydragon.tasks.topic_tree_task.TopicTreeTask.llm_response"]], "arrowdtype (class in pandas)": [[42, "pandas.ArrowDtype"]], "booleandtype (class in pandas)": [[42, "pandas.BooleanDtype"]], "categorical (class in pandas)": [[42, "pandas.Categorical"]], "categoricaldtype (class in pandas)": [[42, "pandas.CategoricalDtype"]], "categoricalindex (class in pandas)": [[42, "pandas.CategoricalIndex"]], "dataframe (class in pandas)": [[42, "pandas.DataFrame"]], "dateoffset (class in pandas)": [[42, "pandas.DateOffset"]], "datetimeindex (class in pandas)": [[42, "pandas.DatetimeIndex"]], "datetimetzdtype (class in pandas)": [[42, "pandas.DatetimeTZDtype"]], "excelfile (class in pandas)": [[42, "pandas.ExcelFile"]], "excelfile.odfreader (class in pandas)": [[42, "pandas.ExcelFile.ODFReader"]], "excelfile.openpyxlreader (class in pandas)": [[42, "pandas.ExcelFile.OpenpyxlReader"]], "excelfile.pyxlsbreader (class in pandas)": [[42, "pandas.ExcelFile.PyxlsbReader"]], "excelfile.xlrdreader (class in pandas)": [[42, "pandas.ExcelFile.XlrdReader"]], "excelwriter (class in pandas)": [[42, "pandas.ExcelWriter"]], "flags (class in pandas)": [[42, "pandas.Flags"]], "float32dtype (class in pandas)": [[42, "pandas.Float32Dtype"]], "float64dtype (class in pandas)": [[42, "pandas.Float64Dtype"]], "grouper (class in pandas)": [[42, "pandas.Grouper"]], "hdfstore (class in pandas)": [[42, "pandas.HDFStore"]], "index (class in pandas)": [[42, "pandas.Index"]], "int16dtype (class in pandas)": [[42, "pandas.Int16Dtype"]], "int32dtype (class in pandas)": [[42, "pandas.Int32Dtype"]], "int64dtype (class in pandas)": [[42, "pandas.Int64Dtype"]], "int8dtype (class in pandas)": [[42, "pandas.Int8Dtype"]], "interval (class in pandas)": [[42, "pandas.Interval"]], "intervaldtype (class in pandas)": [[42, "pandas.IntervalDtype"]], "intervalindex (class in pandas)": [[42, "pandas.IntervalIndex"]], "multiindex (class in pandas)": [[42, "pandas.MultiIndex"]], "namedagg (class in pandas)": [[42, "pandas.NamedAgg"]], "none (pandas.booleandtype attribute)": [[42, "pandas.BooleanDtype.None"]], "none (pandas.float32dtype attribute)": [[42, "pandas.Float32Dtype.None"]], "none (pandas.float64dtype attribute)": [[42, "pandas.Float64Dtype.None"]], "none (pandas.int16dtype attribute)": [[42, "pandas.Int16Dtype.None"]], "none (pandas.int32dtype attribute)": [[42, "pandas.Int32Dtype.None"]], "none (pandas.int64dtype attribute)": [[42, "pandas.Int64Dtype.None"]], "none (pandas.int8dtype attribute)": [[42, "pandas.Int8Dtype.None"]], "none (pandas.sparsedtype attribute)": [[42, "pandas.SparseDtype.None"]], "none (pandas.stringdtype attribute)": [[42, "pandas.StringDtype.None"]], "none (pandas.uint16dtype attribute)": [[42, "pandas.UInt16Dtype.None"]], "none (pandas.uint32dtype attribute)": [[42, "pandas.UInt32Dtype.None"]], "none (pandas.uint64dtype attribute)": [[42, "pandas.UInt64Dtype.None"]], "none (pandas.uint8dtype attribute)": [[42, "pandas.UInt8Dtype.None"]], "none() (pandas.arrowdtype method)": [[42, "pandas.ArrowDtype.None"]], "none() (pandas.booleandtype method)": [[42, "id0"]], "none() (pandas.categoricaldtype method)": [[42, "pandas.CategoricalDtype.None"]], "none() (pandas.datetimetzdtype method)": [[42, "pandas.DatetimeTZDtype.None"]], "none() (pandas.float32dtype method)": [[42, "id66"]], "none() (pandas.float64dtype method)": [[42, "id67"]], "none() (pandas.int16dtype method)": [[42, "id71"]], "none() (pandas.int32dtype method)": [[42, "id72"]], "none() (pandas.int64dtype method)": [[42, "id73"]], "none() (pandas.int8dtype method)": [[42, "id74"]], "none() (pandas.intervaldtype method)": [[42, "pandas.IntervalDtype.None"]], "none() (pandas.perioddtype method)": [[42, "pandas.PeriodDtype.None"]], "none() (pandas.sparsedtype method)": [[42, "id171"]], "none() (pandas.stringdtype method)": [[42, "id172"]], "none() (pandas.uint16dtype method)": [[42, "id182"]], "none() (pandas.uint32dtype method)": [[42, "id183"]], "none() (pandas.uint64dtype method)": [[42, "id184"]], "none() (pandas.uint8dtype method)": [[42, "id185"]], "period (class in pandas)": [[42, "pandas.Period"]], "perioddtype (class in pandas)": [[42, "pandas.PeriodDtype"]], "periodindex (class in pandas)": [[42, "pandas.PeriodIndex"]], "rangeindex (class in pandas)": [[42, "pandas.RangeIndex"]], "series (class in pandas)": [[42, "pandas.Series"]], "sparsedtype (class in pandas)": [[42, "pandas.SparseDtype"]], "stringdtype (class in pandas)": [[42, "pandas.StringDtype"]], "t (pandas.dataframe property)": [[42, "pandas.DataFrame.T"]], "timedelta (class in pandas)": [[42, "pandas.Timedelta"]], "timedeltaindex (class in pandas)": [[42, "pandas.TimedeltaIndex"]], "timestamp (class in pandas)": [[42, "pandas.Timestamp"]], "uint16dtype (class in pandas)": [[42, "pandas.UInt16Dtype"]], "uint32dtype (class in pandas)": [[42, "pandas.UInt32Dtype"]], "uint64dtype (class in pandas)": [[42, "pandas.UInt64Dtype"]], "uint8dtype (class in pandas)": [[42, "pandas.UInt8Dtype"]], "__array__() (pandas.categorical method)": [[42, "pandas.Categorical.__array__"]], "add() (pandas.dataframe method)": [[42, "pandas.DataFrame.add"]], "add() (pandas.series method)": [[42, "pandas.Series.add"]], "add_categories() (pandas.categorical method)": [[42, "pandas.Categorical.add_categories"]], "add_categories() (pandas.categoricalindex method)": [[42, "id12"], [42, "pandas.CategoricalIndex.add_categories"]], "agg() (pandas.dataframe method)": [[42, "pandas.DataFrame.agg"]], "agg() (pandas.series method)": [[42, "pandas.Series.agg"]], "aggfunc (pandas.namedagg attribute)": [[42, "pandas.NamedAgg.aggfunc"]], "aggregate() (pandas.dataframe method)": [[42, "pandas.DataFrame.aggregate"]], "aggregate() (pandas.series method)": [[42, "pandas.Series.aggregate"]], "align() (pandas.dataframe method)": [[42, "pandas.DataFrame.align"]], "align() (pandas.series method)": [[42, "pandas.Series.align"]], "all() (pandas.dataframe method)": [[42, "pandas.DataFrame.all"]], "all() (pandas.index method)": [[42, "pandas.Index.all"]], "all() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.all"]], "all() (pandas.series method)": [[42, "pandas.Series.all"]], "allows_duplicate_labels (pandas.flags property)": [[42, "pandas.Flags.allows_duplicate_labels"]], "any() (pandas.dataframe method)": [[42, "pandas.DataFrame.any"]], "any() (pandas.index method)": [[42, "pandas.Index.any"]], "any() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.any"]], "any() (pandas.series method)": [[42, "pandas.Series.any"]], "append() (pandas.hdfstore method)": [[42, "pandas.HDFStore.append"]], "append() (pandas.index method)": [[42, "pandas.Index.append"]], "append() (pandas.multiindex method)": [[42, "pandas.MultiIndex.append"]], "append_to_multiple() (pandas.hdfstore method)": [[42, "pandas.HDFStore.append_to_multiple"]], "apply() (pandas.dataframe method)": [[42, "pandas.DataFrame.apply"]], "apply() (pandas.series method)": [[42, "pandas.Series.apply"]], "applymap() (pandas.dataframe method)": [[42, "pandas.DataFrame.applymap"]], "argmax() (pandas.index method)": [[42, "pandas.Index.argmax"]], "argmin() (pandas.index method)": [[42, "pandas.Index.argmin"]], "argsort() (pandas.categorical method)": [[42, "pandas.Categorical.argsort"]], "argsort() (pandas.categoricalindex method)": [[42, "pandas.CategoricalIndex.argsort"]], "argsort() (pandas.index method)": [[42, "pandas.Index.argsort"]], "argsort() (pandas.multiindex method)": [[42, "pandas.MultiIndex.argsort"]], "argsort() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.argsort"]], "argsort() (pandas.series method)": [[42, "pandas.Series.argsort"]], "array (pandas.index attribute)": [[42, "pandas.Index.array"]], "array (pandas.multiindex property)": [[42, "pandas.MultiIndex.array"]], "array (pandas.series property)": [[42, "pandas.Series.array"]], "array() (in module pandas)": [[42, "pandas.array"]], "as_ordered() (pandas.categorical method)": [[42, "pandas.Categorical.as_ordered"]], "as_ordered() (pandas.categoricalindex method)": [[42, "id13"], [42, "pandas.CategoricalIndex.as_ordered"]], "as_unit() (pandas.datetimeindex method)": [[42, "pandas.DatetimeIndex.as_unit"]], "as_unordered() (pandas.categorical method)": [[42, "pandas.Categorical.as_unordered"]], "as_unordered() (pandas.categoricalindex method)": [[42, "id14"], [42, "pandas.CategoricalIndex.as_unordered"]], "asfreq() (pandas.dataframe method)": [[42, "pandas.DataFrame.asfreq"]], "asfreq() (pandas.periodindex method)": [[42, "id117"], [42, "pandas.PeriodIndex.asfreq"]], "asfreq() (pandas.series method)": [[42, "pandas.Series.asfreq"]], "asof() (pandas.index method)": [[42, "pandas.Index.asof"]], "asof_locs() (pandas.index method)": [[42, "pandas.Index.asof_locs"]], "asof_locs() (pandas.periodindex method)": [[42, "pandas.PeriodIndex.asof_locs"]], "assign() (pandas.dataframe method)": [[42, "pandas.DataFrame.assign"]], "astimezone() (pandas.timestamp method)": [[42, "pandas.Timestamp.astimezone"]], "astype() (pandas.index method)": [[42, "pandas.Index.astype"]], "astype() (pandas.multiindex method)": [[42, "pandas.MultiIndex.astype"]], "autocorr() (pandas.series method)": [[42, "pandas.Series.autocorr"]], "ax (pandas.grouper property)": [[42, "pandas.Grouper.ax"]], "axes (pandas.dataframe property)": [[42, "pandas.DataFrame.axes"]], "axes (pandas.series property)": [[42, "pandas.Series.axes"]], "base (pandas.categoricaldtype attribute)": [[42, "pandas.CategoricalDtype.base"]], "base (pandas.datetimetzdtype attribute)": [[42, "pandas.DatetimeTZDtype.base"]], "base (pandas.intervaldtype attribute)": [[42, "pandas.IntervalDtype.base"]], "base (pandas.perioddtype attribute)": [[42, "pandas.PeriodDtype.base"]], "bdate_range() (in module pandas)": [[42, "pandas.bdate_range"]], "between() (pandas.series method)": [[42, "pandas.Series.between"]], "bfill() (pandas.dataframe method)": [[42, "pandas.DataFrame.bfill"]], "bfill() (pandas.series method)": [[42, "pandas.Series.bfill"]], "book (pandas.excelfile property)": [[42, "pandas.ExcelFile.book"]], "book (pandas.excelwriter property)": [[42, "pandas.ExcelWriter.book"]], "boxplot() (pandas.dataframe method)": [[42, "pandas.DataFrame.boxplot"]], "cat (pandas.series attribute)": [[42, "pandas.Series.cat"]], "categories (pandas.categorical attribute)": [[42, "pandas.Categorical.categories"]], "categories (pandas.categorical property)": [[42, "id3"]], "categories (pandas.categoricaldtype attribute)": [[42, "pandas.CategoricalDtype.categories"]], "categories (pandas.categoricaldtype property)": [[42, "id6"]], "categories (pandas.categoricalindex attribute)": [[42, "pandas.CategoricalIndex.categories"]], "categories (pandas.categoricalindex property)": [[42, "id9"]], "ceil() (pandas.datetimeindex method)": [[42, "id31"], [42, "pandas.DatetimeIndex.ceil"]], "ceil() (pandas.timedelta method)": [[42, "pandas.Timedelta.ceil"]], "ceil() (pandas.timedeltaindex method)": [[42, "id173"], [42, "pandas.TimedeltaIndex.ceil"]], "ceil() (pandas.timestamp method)": [[42, "pandas.Timestamp.ceil"]], "check_extension() (pandas.excelwriter class method)": [[42, "pandas.ExcelWriter.check_extension"]], "check_for_ordered() (pandas.categorical method)": [[42, "pandas.Categorical.check_for_ordered"]], "clip() (pandas.dataframe method)": [[42, "pandas.DataFrame.clip"]], "clip() (pandas.series method)": [[42, "pandas.Series.clip"]], "close() (pandas.excelfile method)": [[42, "pandas.ExcelFile.close"]], "close() (pandas.excelwriter method)": [[42, "pandas.ExcelWriter.close"]], "close() (pandas.hdfstore method)": [[42, "pandas.HDFStore.close"]], "closed (pandas.interval attribute)": [[42, "pandas.Interval.closed"]], "closed (pandas.intervaldtype property)": [[42, "pandas.IntervalDtype.closed"]], "closed (pandas.intervalindex attribute)": [[42, "id76"], [42, "pandas.IntervalIndex.closed"]], "closed_left (pandas.intervalindex property)": [[42, "pandas.IntervalIndex.closed_left"]], "closed_right (pandas.intervalindex property)": [[42, "pandas.IntervalIndex.closed_right"]], "codes (pandas.categorical attribute)": [[42, "pandas.Categorical.codes"]], "codes (pandas.categorical property)": [[42, "id5"]], "codes (pandas.categoricalindex attribute)": [[42, "pandas.CategoricalIndex.codes"]], "codes (pandas.categoricalindex property)": [[42, "id8"]], "codes (pandas.multiindex attribute)": [[42, "pandas.MultiIndex.codes"]], "codes (pandas.multiindex property)": [[42, "id100"]], "column (pandas.namedagg attribute)": [[42, "pandas.NamedAgg.column"]], "columns (pandas.dataframe attribute)": [[42, "pandas.DataFrame.columns"]], "combine() (pandas.dataframe method)": [[42, "pandas.DataFrame.combine"]], "combine() (pandas.series method)": [[42, "pandas.Series.combine"]], "combine() (pandas.timestamp class method)": [[42, "pandas.Timestamp.combine"]], "combine_first() (pandas.dataframe method)": [[42, "pandas.DataFrame.combine_first"]], "combine_first() (pandas.series method)": [[42, "pandas.Series.combine_first"]], "compare() (pandas.dataframe method)": [[42, "pandas.DataFrame.compare"]], "compare() (pandas.series method)": [[42, "pandas.Series.compare"]], "components (pandas.timedeltaindex attribute)": [[42, "pandas.TimedeltaIndex.components"]], "components (pandas.timedeltaindex property)": [[42, "id174"]], "concat() (in module pandas)": [[42, "pandas.concat"]], "construct_array_type() (pandas.arrowdtype class method)": [[42, "pandas.ArrowDtype.construct_array_type"]], "construct_array_type() (pandas.booleandtype class method)": [[42, "pandas.BooleanDtype.construct_array_type"]], "construct_array_type() (pandas.categoricaldtype class method)": [[42, "pandas.CategoricalDtype.construct_array_type"]], "construct_array_type() (pandas.datetimetzdtype class method)": [[42, "pandas.DatetimeTZDtype.construct_array_type"]], "construct_array_type() (pandas.intervaldtype class method)": [[42, "pandas.IntervalDtype.construct_array_type"]], "construct_array_type() (pandas.perioddtype class method)": [[42, "pandas.PeriodDtype.construct_array_type"]], "construct_array_type() (pandas.sparsedtype class method)": [[42, "pandas.SparseDtype.construct_array_type"]], "construct_array_type() (pandas.stringdtype method)": [[42, "pandas.StringDtype.construct_array_type"]], "construct_from_string() (pandas.arrowdtype class method)": [[42, "pandas.ArrowDtype.construct_from_string"]], "construct_from_string() (pandas.categoricaldtype class method)": [[42, "pandas.CategoricalDtype.construct_from_string"]], "construct_from_string() (pandas.datetimetzdtype class method)": [[42, "pandas.DatetimeTZDtype.construct_from_string"]], "construct_from_string() (pandas.intervaldtype class method)": [[42, "pandas.IntervalDtype.construct_from_string"]], "construct_from_string() (pandas.perioddtype class method)": [[42, "pandas.PeriodDtype.construct_from_string"]], "construct_from_string() (pandas.sparsedtype class method)": [[42, "pandas.SparseDtype.construct_from_string"]], "construct_from_string() (pandas.stringdtype class method)": [[42, "pandas.StringDtype.construct_from_string"]], "contains() (pandas.intervalindex method)": [[42, "id86"], [42, "pandas.IntervalIndex.contains"]], "copy() (pandas.hdfstore method)": [[42, "pandas.HDFStore.copy"]], "copy() (pandas.index method)": [[42, "pandas.Index.copy"]], "copy() (pandas.multiindex method)": [[42, "pandas.MultiIndex.copy"]], "copy() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.copy"]], "corr() (pandas.dataframe method)": [[42, "pandas.DataFrame.corr"]], "corr() (pandas.series method)": [[42, "pandas.Series.corr"]], "corrwith() (pandas.dataframe method)": [[42, "pandas.DataFrame.corrwith"]], "count() (pandas.dataframe method)": [[42, "pandas.DataFrame.count"]], "count() (pandas.series method)": [[42, "pandas.Series.count"]], "cov() (pandas.dataframe method)": [[42, "pandas.DataFrame.cov"]], "cov() (pandas.series method)": [[42, "pandas.Series.cov"]], "create_table_index() (pandas.hdfstore method)": [[42, "pandas.HDFStore.create_table_index"]], "crosstab() (in module pandas)": [[42, "pandas.crosstab"]], "cummax() (pandas.dataframe method)": [[42, "pandas.DataFrame.cummax"]], "cummax() (pandas.series method)": [[42, "pandas.Series.cummax"]], "cummin() (pandas.dataframe method)": [[42, "pandas.DataFrame.cummin"]], "cummin() (pandas.series method)": [[42, "pandas.Series.cummin"]], "cumprod() (pandas.dataframe method)": [[42, "pandas.DataFrame.cumprod"]], "cumprod() (pandas.series method)": [[42, "pandas.Series.cumprod"]], "cumsum() (pandas.dataframe method)": [[42, "pandas.DataFrame.cumsum"]], "cumsum() (pandas.series method)": [[42, "pandas.Series.cumsum"]], "cut() (in module pandas)": [[42, "pandas.cut"]], "date (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.date"]], "date (pandas.datetimeindex property)": [[42, "id32"]], "date_format (pandas.excelwriter property)": [[42, "pandas.ExcelWriter.date_format"]], "date_range() (in module pandas)": [[42, "pandas.date_range"]], "datetime_format (pandas.excelwriter property)": [[42, "pandas.ExcelWriter.datetime_format"]], "day (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.day"]], "day (pandas.datetimeindex property)": [[42, "id33"]], "day (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.day"]], "day (pandas.periodindex property)": [[42, "id122"]], "day_name() (pandas.datetimeindex method)": [[42, "id34"], [42, "pandas.DatetimeIndex.day_name"]], "day_of_week (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.day_of_week"]], "day_of_week (pandas.datetimeindex property)": [[42, "id35"]], "day_of_week (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.day_of_week"]], "day_of_week (pandas.periodindex property)": [[42, "id123"]], "day_of_year (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.day_of_year"]], "day_of_year (pandas.datetimeindex property)": [[42, "id36"]], "day_of_year (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.day_of_year"]], "day_of_year (pandas.periodindex property)": [[42, "id124"]], "dayofweek (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.dayofweek"]], "dayofweek (pandas.datetimeindex property)": [[42, "id37"]], "dayofweek (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.dayofweek"]], "dayofweek (pandas.periodindex property)": [[42, "id125"]], "dayofyear (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.dayofyear"]], "dayofyear (pandas.datetimeindex property)": [[42, "id38"]], "dayofyear (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.dayofyear"]], "dayofyear (pandas.periodindex property)": [[42, "id126"]], "days (pandas.timedeltaindex attribute)": [[42, "pandas.TimedeltaIndex.days"]], "days (pandas.timedeltaindex property)": [[42, "id175"]], "days_in_month (pandas.datetimeindex property)": [[42, "pandas.DatetimeIndex.days_in_month"]], "days_in_month (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.days_in_month"]], "days_in_month (pandas.periodindex property)": [[42, "id127"]], "daysinmonth (pandas.datetimeindex property)": [[42, "pandas.DatetimeIndex.daysinmonth"]], "daysinmonth (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.daysinmonth"]], "daysinmonth (pandas.periodindex property)": [[42, "id128"]], "daysinmonth (pandas.timestamp attribute)": [[42, "pandas.Timestamp.daysinmonth"]], "delete() (pandas.index method)": [[42, "pandas.Index.delete"]], "delete() (pandas.multiindex method)": [[42, "pandas.MultiIndex.delete"]], "delete() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.delete"]], "describe() (pandas.categorical method)": [[42, "pandas.Categorical.describe"]], "diff() (pandas.dataframe method)": [[42, "pandas.DataFrame.diff"]], "diff() (pandas.series method)": [[42, "pandas.Series.diff"]], "difference() (pandas.index method)": [[42, "pandas.Index.difference"]], "div() (pandas.dataframe method)": [[42, "pandas.DataFrame.div"]], "div() (pandas.series method)": [[42, "pandas.Series.div"]], "divide() (pandas.dataframe method)": [[42, "pandas.DataFrame.divide"]], "divide() (pandas.series method)": [[42, "pandas.Series.divide"]], "divmod() (pandas.series method)": [[42, "pandas.Series.divmod"]], "dot() (pandas.dataframe method)": [[42, "pandas.DataFrame.dot"]], "dot() (pandas.series method)": [[42, "pandas.Series.dot"]], "drop() (pandas.dataframe method)": [[42, "pandas.DataFrame.drop"]], "drop() (pandas.index method)": [[42, "pandas.Index.drop"]], "drop() (pandas.multiindex method)": [[42, "id107"], [42, "pandas.MultiIndex.drop"]], "drop() (pandas.series method)": [[42, "pandas.Series.drop"]], "drop_duplicates() (pandas.dataframe method)": [[42, "pandas.DataFrame.drop_duplicates"]], "drop_duplicates() (pandas.index method)": [[42, "pandas.Index.drop_duplicates"]], "drop_duplicates() (pandas.series method)": [[42, "pandas.Series.drop_duplicates"]], "droplevel() (pandas.index method)": [[42, "pandas.Index.droplevel"]], "droplevel() (pandas.multiindex method)": [[42, "pandas.MultiIndex.droplevel"]], "dropna (pandas.grouper attribute)": [[42, "pandas.Grouper.dropna"]], "dropna() (pandas.dataframe method)": [[42, "pandas.DataFrame.dropna"]], "dropna() (pandas.index method)": [[42, "pandas.Index.dropna"]], "dropna() (pandas.multiindex method)": [[42, "pandas.MultiIndex.dropna"]], "dropna() (pandas.series method)": [[42, "pandas.Series.dropna"]], "dt (pandas.series attribute)": [[42, "pandas.Series.dt"]], "dtype (pandas.categorical attribute)": [[42, "pandas.Categorical.dtype"]], "dtype (pandas.categorical property)": [[42, "id1"]], "dtype (pandas.datetimeindex property)": [[42, "pandas.DatetimeIndex.dtype"]], "dtype (pandas.index attribute)": [[42, "pandas.Index.dtype"]], "dtype (pandas.multiindex attribute)": [[42, "pandas.MultiIndex.dtype"]], "dtype (pandas.rangeindex property)": [[42, "pandas.RangeIndex.dtype"]], "dtype (pandas.series property)": [[42, "pandas.Series.dtype"]], "dtypes (pandas.multiindex attribute)": [[42, "id95"], [42, "pandas.MultiIndex.dtypes"]], "dtypes (pandas.series property)": [[42, "pandas.Series.dtypes"]], "duplicated() (pandas.dataframe method)": [[42, "pandas.DataFrame.duplicated"]], "duplicated() (pandas.index method)": [[42, "pandas.Index.duplicated"]], "duplicated() (pandas.multiindex method)": [[42, "pandas.MultiIndex.duplicated"]], "duplicated() (pandas.series method)": [[42, "pandas.Series.duplicated"]], "empty_value (pandas.excelfile.odfreader property)": [[42, "pandas.ExcelFile.ODFReader.empty_value"]], "end_time (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.end_time"]], "end_time (pandas.periodindex property)": [[42, "id129"]], "engine (pandas.excelwriter property)": [[42, "pandas.ExcelWriter.engine"]], "eq() (pandas.dataframe method)": [[42, "pandas.DataFrame.eq"]], "eq() (pandas.series method)": [[42, "pandas.Series.eq"]], "equal_levels() (pandas.multiindex method)": [[42, "pandas.MultiIndex.equal_levels"]], "equals() (pandas.categorical method)": [[42, "pandas.Categorical.equals"]], "equals() (pandas.categoricalindex method)": [[42, "pandas.CategoricalIndex.equals"]], "equals() (pandas.index method)": [[42, "pandas.Index.equals"]], "equals() (pandas.multiindex method)": [[42, "pandas.MultiIndex.equals"]], "equals() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.equals"]], "eval() (in module pandas)": [[42, "pandas.eval"]], "eval() (pandas.dataframe method)": [[42, "pandas.DataFrame.eval"]], "explode() (pandas.dataframe method)": [[42, "pandas.DataFrame.explode"]], "explode() (pandas.series method)": [[42, "pandas.Series.explode"]], "factorize() (in module pandas)": [[42, "pandas.factorize"]], "factorize() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.factorize"]], "ffill() (pandas.dataframe method)": [[42, "pandas.DataFrame.ffill"]], "ffill() (pandas.series method)": [[42, "pandas.Series.ffill"]], "filename (pandas.hdfstore property)": [[42, "pandas.HDFStore.filename"]], "fill_value (pandas.sparsedtype property)": [[42, "pandas.SparseDtype.fill_value"]], "fillna() (pandas.dataframe method)": [[42, "pandas.DataFrame.fillna"]], "fillna() (pandas.index method)": [[42, "pandas.Index.fillna"]], "fillna() (pandas.multiindex method)": [[42, "pandas.MultiIndex.fillna"]], "fillna() (pandas.series method)": [[42, "pandas.Series.fillna"]], "floor() (pandas.datetimeindex method)": [[42, "id39"], [42, "pandas.DatetimeIndex.floor"]], "floor() (pandas.timedelta method)": [[42, "pandas.Timedelta.floor"]], "floor() (pandas.timedeltaindex method)": [[42, "id176"], [42, "pandas.TimedeltaIndex.floor"]], "floor() (pandas.timestamp method)": [[42, "pandas.Timestamp.floor"]], "floordiv() (pandas.dataframe method)": [[42, "pandas.DataFrame.floordiv"]], "floordiv() (pandas.series method)": [[42, "pandas.Series.floordiv"]], "flush() (pandas.hdfstore method)": [[42, "pandas.HDFStore.flush"]], "format() (pandas.index method)": [[42, "pandas.Index.format"]], "format() (pandas.multiindex method)": [[42, "pandas.MultiIndex.format"]], "freq (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.freq"]], "freq (pandas.perioddtype attribute)": [[42, "pandas.PeriodDtype.freq"]], "freq (pandas.perioddtype property)": [[42, "id116"]], "freq (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.freq"]], "freqstr (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.freqstr"]], "freqstr (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.freqstr"]], "from_arrays() (pandas.intervalindex class method)": [[42, "id79"]], "from_arrays() (pandas.intervalindex method)": [[42, "pandas.IntervalIndex.from_arrays"]], "from_arrays() (pandas.multiindex class method)": [[42, "id91"]], "from_arrays() (pandas.multiindex method)": [[42, "pandas.MultiIndex.from_arrays"]], "from_breaks() (pandas.intervalindex class method)": [[42, "id78"]], "from_breaks() (pandas.intervalindex method)": [[42, "pandas.IntervalIndex.from_breaks"]], "from_codes() (pandas.categorical class method)": [[42, "id2"]], "from_codes() (pandas.categorical method)": [[42, "pandas.Categorical.from_codes"]], "from_dict() (pandas.dataframe class method)": [[42, "pandas.DataFrame.from_dict"]], "from_dummies() (in module pandas)": [[42, "pandas.from_dummies"]], "from_frame() (pandas.multiindex class method)": [[42, "id94"]], "from_frame() (pandas.multiindex method)": [[42, "pandas.MultiIndex.from_frame"]], "from_product() (pandas.multiindex class method)": [[42, "id93"]], "from_product() (pandas.multiindex method)": [[42, "pandas.MultiIndex.from_product"]], "from_range() (pandas.rangeindex class method)": [[42, "id140"]], "from_range() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.from_range"]], "from_records() (pandas.dataframe class method)": [[42, "pandas.DataFrame.from_records"]], "from_tuples() (pandas.intervalindex class method)": [[42, "id80"]], "from_tuples() (pandas.intervalindex method)": [[42, "pandas.IntervalIndex.from_tuples"]], "from_tuples() (pandas.multiindex class method)": [[42, "id92"]], "from_tuples() (pandas.multiindex method)": [[42, "pandas.MultiIndex.from_tuples"]], "fromordinal() (pandas.timestamp class method)": [[42, "pandas.Timestamp.fromordinal"]], "fromtimestamp() (pandas.timestamp class method)": [[42, "pandas.Timestamp.fromtimestamp"]], "ge() (pandas.dataframe method)": [[42, "pandas.DataFrame.ge"]], "ge() (pandas.series method)": [[42, "pandas.Series.ge"]], "get() (pandas.hdfstore method)": [[42, "pandas.HDFStore.get"]], "get_dummies() (in module pandas)": [[42, "pandas.get_dummies"]], "get_indexer() (pandas.index method)": [[42, "pandas.Index.get_indexer"]], "get_indexer() (pandas.multiindex method)": [[42, "pandas.MultiIndex.get_indexer"]], "get_indexer_for() (pandas.index method)": [[42, "pandas.Index.get_indexer_for"]], "get_indexer_non_unique() (pandas.index method)": [[42, "pandas.Index.get_indexer_non_unique"]], "get_indexer_non_unique() (pandas.intervalindex method)": [[42, "pandas.IntervalIndex.get_indexer_non_unique"]], "get_level_values() (pandas.index method)": [[42, "pandas.Index.get_level_values"]], "get_level_values() (pandas.multiindex method)": [[42, "id103"], [42, "pandas.MultiIndex.get_level_values"]], "get_loc() (pandas.datetimeindex method)": [[42, "pandas.DatetimeIndex.get_loc"]], "get_loc() (pandas.index method)": [[42, "pandas.Index.get_loc"]], "get_loc() (pandas.intervalindex method)": [[42, "pandas.IntervalIndex.get_loc"]], "get_loc() (pandas.multiindex method)": [[42, "id113"], [42, "pandas.MultiIndex.get_loc"]], "get_loc() (pandas.periodindex method)": [[42, "pandas.PeriodIndex.get_loc"]], "get_loc() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.get_loc"]], "get_loc() (pandas.timedeltaindex method)": [[42, "pandas.TimedeltaIndex.get_loc"]], "get_loc_level() (pandas.multiindex method)": [[42, "id114"], [42, "pandas.MultiIndex.get_loc_level"]], "get_locs() (pandas.multiindex method)": [[42, "id115"], [42, "pandas.MultiIndex.get_locs"]], "get_node() (pandas.hdfstore method)": [[42, "pandas.HDFStore.get_node"]], "get_sheet_by_index() (pandas.excelfile.odfreader method)": [[42, "pandas.ExcelFile.ODFReader.get_sheet_by_index"]], "get_sheet_by_index() (pandas.excelfile.openpyxlreader method)": [[42, "pandas.ExcelFile.OpenpyxlReader.get_sheet_by_index"]], "get_sheet_by_index() (pandas.excelfile.pyxlsbreader method)": [[42, "pandas.ExcelFile.PyxlsbReader.get_sheet_by_index"]], "get_sheet_by_index() (pandas.excelfile.xlrdreader method)": [[42, "pandas.ExcelFile.XlrdReader.get_sheet_by_index"]], "get_sheet_by_name() (pandas.excelfile.odfreader method)": [[42, "pandas.ExcelFile.ODFReader.get_sheet_by_name"]], "get_sheet_by_name() (pandas.excelfile.openpyxlreader method)": [[42, "pandas.ExcelFile.OpenpyxlReader.get_sheet_by_name"]], "get_sheet_by_name() (pandas.excelfile.pyxlsbreader method)": [[42, "pandas.ExcelFile.PyxlsbReader.get_sheet_by_name"]], "get_sheet_by_name() (pandas.excelfile.xlrdreader method)": [[42, "pandas.ExcelFile.XlrdReader.get_sheet_by_name"]], "get_sheet_data() (pandas.excelfile.odfreader method)": [[42, "pandas.ExcelFile.ODFReader.get_sheet_data"]], "get_sheet_data() (pandas.excelfile.openpyxlreader method)": [[42, "pandas.ExcelFile.OpenpyxlReader.get_sheet_data"]], "get_sheet_data() (pandas.excelfile.pyxlsbreader method)": [[42, "pandas.ExcelFile.PyxlsbReader.get_sheet_data"]], "get_sheet_data() (pandas.excelfile.xlrdreader method)": [[42, "pandas.ExcelFile.XlrdReader.get_sheet_data"]], "get_slice_bound() (pandas.index method)": [[42, "pandas.Index.get_slice_bound"]], "get_slice_bound() (pandas.multiindex method)": [[42, "pandas.MultiIndex.get_slice_bound"]], "get_storer() (pandas.hdfstore method)": [[42, "pandas.HDFStore.get_storer"]], "groupby() (pandas.dataframe method)": [[42, "pandas.DataFrame.groupby"]], "groupby() (pandas.index method)": [[42, "pandas.Index.groupby"]], "groupby() (pandas.series method)": [[42, "pandas.Series.groupby"]], "grouper (pandas.grouper property)": [[42, "pandas.Grouper.grouper"]], "groups (pandas.grouper property)": [[42, "pandas.Grouper.groups"]], "groups() (pandas.hdfstore method)": [[42, "pandas.HDFStore.groups"]], "gt() (pandas.dataframe method)": [[42, "pandas.DataFrame.gt"]], "gt() (pandas.series method)": [[42, "pandas.Series.gt"]], "has_duplicates (pandas.index property)": [[42, "pandas.Index.has_duplicates"]], "hasnans (pandas.index attribute)": [[42, "pandas.Index.hasnans"]], "hasnans (pandas.series property)": [[42, "pandas.Series.hasnans"]], "hist() (pandas.dataframe method)": [[42, "pandas.DataFrame.hist"]], "hist() (pandas.series method)": [[42, "pandas.Series.hist"]], "holds_integer() (pandas.index method)": [[42, "pandas.Index.holds_integer"]], "hour (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.hour"]], "hour (pandas.datetimeindex property)": [[42, "id40"]], "hour (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.hour"]], "hour (pandas.periodindex property)": [[42, "id119"]], "identical() (pandas.index method)": [[42, "pandas.Index.identical"]], "idxmax() (pandas.dataframe method)": [[42, "pandas.DataFrame.idxmax"]], "idxmax() (pandas.series method)": [[42, "pandas.Series.idxmax"]], "idxmin() (pandas.dataframe method)": [[42, "pandas.DataFrame.idxmin"]], "idxmin() (pandas.series method)": [[42, "pandas.Series.idxmin"]], "if_sheet_exists (pandas.excelwriter property)": [[42, "pandas.ExcelWriter.if_sheet_exists"]], "index (pandas.dataframe attribute)": [[42, "pandas.DataFrame.index"]], "index (pandas.series attribute)": [[42, "pandas.Series.index"]], "indexer (pandas.grouper property)": [[42, "pandas.Grouper.indexer"]], "indexer_at_time() (pandas.datetimeindex method)": [[42, "pandas.DatetimeIndex.indexer_at_time"]], "indexer_between_time() (pandas.datetimeindex method)": [[42, "pandas.DatetimeIndex.indexer_between_time"]], "infer_freq() (in module pandas)": [[42, "pandas.infer_freq"]], "infer_objects() (pandas.index method)": [[42, "pandas.Index.infer_objects"]], "inferred_freq (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.inferred_freq"]], "inferred_freq (pandas.timedeltaindex attribute)": [[42, "pandas.TimedeltaIndex.inferred_freq"]], "inferred_type (pandas.categoricalindex property)": [[42, "pandas.CategoricalIndex.inferred_type"]], "inferred_type (pandas.datetimeindex property)": [[42, "pandas.DatetimeIndex.inferred_type"]], "inferred_type (pandas.index attribute)": [[42, "pandas.Index.inferred_type"]], "inferred_type (pandas.intervalindex property)": [[42, "pandas.IntervalIndex.inferred_type"]], "inferred_type (pandas.multiindex attribute)": [[42, "pandas.MultiIndex.inferred_type"]], "inferred_type (pandas.periodindex property)": [[42, "pandas.PeriodIndex.inferred_type"]], "inferred_type (pandas.rangeindex property)": [[42, "pandas.RangeIndex.inferred_type"]], "inferred_type (pandas.timedeltaindex property)": [[42, "pandas.TimedeltaIndex.inferred_type"]], "info() (pandas.dataframe method)": [[42, "pandas.DataFrame.info"]], "info() (pandas.hdfstore method)": [[42, "pandas.HDFStore.info"]], "info() (pandas.series method)": [[42, "pandas.Series.info"]], "insert() (pandas.dataframe method)": [[42, "pandas.DataFrame.insert"]], "insert() (pandas.index method)": [[42, "pandas.Index.insert"]], "insert() (pandas.multiindex method)": [[42, "pandas.MultiIndex.insert"]], "insert() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.insert"]], "interpolate() (pandas.dataframe method)": [[42, "pandas.DataFrame.interpolate"]], "interpolate() (pandas.series method)": [[42, "pandas.Series.interpolate"]], "intersection() (pandas.index method)": [[42, "pandas.Index.intersection"]], "interval_range() (in module pandas)": [[42, "pandas.interval_range"]], "is_() (pandas.index method)": [[42, "pandas.Index.is_"]], "is_boolean() (pandas.index method)": [[42, "pandas.Index.is_boolean"]], "is_categorical() (pandas.index method)": [[42, "pandas.Index.is_categorical"]], "is_dtype() (pandas.intervaldtype class method)": [[42, "pandas.IntervalDtype.is_dtype"]], "is_dtype() (pandas.perioddtype class method)": [[42, "pandas.PeriodDtype.is_dtype"]], "is_dtype() (pandas.sparsedtype class method)": [[42, "pandas.SparseDtype.is_dtype"]], "is_empty (pandas.intervalindex attribute)": [[42, "pandas.IntervalIndex.is_empty"]], "is_empty (pandas.intervalindex property)": [[42, "id87"]], "is_floating() (pandas.index method)": [[42, "pandas.Index.is_floating"]], "is_full (pandas.periodindex property)": [[42, "pandas.PeriodIndex.is_full"]], "is_integer() (pandas.index method)": [[42, "pandas.Index.is_integer"]], "is_interval() (pandas.index method)": [[42, "pandas.Index.is_interval"]], "is_leap_year (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.is_leap_year"]], "is_leap_year (pandas.datetimeindex property)": [[42, "id41"]], "is_leap_year (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.is_leap_year"]], "is_leap_year (pandas.periodindex property)": [[42, "id130"]], "is_monotonic_decreasing (pandas.index property)": [[42, "pandas.Index.is_monotonic_decreasing"]], "is_monotonic_decreasing (pandas.intervalindex attribute)": [[42, "pandas.IntervalIndex.is_monotonic_decreasing"]], "is_monotonic_decreasing (pandas.multiindex attribute)": [[42, "pandas.MultiIndex.is_monotonic_decreasing"]], "is_monotonic_decreasing (pandas.rangeindex attribute)": [[42, "pandas.RangeIndex.is_monotonic_decreasing"]], "is_monotonic_increasing (pandas.index property)": [[42, "pandas.Index.is_monotonic_increasing"]], "is_monotonic_increasing (pandas.multiindex attribute)": [[42, "pandas.MultiIndex.is_monotonic_increasing"]], "is_monotonic_increasing (pandas.rangeindex attribute)": [[42, "pandas.RangeIndex.is_monotonic_increasing"]], "is_month_end (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.is_month_end"]], "is_month_end (pandas.datetimeindex property)": [[42, "id42"]], "is_month_start (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.is_month_start"]], "is_month_start (pandas.datetimeindex property)": [[42, "id43"]], "is_non_overlapping_monotonic (pandas.intervalindex attribute)": [[42, "id77"], [42, "pandas.IntervalIndex.is_non_overlapping_monotonic"]], "is_normalized (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.is_normalized"]], "is_numeric() (pandas.index method)": [[42, "pandas.Index.is_numeric"]], "is_object() (pandas.index method)": [[42, "pandas.Index.is_object"]], "is_open (pandas.hdfstore property)": [[42, "pandas.HDFStore.is_open"]], "is_overlapping (pandas.intervalindex attribute)": [[42, "pandas.IntervalIndex.is_overlapping"]], "is_overlapping (pandas.intervalindex property)": [[42, "id81"]], "is_quarter_end (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.is_quarter_end"]], "is_quarter_end (pandas.datetimeindex property)": [[42, "id44"]], "is_quarter_start (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.is_quarter_start"]], "is_quarter_start (pandas.datetimeindex property)": [[42, "id45"]], "is_unique (pandas.index attribute)": [[42, "pandas.Index.is_unique"]], "is_unique (pandas.intervalindex attribute)": [[42, "pandas.IntervalIndex.is_unique"]], "is_unique (pandas.rangeindex property)": [[42, "pandas.RangeIndex.is_unique"]], "is_year_end (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.is_year_end"]], "is_year_end (pandas.datetimeindex property)": [[42, "id46"]], "is_year_start (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.is_year_start"]], "is_year_start (pandas.datetimeindex property)": [[42, "id47"]], "isetitem() (pandas.dataframe method)": [[42, "pandas.DataFrame.isetitem"]], "isin() (pandas.categorical method)": [[42, "pandas.Categorical.isin"]], "isin() (pandas.dataframe method)": [[42, "pandas.DataFrame.isin"]], "isin() (pandas.index method)": [[42, "pandas.Index.isin"]], "isin() (pandas.multiindex method)": [[42, "pandas.MultiIndex.isin"]], "isin() (pandas.series method)": [[42, "pandas.Series.isin"]], "isna() (in module pandas)": [[42, "pandas.isna"]], "isna() (pandas.categorical method)": [[42, "pandas.Categorical.isna"]], "isna() (pandas.dataframe method)": [[42, "pandas.DataFrame.isna"]], "isna() (pandas.index method)": [[42, "pandas.Index.isna"]], "isna() (pandas.series method)": [[42, "pandas.Series.isna"]], "isnull() (in module pandas)": [[42, "pandas.isnull"]], "isnull() (pandas.categorical method)": [[42, "pandas.Categorical.isnull"]], "isnull() (pandas.dataframe method)": [[42, "pandas.DataFrame.isnull"]], "isnull() (pandas.index method)": [[42, "pandas.Index.isnull"]], "isnull() (pandas.series method)": [[42, "pandas.Series.isnull"]], "isocalendar() (pandas.datetimeindex method)": [[42, "pandas.DatetimeIndex.isocalendar"]], "isoweekday() (pandas.timestamp method)": [[42, "pandas.Timestamp.isoweekday"]], "items() (pandas.dataframe method)": [[42, "pandas.DataFrame.items"]], "items() (pandas.hdfstore method)": [[42, "pandas.HDFStore.items"]], "items() (pandas.series method)": [[42, "pandas.Series.items"]], "itemsize (pandas.arrowdtype attribute)": [[42, "pandas.ArrowDtype.itemsize"]], "iterrows() (pandas.dataframe method)": [[42, "pandas.DataFrame.iterrows"]], "itertuples() (pandas.dataframe method)": [[42, "pandas.DataFrame.itertuples"]], "join() (pandas.dataframe method)": [[42, "pandas.DataFrame.join"]], "json_normalize() (in module pandas)": [[42, "pandas.json_normalize"]], "keys() (pandas.hdfstore method)": [[42, "pandas.HDFStore.keys"]], "keys() (pandas.series method)": [[42, "pandas.Series.keys"]], "kind (pandas.arrowdtype attribute)": [[42, "pandas.ArrowDtype.kind"]], "kind (pandas.booleandtype property)": [[42, "pandas.BooleanDtype.kind"]], "kind (pandas.categoricaldtype attribute)": [[42, "pandas.CategoricalDtype.kind"]], "kind (pandas.datetimetzdtype attribute)": [[42, "pandas.DatetimeTZDtype.kind"]], "kind (pandas.intervaldtype attribute)": [[42, "pandas.IntervalDtype.kind"]], "kind (pandas.perioddtype attribute)": [[42, "pandas.PeriodDtype.kind"]], "kind (pandas.sparsedtype property)": [[42, "pandas.SparseDtype.kind"]], "kurt() (pandas.dataframe method)": [[42, "pandas.DataFrame.kurt"]], "kurt() (pandas.series method)": [[42, "pandas.Series.kurt"]], "kurtosis() (pandas.dataframe method)": [[42, "pandas.DataFrame.kurtosis"]], "kurtosis() (pandas.series method)": [[42, "pandas.Series.kurtosis"]], "le() (pandas.dataframe method)": [[42, "pandas.DataFrame.le"]], "le() (pandas.series method)": [[42, "pandas.Series.le"]], "left (pandas.interval attribute)": [[42, "pandas.Interval.left"]], "left (pandas.intervalindex attribute)": [[42, "id82"], [42, "pandas.IntervalIndex.left"]], "length (pandas.intervalindex attribute)": [[42, "pandas.IntervalIndex.length"]], "length (pandas.intervalindex property)": [[42, "id85"]], "levels (pandas.multiindex attribute)": [[42, "id96"], [42, "pandas.MultiIndex.levels"]], "levshape (pandas.multiindex attribute)": [[42, "pandas.MultiIndex.levshape"]], "levshape (pandas.multiindex property)": [[42, "id99"]], "load_workbook() (pandas.excelfile.odfreader method)": [[42, "pandas.ExcelFile.ODFReader.load_workbook"]], "load_workbook() (pandas.excelfile.openpyxlreader method)": [[42, "pandas.ExcelFile.OpenpyxlReader.load_workbook"]], "load_workbook() (pandas.excelfile.pyxlsbreader method)": [[42, "pandas.ExcelFile.PyxlsbReader.load_workbook"]], "load_workbook() (pandas.excelfile.xlrdreader method)": [[42, "pandas.ExcelFile.XlrdReader.load_workbook"]], "lreshape() (in module pandas)": [[42, "pandas.lreshape"]], "lt() (pandas.dataframe method)": [[42, "pandas.DataFrame.lt"]], "lt() (pandas.series method)": [[42, "pandas.Series.lt"]], "map() (pandas.categorical method)": [[42, "pandas.Categorical.map"]], "map() (pandas.categoricalindex method)": [[42, "id11"], [42, "pandas.CategoricalIndex.map"]], "map() (pandas.index method)": [[42, "pandas.Index.map"]], "map() (pandas.series method)": [[42, "pandas.Series.map"]], "mask() (pandas.dataframe method)": [[42, "pandas.DataFrame.mask"]], "mask() (pandas.series method)": [[42, "pandas.Series.mask"]], "max() (pandas.categorical method)": [[42, "pandas.Categorical.max"]], "max() (pandas.categoricalindex method)": [[42, "pandas.CategoricalIndex.max"]], "max() (pandas.dataframe method)": [[42, "pandas.DataFrame.max"]], "max() (pandas.index method)": [[42, "pandas.Index.max"]], "max() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.max"]], "max() (pandas.series method)": [[42, "pandas.Series.max"]], "mean() (pandas.dataframe method)": [[42, "pandas.DataFrame.mean"]], "mean() (pandas.datetimeindex method)": [[42, "pandas.DatetimeIndex.mean"]], "mean() (pandas.series method)": [[42, "pandas.Series.mean"]], "mean() (pandas.timedeltaindex method)": [[42, "pandas.TimedeltaIndex.mean"]], "median() (pandas.dataframe method)": [[42, "pandas.DataFrame.median"]], "median() (pandas.series method)": [[42, "pandas.Series.median"]], "median() (pandas.timedeltaindex method)": [[42, "pandas.TimedeltaIndex.median"]], "melt() (in module pandas)": [[42, "pandas.melt"]], "melt() (pandas.dataframe method)": [[42, "pandas.DataFrame.melt"]], "memory_usage() (pandas.categorical method)": [[42, "pandas.Categorical.memory_usage"]], "memory_usage() (pandas.dataframe method)": [[42, "pandas.DataFrame.memory_usage"]], "memory_usage() (pandas.index method)": [[42, "pandas.Index.memory_usage"]], "memory_usage() (pandas.intervalindex method)": [[42, "pandas.IntervalIndex.memory_usage"]], "memory_usage() (pandas.multiindex method)": [[42, "pandas.MultiIndex.memory_usage"]], "memory_usage() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.memory_usage"]], "memory_usage() (pandas.series method)": [[42, "pandas.Series.memory_usage"]], "merge() (in module pandas)": [[42, "pandas.merge"]], "merge() (pandas.dataframe method)": [[42, "pandas.DataFrame.merge"]], "merge_asof() (in module pandas)": [[42, "pandas.merge_asof"]], "merge_ordered() (in module pandas)": [[42, "pandas.merge_ordered"]], "microsecond (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.microsecond"]], "microsecond (pandas.datetimeindex property)": [[42, "id48"]], "microseconds (pandas.timedeltaindex attribute)": [[42, "pandas.TimedeltaIndex.microseconds"]], "microseconds (pandas.timedeltaindex property)": [[42, "id177"]], "mid (pandas.intervalindex attribute)": [[42, "id84"], [42, "pandas.IntervalIndex.mid"]], "min() (pandas.categorical method)": [[42, "pandas.Categorical.min"]], "min() (pandas.categoricalindex method)": [[42, "pandas.CategoricalIndex.min"]], "min() (pandas.dataframe method)": [[42, "pandas.DataFrame.min"]], "min() (pandas.index method)": [[42, "pandas.Index.min"]], "min() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.min"]], "min() (pandas.series method)": [[42, "pandas.Series.min"]], "minute (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.minute"]], "minute (pandas.datetimeindex property)": [[42, "id49"]], "minute (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.minute"]], "minute (pandas.periodindex property)": [[42, "id120"]], "mod() (pandas.dataframe method)": [[42, "pandas.DataFrame.mod"]], "mod() (pandas.series method)": [[42, "pandas.Series.mod"]], "mode() (pandas.dataframe method)": [[42, "pandas.DataFrame.mode"]], "mode() (pandas.series method)": [[42, "pandas.Series.mode"]], "month (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.month"]], "month (pandas.datetimeindex property)": [[42, "id50"]], "month (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.month"]], "month (pandas.periodindex property)": [[42, "id131"]], "month_name() (pandas.datetimeindex method)": [[42, "id51"], [42, "pandas.DatetimeIndex.month_name"]], "mul() (pandas.dataframe method)": [[42, "pandas.DataFrame.mul"]], "mul() (pandas.series method)": [[42, "pandas.Series.mul"]], "multiply() (pandas.dataframe method)": [[42, "pandas.DataFrame.multiply"]], "multiply() (pandas.series method)": [[42, "pandas.Series.multiply"]], "na_value (pandas.datetimetzdtype property)": [[42, "pandas.DatetimeTZDtype.na_value"]], "na_value (pandas.perioddtype property)": [[42, "pandas.PeriodDtype.na_value"]], "na_value (pandas.stringdtype property)": [[42, "pandas.StringDtype.na_value"]], "name (pandas.arrowdtype property)": [[42, "pandas.ArrowDtype.name"]], "name (pandas.booleandtype attribute)": [[42, "pandas.BooleanDtype.name"]], "name (pandas.categoricaldtype attribute)": [[42, "pandas.CategoricalDtype.name"]], "name (pandas.datetimetzdtype property)": [[42, "pandas.DatetimeTZDtype.name"]], "name (pandas.float32dtype attribute)": [[42, "pandas.Float32Dtype.name"]], "name (pandas.float64dtype attribute)": [[42, "pandas.Float64Dtype.name"]], "name (pandas.index property)": [[42, "pandas.Index.name"]], "name (pandas.int16dtype attribute)": [[42, "pandas.Int16Dtype.name"]], "name (pandas.int32dtype attribute)": [[42, "pandas.Int32Dtype.name"]], "name (pandas.int64dtype attribute)": [[42, "pandas.Int64Dtype.name"]], "name (pandas.int8dtype attribute)": [[42, "pandas.Int8Dtype.name"]], "name (pandas.intervaldtype attribute)": [[42, "pandas.IntervalDtype.name"]], "name (pandas.perioddtype property)": [[42, "pandas.PeriodDtype.name"]], "name (pandas.series property)": [[42, "pandas.Series.name"]], "name (pandas.sparsedtype property)": [[42, "pandas.SparseDtype.name"]], "name (pandas.stringdtype attribute)": [[42, "pandas.StringDtype.name"]], "name (pandas.uint16dtype attribute)": [[42, "pandas.UInt16Dtype.name"]], "name (pandas.uint32dtype attribute)": [[42, "pandas.UInt32Dtype.name"]], "name (pandas.uint64dtype attribute)": [[42, "pandas.UInt64Dtype.name"]], "name (pandas.uint8dtype attribute)": [[42, "pandas.UInt8Dtype.name"]], "names (pandas.index property)": [[42, "pandas.Index.names"]], "names (pandas.multiindex attribute)": [[42, "pandas.MultiIndex.names"]], "names (pandas.multiindex property)": [[42, "id102"]], "nanosecond (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.nanosecond"]], "nanosecond (pandas.datetimeindex property)": [[42, "id52"]], "nanoseconds (pandas.timedeltaindex attribute)": [[42, "pandas.TimedeltaIndex.nanoseconds"]], "nanoseconds (pandas.timedeltaindex property)": [[42, "id178"]], "nbytes (pandas.categorical property)": [[42, "pandas.Categorical.nbytes"]], "nbytes (pandas.multiindex attribute)": [[42, "pandas.MultiIndex.nbytes"]], "nbytes (pandas.rangeindex attribute)": [[42, "pandas.RangeIndex.nbytes"]], "ne() (pandas.dataframe method)": [[42, "pandas.DataFrame.ne"]], "ne() (pandas.series method)": [[42, "pandas.Series.ne"]], "nlargest() (pandas.dataframe method)": [[42, "pandas.DataFrame.nlargest"]], "nlargest() (pandas.series method)": [[42, "pandas.Series.nlargest"]], "nlevels (pandas.index property)": [[42, "pandas.Index.nlevels"]], "nlevels (pandas.multiindex attribute)": [[42, "pandas.MultiIndex.nlevels"]], "nlevels (pandas.multiindex property)": [[42, "id98"]], "normalize() (pandas.datetimeindex method)": [[42, "id53"], [42, "pandas.DatetimeIndex.normalize"]], "notna() (in module pandas)": [[42, "pandas.notna"]], "notna() (pandas.categorical method)": [[42, "pandas.Categorical.notna"]], "notna() (pandas.dataframe method)": [[42, "pandas.DataFrame.notna"]], "notna() (pandas.index method)": [[42, "pandas.Index.notna"]], "notna() (pandas.series method)": [[42, "pandas.Series.notna"]], "notnull() (in module pandas)": [[42, "pandas.notnull"]], "notnull() (pandas.categorical method)": [[42, "pandas.Categorical.notnull"]], "notnull() (pandas.dataframe method)": [[42, "pandas.DataFrame.notnull"]], "notnull() (pandas.index method)": [[42, "pandas.Index.notnull"]], "notnull() (pandas.series method)": [[42, "pandas.Series.notnull"]], "now() (pandas.timestamp class method)": [[42, "pandas.Timestamp.now"]], "nsmallest() (pandas.dataframe method)": [[42, "pandas.DataFrame.nsmallest"]], "nsmallest() (pandas.series method)": [[42, "pandas.Series.nsmallest"]], "num (pandas.datetimetzdtype attribute)": [[42, "pandas.DatetimeTZDtype.num"]], "num (pandas.intervaldtype attribute)": [[42, "pandas.IntervalDtype.num"]], "num (pandas.perioddtype attribute)": [[42, "pandas.PeriodDtype.num"]], "numpy_dtype (pandas.arrowdtype attribute)": [[42, "pandas.ArrowDtype.numpy_dtype"]], "numpy_dtype (pandas.booleandtype property)": [[42, "pandas.BooleanDtype.numpy_dtype"]], "nunique() (pandas.dataframe method)": [[42, "pandas.DataFrame.nunique"]], "obj (pandas.grouper property)": [[42, "pandas.Grouper.obj"]], "open() (pandas.hdfstore method)": [[42, "pandas.HDFStore.open"]], "open_left (pandas.intervalindex property)": [[42, "pandas.IntervalIndex.open_left"]], "open_right (pandas.intervalindex property)": [[42, "pandas.IntervalIndex.open_right"]], "option_context (class in pandas)": [[42, "pandas.option_context"]], "ordered (pandas.categorical attribute)": [[42, "pandas.Categorical.ordered"]], "ordered (pandas.categorical property)": [[42, "id4"]], "ordered (pandas.categoricaldtype attribute)": [[42, "pandas.CategoricalDtype.ordered"]], "ordered (pandas.categoricaldtype property)": [[42, "id7"]], "ordered (pandas.categoricalindex attribute)": [[42, "pandas.CategoricalIndex.ordered"]], "ordered (pandas.categoricalindex property)": [[42, "id10"]], "overlaps() (pandas.interval method)": [[42, "pandas.Interval.overlaps"]], "overlaps() (pandas.intervalindex method)": [[42, "id88"], [42, "pandas.IntervalIndex.overlaps"]], "pandas": [[42, "module-pandas"]], "parse() (pandas.excelfile method)": [[42, "pandas.ExcelFile.parse"]], "period_range() (in module pandas)": [[42, "pandas.period_range"]], "pivot() (in module pandas)": [[42, "pandas.pivot"]], "pivot() (pandas.dataframe method)": [[42, "pandas.DataFrame.pivot"]], "pivot_table() (in module pandas)": [[42, "pandas.pivot_table"]], "pivot_table() (pandas.dataframe method)": [[42, "pandas.DataFrame.pivot_table"]], "plot (pandas.dataframe attribute)": [[42, "pandas.DataFrame.plot"]], "plot (pandas.series attribute)": [[42, "pandas.Series.plot"]], "pop() (pandas.dataframe method)": [[42, "pandas.DataFrame.pop"]], "pop() (pandas.series method)": [[42, "pandas.Series.pop"]], "pow() (pandas.dataframe method)": [[42, "pandas.DataFrame.pow"]], "pow() (pandas.series method)": [[42, "pandas.Series.pow"]], "prod() (pandas.dataframe method)": [[42, "pandas.DataFrame.prod"]], "prod() (pandas.series method)": [[42, "pandas.Series.prod"]], "product() (pandas.dataframe method)": [[42, "pandas.DataFrame.product"]], "product() (pandas.series method)": [[42, "pandas.Series.product"]], "put() (pandas.hdfstore method)": [[42, "pandas.HDFStore.put"]], "putmask() (pandas.index method)": [[42, "pandas.Index.putmask"]], "putmask() (pandas.multiindex method)": [[42, "pandas.MultiIndex.putmask"]], "pyarrow_dtype (pandas.arrowdtype attribute)": [[42, "pandas.ArrowDtype.pyarrow_dtype"]], "qcut() (in module pandas)": [[42, "pandas.qcut"]], "quantile() (pandas.dataframe method)": [[42, "pandas.DataFrame.quantile"]], "quantile() (pandas.series method)": [[42, "pandas.Series.quantile"]], "quarter (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.quarter"]], "quarter (pandas.datetimeindex property)": [[42, "id54"]], "quarter (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.quarter"]], "quarter (pandas.periodindex property)": [[42, "id132"]], "query() (pandas.dataframe method)": [[42, "pandas.DataFrame.query"]], "qyear (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.qyear"]], "qyear (pandas.periodindex property)": [[42, "id133"]], "radd() (pandas.dataframe method)": [[42, "pandas.DataFrame.radd"]], "radd() (pandas.series method)": [[42, "pandas.Series.radd"]], "ravel() (pandas.index method)": [[42, "pandas.Index.ravel"]], "ravel() (pandas.series method)": [[42, "pandas.Series.ravel"]], "rdiv() (pandas.dataframe method)": [[42, "pandas.DataFrame.rdiv"]], "rdiv() (pandas.series method)": [[42, "pandas.Series.rdiv"]], "rdivmod() (pandas.series method)": [[42, "pandas.Series.rdivmod"]], "read_clipboard() (in module pandas)": [[42, "pandas.read_clipboard"]], "read_csv() (in module pandas)": [[42, "pandas.read_csv"]], "read_excel() (in module pandas)": [[42, "pandas.read_excel"]], "read_feather() (in module pandas)": [[42, "pandas.read_feather"]], "read_fwf() (in module pandas)": [[42, "pandas.read_fwf"]], "read_gbq() (in module pandas)": [[42, "pandas.read_gbq"]], "read_hdf() (in module pandas)": [[42, "pandas.read_hdf"]], "read_html() (in module pandas)": [[42, "pandas.read_html"]], "read_json() (in module pandas)": [[42, "pandas.read_json"]], "read_orc() (in module pandas)": [[42, "pandas.read_orc"]], "read_parquet() (in module pandas)": [[42, "pandas.read_parquet"]], "read_pickle() (in module pandas)": [[42, "pandas.read_pickle"]], "read_sas() (in module pandas)": [[42, "pandas.read_sas"]], "read_spss() (in module pandas)": [[42, "pandas.read_spss"]], "read_sql() (in module pandas)": [[42, "pandas.read_sql"]], "read_sql_query() (in module pandas)": [[42, "pandas.read_sql_query"]], "read_sql_table() (in module pandas)": [[42, "pandas.read_sql_table"]], "read_stata() (in module pandas)": [[42, "pandas.read_stata"]], "read_table() (in module pandas)": [[42, "pandas.read_table"]], "read_xml() (in module pandas)": [[42, "pandas.read_xml"]], "reindex() (pandas.categoricalindex method)": [[42, "pandas.CategoricalIndex.reindex"]], "reindex() (pandas.dataframe method)": [[42, "pandas.DataFrame.reindex"]], "reindex() (pandas.index method)": [[42, "pandas.Index.reindex"]], "reindex() (pandas.series method)": [[42, "pandas.Series.reindex"]], "remove() (pandas.hdfstore method)": [[42, "pandas.HDFStore.remove"]], "remove_categories() (pandas.categorical method)": [[42, "pandas.Categorical.remove_categories"]], "remove_categories() (pandas.categoricalindex method)": [[42, "id15"], [42, "pandas.CategoricalIndex.remove_categories"]], "remove_unused_categories() (pandas.categorical method)": [[42, "pandas.Categorical.remove_unused_categories"]], "remove_unused_categories() (pandas.categoricalindex method)": [[42, "id16"], [42, "pandas.CategoricalIndex.remove_unused_categories"]], "remove_unused_levels() (pandas.multiindex method)": [[42, "id106"], [42, "pandas.MultiIndex.remove_unused_levels"]], "rename() (pandas.dataframe method)": [[42, "pandas.DataFrame.rename"]], "rename() (pandas.index method)": [[42, "pandas.Index.rename"]], "rename() (pandas.multiindex method)": [[42, "pandas.MultiIndex.rename"]], "rename() (pandas.series method)": [[42, "pandas.Series.rename"]], "rename_axis() (pandas.series method)": [[42, "pandas.Series.rename_axis"]], "rename_categories() (pandas.categorical method)": [[42, "pandas.Categorical.rename_categories"]], "rename_categories() (pandas.categoricalindex method)": [[42, "id17"], [42, "pandas.CategoricalIndex.rename_categories"]], "reorder_categories() (pandas.categorical method)": [[42, "pandas.Categorical.reorder_categories"]], "reorder_categories() (pandas.categoricalindex method)": [[42, "id18"], [42, "pandas.CategoricalIndex.reorder_categories"]], "reorder_levels() (pandas.dataframe method)": [[42, "pandas.DataFrame.reorder_levels"]], "reorder_levels() (pandas.multiindex method)": [[42, "id109"], [42, "pandas.MultiIndex.reorder_levels"]], "reorder_levels() (pandas.series method)": [[42, "pandas.Series.reorder_levels"]], "repeat() (pandas.index method)": [[42, "pandas.Index.repeat"]], "repeat() (pandas.multiindex method)": [[42, "pandas.MultiIndex.repeat"]], "repeat() (pandas.series method)": [[42, "pandas.Series.repeat"]], "replace() (pandas.dataframe method)": [[42, "pandas.DataFrame.replace"]], "replace() (pandas.series method)": [[42, "pandas.Series.replace"]], "replace() (pandas.timestamp method)": [[42, "pandas.Timestamp.replace"]], "resample() (pandas.dataframe method)": [[42, "pandas.DataFrame.resample"]], "resample() (pandas.series method)": [[42, "pandas.Series.resample"]], "reset_index() (pandas.dataframe method)": [[42, "pandas.DataFrame.reset_index"]], "reset_index() (pandas.series method)": [[42, "pandas.Series.reset_index"]], "rfloordiv() (pandas.dataframe method)": [[42, "pandas.DataFrame.rfloordiv"]], "rfloordiv() (pandas.series method)": [[42, "pandas.Series.rfloordiv"]], "right (pandas.interval attribute)": [[42, "pandas.Interval.right"]], "right (pandas.intervalindex attribute)": [[42, "id83"], [42, "pandas.IntervalIndex.right"]], "rmod() (pandas.dataframe method)": [[42, "pandas.DataFrame.rmod"]], "rmod() (pandas.series method)": [[42, "pandas.Series.rmod"]], "rmul() (pandas.dataframe method)": [[42, "pandas.DataFrame.rmul"]], "rmul() (pandas.series method)": [[42, "pandas.Series.rmul"]], "root (pandas.hdfstore property)": [[42, "pandas.HDFStore.root"]], "round() (pandas.dataframe method)": [[42, "pandas.DataFrame.round"]], "round() (pandas.datetimeindex method)": [[42, "id55"], [42, "pandas.DatetimeIndex.round"]], "round() (pandas.series method)": [[42, "pandas.Series.round"]], "round() (pandas.timedelta method)": [[42, "pandas.Timedelta.round"]], "round() (pandas.timedeltaindex method)": [[42, "id179"], [42, "pandas.TimedeltaIndex.round"]], "round() (pandas.timestamp method)": [[42, "pandas.Timestamp.round"]], "rpow() (pandas.dataframe method)": [[42, "pandas.DataFrame.rpow"]], "rpow() (pandas.series method)": [[42, "pandas.Series.rpow"]], "rsub() (pandas.dataframe method)": [[42, "pandas.DataFrame.rsub"]], "rsub() (pandas.series method)": [[42, "pandas.Series.rsub"]], "rtruediv() (pandas.dataframe method)": [[42, "pandas.DataFrame.rtruediv"]], "rtruediv() (pandas.series method)": [[42, "pandas.Series.rtruediv"]], "searchsorted() (pandas.categoricalindex method)": [[42, "pandas.CategoricalIndex.searchsorted"]], "searchsorted() (pandas.series method)": [[42, "pandas.Series.searchsorted"]], "second (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.second"]], "second (pandas.datetimeindex property)": [[42, "id56"]], "second (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.second"]], "second (pandas.periodindex property)": [[42, "id121"]], "seconds (pandas.timedeltaindex attribute)": [[42, "pandas.TimedeltaIndex.seconds"]], "seconds (pandas.timedeltaindex property)": [[42, "id180"]], "select() (pandas.hdfstore method)": [[42, "pandas.HDFStore.select"]], "select_as_coordinates() (pandas.hdfstore method)": [[42, "pandas.HDFStore.select_as_coordinates"]], "select_as_multiple() (pandas.hdfstore method)": [[42, "pandas.HDFStore.select_as_multiple"]], "select_column() (pandas.hdfstore method)": [[42, "pandas.HDFStore.select_column"]], "select_dtypes() (pandas.dataframe method)": [[42, "pandas.DataFrame.select_dtypes"]], "sem() (pandas.dataframe method)": [[42, "pandas.DataFrame.sem"]], "sem() (pandas.series method)": [[42, "pandas.Series.sem"]], "set_axis() (pandas.dataframe method)": [[42, "pandas.DataFrame.set_axis"]], "set_axis() (pandas.series method)": [[42, "pandas.Series.set_axis"]], "set_categories() (pandas.categorical method)": [[42, "pandas.Categorical.set_categories"]], "set_categories() (pandas.categoricalindex method)": [[42, "id19"], [42, "pandas.CategoricalIndex.set_categories"]], "set_closed() (pandas.intervalindex method)": [[42, "id89"], [42, "pandas.IntervalIndex.set_closed"]], "set_codes() (pandas.multiindex method)": [[42, "id101"], [42, "pandas.MultiIndex.set_codes"]], "set_eng_float_format() (in module pandas)": [[42, "pandas.set_eng_float_format"]], "set_index() (pandas.dataframe method)": [[42, "pandas.DataFrame.set_index"]], "set_levels() (pandas.multiindex method)": [[42, "id97"], [42, "pandas.MultiIndex.set_levels"]], "set_names() (pandas.index method)": [[42, "pandas.Index.set_names"]], "set_ordered() (pandas.categorical method)": [[42, "pandas.Categorical.set_ordered"]], "shape (pandas.dataframe property)": [[42, "pandas.DataFrame.shape"]], "shape (pandas.index property)": [[42, "pandas.Index.shape"]], "sheet_names (pandas.excelfile property)": [[42, "pandas.ExcelFile.sheet_names"]], "sheet_names (pandas.excelfile.odfreader property)": [[42, "pandas.ExcelFile.ODFReader.sheet_names"]], "sheet_names (pandas.excelfile.openpyxlreader property)": [[42, "pandas.ExcelFile.OpenpyxlReader.sheet_names"]], "sheet_names (pandas.excelfile.pyxlsbreader property)": [[42, "pandas.ExcelFile.PyxlsbReader.sheet_names"]], "sheet_names (pandas.excelfile.xlrdreader property)": [[42, "pandas.ExcelFile.XlrdReader.sheet_names"]], "sheets (pandas.excelwriter property)": [[42, "pandas.ExcelWriter.sheets"]], "shift() (pandas.dataframe method)": [[42, "pandas.DataFrame.shift"]], "shift() (pandas.index method)": [[42, "pandas.Index.shift"]], "shift() (pandas.periodindex method)": [[42, "pandas.PeriodIndex.shift"]], "shift() (pandas.series method)": [[42, "pandas.Series.shift"]], "show_versions() (in module pandas)": [[42, "pandas.show_versions"]], "size (pandas.multiindex property)": [[42, "pandas.MultiIndex.size"]], "size (pandas.rangeindex property)": [[42, "pandas.RangeIndex.size"]], "skew() (pandas.dataframe method)": [[42, "pandas.DataFrame.skew"]], "skew() (pandas.series method)": [[42, "pandas.Series.skew"]], "slice_indexer() (pandas.datetimeindex method)": [[42, "pandas.DatetimeIndex.slice_indexer"]], "slice_indexer() (pandas.index method)": [[42, "pandas.Index.slice_indexer"]], "slice_locs() (pandas.index method)": [[42, "pandas.Index.slice_locs"]], "slice_locs() (pandas.multiindex method)": [[42, "pandas.MultiIndex.slice_locs"]], "snap() (pandas.datetimeindex method)": [[42, "id30"], [42, "pandas.DatetimeIndex.snap"]], "sort (pandas.grouper attribute)": [[42, "pandas.Grouper.sort"]], "sort() (pandas.index method)": [[42, "pandas.Index.sort"]], "sort_index() (pandas.dataframe method)": [[42, "pandas.DataFrame.sort_index"]], "sort_index() (pandas.series method)": [[42, "pandas.Series.sort_index"]], "sort_values() (pandas.categorical method)": [[42, "pandas.Categorical.sort_values"]], "sort_values() (pandas.dataframe method)": [[42, "pandas.DataFrame.sort_values"]], "sort_values() (pandas.index method)": [[42, "pandas.Index.sort_values"]], "sort_values() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.sort_values"]], "sort_values() (pandas.series method)": [[42, "pandas.Series.sort_values"]], "sortlevel() (pandas.index method)": [[42, "pandas.Index.sortlevel"]], "sortlevel() (pandas.multiindex method)": [[42, "id110"], [42, "pandas.MultiIndex.sortlevel"]], "sortorder (pandas.multiindex attribute)": [[42, "pandas.MultiIndex.sortorder"]], "sparse (pandas.dataframe attribute)": [[42, "pandas.DataFrame.sparse"]], "sparse (pandas.series attribute)": [[42, "pandas.Series.sparse"]], "stack() (pandas.dataframe method)": [[42, "pandas.DataFrame.stack"]], "start (pandas.rangeindex attribute)": [[42, "pandas.RangeIndex.start"]], "start (pandas.rangeindex property)": [[42, "id141"]], "start_time (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.start_time"]], "start_time (pandas.periodindex property)": [[42, "id134"]], "std() (pandas.dataframe method)": [[42, "pandas.DataFrame.std"]], "std() (pandas.datetimeindex method)": [[42, "id57"], [42, "pandas.DatetimeIndex.std"]], "std() (pandas.series method)": [[42, "pandas.Series.std"]], "std() (pandas.timedeltaindex method)": [[42, "pandas.TimedeltaIndex.std"]], "step (pandas.rangeindex attribute)": [[42, "pandas.RangeIndex.step"]], "step (pandas.rangeindex property)": [[42, "id143"]], "stop (pandas.rangeindex attribute)": [[42, "pandas.RangeIndex.stop"]], "stop (pandas.rangeindex property)": [[42, "id142"]], "str (pandas.categoricaldtype attribute)": [[42, "pandas.CategoricalDtype.str"]], "str (pandas.datetimetzdtype attribute)": [[42, "pandas.DatetimeTZDtype.str"]], "str (pandas.index attribute)": [[42, "pandas.Index.str"]], "str (pandas.intervaldtype attribute)": [[42, "pandas.IntervalDtype.str"]], "str (pandas.perioddtype attribute)": [[42, "pandas.PeriodDtype.str"]], "str (pandas.series attribute)": [[42, "pandas.Series.str"]], "strftime() (pandas.datetimeindex method)": [[42, "id26"], [42, "pandas.DatetimeIndex.strftime"]], "strftime() (pandas.periodindex method)": [[42, "id135"], [42, "pandas.PeriodIndex.strftime"]], "strftime() (pandas.timestamp method)": [[42, "pandas.Timestamp.strftime"]], "strptime() (pandas.timestamp class method)": [[42, "pandas.Timestamp.strptime"]], "style (pandas.dataframe property)": [[42, "pandas.DataFrame.style"]], "sub() (pandas.dataframe method)": [[42, "pandas.DataFrame.sub"]], "sub() (pandas.series method)": [[42, "pandas.Series.sub"]], "subtract() (pandas.dataframe method)": [[42, "pandas.DataFrame.subtract"]], "subtract() (pandas.series method)": [[42, "pandas.Series.subtract"]], "subtype (pandas.intervaldtype attribute)": [[42, "pandas.IntervalDtype.subtype"]], "subtype (pandas.intervaldtype property)": [[42, "id75"]], "subtype (pandas.sparsedtype property)": [[42, "pandas.SparseDtype.subtype"]], "sum() (pandas.dataframe method)": [[42, "pandas.DataFrame.sum"]], "sum() (pandas.series method)": [[42, "pandas.Series.sum"]], "sum() (pandas.timedeltaindex method)": [[42, "pandas.TimedeltaIndex.sum"]], "supported_extensions (pandas.excelwriter property)": [[42, "pandas.ExcelWriter.supported_extensions"]], "swaplevel() (pandas.dataframe method)": [[42, "pandas.DataFrame.swaplevel"]], "swaplevel() (pandas.multiindex method)": [[42, "id108"], [42, "pandas.MultiIndex.swaplevel"]], "swaplevel() (pandas.series method)": [[42, "pandas.Series.swaplevel"]], "symmetric_difference() (pandas.index method)": [[42, "pandas.Index.symmetric_difference"]], "symmetric_difference() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.symmetric_difference"]], "take() (pandas.index method)": [[42, "pandas.Index.take"]], "take() (pandas.multiindex method)": [[42, "pandas.MultiIndex.take"]], "take() (pandas.series method)": [[42, "pandas.Series.take"]], "test() (in module pandas)": [[42, "pandas.test"]], "time (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.time"]], "time (pandas.datetimeindex property)": [[42, "id58"]], "timedelta_range() (in module pandas)": [[42, "pandas.timedelta_range"]], "timetz (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.timetz"]], "timetz (pandas.datetimeindex property)": [[42, "id59"]], "to_datetime() (in module pandas)": [[42, "pandas.to_datetime"]], "to_dict() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_dict"]], "to_dict() (pandas.series method)": [[42, "pandas.Series.to_dict"]], "to_feather() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_feather"]], "to_flat_index() (pandas.index method)": [[42, "pandas.Index.to_flat_index"]], "to_flat_index() (pandas.multiindex method)": [[42, "id105"], [42, "pandas.MultiIndex.to_flat_index"]], "to_frame() (pandas.datetimeindex method)": [[42, "pandas.DatetimeIndex.to_frame"]], "to_frame() (pandas.index method)": [[42, "pandas.Index.to_frame"]], "to_frame() (pandas.multiindex method)": [[42, "id104"], [42, "pandas.MultiIndex.to_frame"]], "to_frame() (pandas.series method)": [[42, "pandas.Series.to_frame"]], "to_frame() (pandas.timedeltaindex method)": [[42, "pandas.TimedeltaIndex.to_frame"]], "to_gbq() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_gbq"]], "to_html() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_html"]], "to_julian_date() (pandas.datetimeindex method)": [[42, "pandas.DatetimeIndex.to_julian_date"]], "to_julian_date() (pandas.timestamp method)": [[42, "pandas.Timestamp.to_julian_date"]], "to_list() (pandas.categorical method)": [[42, "pandas.Categorical.to_list"]], "to_markdown() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_markdown"]], "to_markdown() (pandas.series method)": [[42, "pandas.Series.to_markdown"]], "to_numeric() (in module pandas)": [[42, "pandas.to_numeric"]], "to_numpy() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_numpy"]], "to_orc() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_orc"]], "to_parquet() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_parquet"]], "to_period() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_period"]], "to_period() (pandas.datetimeindex method)": [[42, "id29"], [42, "pandas.DatetimeIndex.to_period"]], "to_period() (pandas.series method)": [[42, "pandas.Series.to_period"]], "to_pickle() (in module pandas)": [[42, "pandas.to_pickle"]], "to_pydatetime() (pandas.datetimeindex method)": [[42, "id60"], [42, "pandas.DatetimeIndex.to_pydatetime"]], "to_pytimedelta() (pandas.timedeltaindex method)": [[42, "id181"], [42, "pandas.TimedeltaIndex.to_pytimedelta"]], "to_records() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_records"]], "to_series() (pandas.datetimeindex method)": [[42, "pandas.DatetimeIndex.to_series"]], "to_series() (pandas.index method)": [[42, "pandas.Index.to_series"]], "to_series() (pandas.timedeltaindex method)": [[42, "pandas.TimedeltaIndex.to_series"]], "to_stata() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_stata"]], "to_string() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_string"]], "to_string() (pandas.series method)": [[42, "pandas.Series.to_string"]], "to_timedelta() (in module pandas)": [[42, "pandas.to_timedelta"]], "to_timestamp() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_timestamp"]], "to_timestamp() (pandas.periodindex method)": [[42, "id118"], [42, "pandas.PeriodIndex.to_timestamp"]], "to_timestamp() (pandas.series method)": [[42, "pandas.Series.to_timestamp"]], "to_tuples() (pandas.intervalindex method)": [[42, "id90"], [42, "pandas.IntervalIndex.to_tuples"]], "to_xml() (pandas.dataframe method)": [[42, "pandas.DataFrame.to_xml"]], "today() (pandas.timestamp class method)": [[42, "pandas.Timestamp.today"]], "tolist() (pandas.categoricalindex method)": [[42, "pandas.CategoricalIndex.tolist"]], "tolist() (pandas.rangeindex method)": [[42, "pandas.RangeIndex.tolist"]], "total_seconds() (pandas.timedeltaindex method)": [[42, "pandas.TimedeltaIndex.total_seconds"]], "transform() (pandas.dataframe method)": [[42, "pandas.DataFrame.transform"]], "transform() (pandas.series method)": [[42, "pandas.Series.transform"]], "transpose() (pandas.dataframe method)": [[42, "pandas.DataFrame.transpose"]], "truediv() (pandas.dataframe method)": [[42, "pandas.DataFrame.truediv"]], "truediv() (pandas.series method)": [[42, "pandas.Series.truediv"]], "truncate() (pandas.multiindex method)": [[42, "pandas.MultiIndex.truncate"]], "type (pandas.arrowdtype property)": [[42, "pandas.ArrowDtype.type"]], "type (pandas.booleandtype property)": [[42, "pandas.BooleanDtype.type"]], "type (pandas.categoricaldtype attribute)": [[42, "pandas.CategoricalDtype.type"]], "type (pandas.datetimetzdtype attribute)": [[42, "pandas.DatetimeTZDtype.type"]], "type (pandas.float32dtype attribute)": [[42, "pandas.Float32Dtype.type"]], "type (pandas.float64dtype attribute)": [[42, "pandas.Float64Dtype.type"]], "type (pandas.int16dtype attribute)": [[42, "pandas.Int16Dtype.type"]], "type (pandas.int32dtype attribute)": [[42, "pandas.Int32Dtype.type"]], "type (pandas.int64dtype attribute)": [[42, "pandas.Int64Dtype.type"]], "type (pandas.int8dtype attribute)": [[42, "pandas.Int8Dtype.type"]], "type (pandas.intervaldtype property)": [[42, "pandas.IntervalDtype.type"]], "type (pandas.perioddtype attribute)": [[42, "pandas.PeriodDtype.type"]], "type (pandas.sparsedtype property)": [[42, "pandas.SparseDtype.type"]], "type (pandas.stringdtype property)": [[42, "pandas.StringDtype.type"]], "type (pandas.uint16dtype attribute)": [[42, "pandas.UInt16Dtype.type"]], "type (pandas.uint32dtype attribute)": [[42, "pandas.UInt32Dtype.type"]], "type (pandas.uint64dtype attribute)": [[42, "pandas.UInt64Dtype.type"]], "type (pandas.uint8dtype attribute)": [[42, "pandas.UInt8Dtype.type"]], "tz (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.tz"]], "tz (pandas.datetimeindex property)": [[42, "id25"]], "tz (pandas.datetimetzdtype attribute)": [[42, "pandas.DatetimeTZDtype.tz"]], "tz (pandas.datetimetzdtype property)": [[42, "id64"]], "tz (pandas.timestamp property)": [[42, "pandas.Timestamp.tz"]], "tz_convert() (pandas.datetimeindex method)": [[42, "id27"], [42, "pandas.DatetimeIndex.tz_convert"]], "tz_convert() (pandas.timestamp method)": [[42, "pandas.Timestamp.tz_convert"]], "tz_localize() (pandas.datetimeindex method)": [[42, "id28"], [42, "pandas.DatetimeIndex.tz_localize"]], "tz_localize() (pandas.timestamp method)": [[42, "pandas.Timestamp.tz_localize"]], "tzinfo (pandas.datetimeindex property)": [[42, "pandas.DatetimeIndex.tzinfo"]], "union() (pandas.index method)": [[42, "pandas.Index.union"]], "unique() (in module pandas)": [[42, "pandas.unique"]], "unique() (pandas.categorical method)": [[42, "pandas.Categorical.unique"]], "unique() (pandas.index method)": [[42, "pandas.Index.unique"]], "unique() (pandas.multiindex method)": [[42, "pandas.MultiIndex.unique"]], "unique() (pandas.series method)": [[42, "pandas.Series.unique"]], "unit (pandas.datetimetzdtype attribute)": [[42, "pandas.DatetimeTZDtype.unit"]], "unit (pandas.datetimetzdtype property)": [[42, "id63"]], "unstack() (pandas.dataframe method)": [[42, "pandas.DataFrame.unstack"]], "unstack() (pandas.series method)": [[42, "pandas.Series.unstack"]], "update() (pandas.dataframe method)": [[42, "pandas.DataFrame.update"]], "update() (pandas.series method)": [[42, "pandas.Series.update"]], "update_dtype() (pandas.categoricaldtype method)": [[42, "pandas.CategoricalDtype.update_dtype"]], "update_dtype() (pandas.sparsedtype method)": [[42, "pandas.SparseDtype.update_dtype"]], "utcfromtimestamp() (pandas.timestamp class method)": [[42, "pandas.Timestamp.utcfromtimestamp"]], "utcnow() (pandas.timestamp class method)": [[42, "pandas.Timestamp.utcnow"]], "validate_categories() (pandas.categoricaldtype static method)": [[42, "pandas.CategoricalDtype.validate_categories"]], "validate_ordered() (pandas.categoricaldtype static method)": [[42, "pandas.CategoricalDtype.validate_ordered"]], "value_counts() (in module pandas)": [[42, "pandas.value_counts"]], "value_counts() (pandas.categorical method)": [[42, "pandas.Categorical.value_counts"]], "value_counts() (pandas.dataframe method)": [[42, "pandas.DataFrame.value_counts"]], "values (pandas.dataframe property)": [[42, "pandas.DataFrame.values"]], "values (pandas.index property)": [[42, "pandas.Index.values"]], "values (pandas.intervalindex attribute)": [[42, "pandas.IntervalIndex.values"]], "values (pandas.multiindex property)": [[42, "pandas.MultiIndex.values"]], "values (pandas.periodindex property)": [[42, "pandas.PeriodIndex.values"]], "values (pandas.series property)": [[42, "pandas.Series.values"]], "var() (pandas.dataframe method)": [[42, "pandas.DataFrame.var"]], "var() (pandas.series method)": [[42, "pandas.Series.var"]], "view() (pandas.index method)": [[42, "pandas.Index.view"]], "view() (pandas.multiindex method)": [[42, "pandas.MultiIndex.view"]], "view() (pandas.series method)": [[42, "pandas.Series.view"]], "walk() (pandas.hdfstore method)": [[42, "pandas.HDFStore.walk"]], "week (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.week"]], "week (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.week"]], "week (pandas.periodindex property)": [[42, "id136"]], "weekday (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.weekday"]], "weekday (pandas.datetimeindex property)": [[42, "id61"]], "weekday (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.weekday"]], "weekday (pandas.periodindex property)": [[42, "id137"]], "weekday() (pandas.timestamp method)": [[42, "pandas.Timestamp.weekday"]], "weekofyear (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.weekofyear"]], "weekofyear (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.weekofyear"]], "weekofyear (pandas.periodindex property)": [[42, "id138"]], "weekofyear (pandas.timestamp attribute)": [[42, "pandas.Timestamp.weekofyear"]], "where() (pandas.dataframe method)": [[42, "pandas.DataFrame.where"]], "where() (pandas.index method)": [[42, "pandas.Index.where"]], "where() (pandas.series method)": [[42, "pandas.Series.where"]], "wide_to_long() (in module pandas)": [[42, "pandas.wide_to_long"]], "year (pandas.datetimeindex attribute)": [[42, "pandas.DatetimeIndex.year"]], "year (pandas.datetimeindex property)": [[42, "id62"]], "year (pandas.periodindex attribute)": [[42, "pandas.PeriodIndex.year"]], "year (pandas.periodindex property)": [[42, "id139"]]}})